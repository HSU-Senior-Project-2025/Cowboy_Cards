// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: flashcards.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgconn"
)

const createFlashcard = `-- name: CreateFlashcard :execresult
INSERT INTO flashcards (front, back, set_id) VALUES ($1, $2, $3)
`

type CreateFlashcardParams struct {
	Front string
	Back  string
	SetID int32
}

func (q *Queries) CreateFlashcard(ctx context.Context, arg CreateFlashcardParams) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, createFlashcard, arg.Front, arg.Back, arg.SetID)
}

const deleteFlashcard = `-- name: DeleteFlashcard :execresult
DELETE FROM flashcards WHERE id = $1
`

func (q *Queries) DeleteFlashcard(ctx context.Context, id int32) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, deleteFlashcard, id)
}

const getFlashcardById = `-- name: GetFlashcardById :one
SELECT id, front, back, set_id, created_at, updated_at FROM flashcards WHERE id = $1
`

func (q *Queries) GetFlashcardById(ctx context.Context, id int32) (Flashcard, error) {
	row := q.db.QueryRow(ctx, getFlashcardById, id)
	var i Flashcard
	err := row.Scan(
		&i.ID,
		&i.Front,
		&i.Back,
		&i.SetID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateFlashcard = `-- name: UpdateFlashcard :execresult
UPDATE flashcards SET front = $1, back = $2, set_id = $3, updated_at = NOW() WHERE id = $4
`

type UpdateFlashcardParams struct {
	Front string
	Back  string
	SetID int32
	ID    int32
}

func (q *Queries) UpdateFlashcard(ctx context.Context, arg UpdateFlashcardParams) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, updateFlashcard,
		arg.Front,
		arg.Back,
		arg.SetID,
		arg.ID,
	)
}
