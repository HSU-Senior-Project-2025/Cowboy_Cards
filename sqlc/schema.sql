CREATE TABLE users (
	id SERIAL,
	username TEXT NOT NULL UNIQUE,
	first_name TEXT NOT NULL,
	last_name TEXT NOT NULL,
	email TEXT NOT NULL UNIQUE,
	password TEXT NOT NULL,
	created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	CHECK (LENGTH(password) >= 8),
	PRIMARY KEY (id)
);

CREATE TABLE flashcard_sets (
	id SERIAL, 
	name TEXT NOT NULL,
	description TEXT NOT NULL,
	created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	PRIMARY KEY (id)
);

CREATE TABLE flashcards (
	id SERIAL, 
	front TEXT NOT NULL,
	back TEXT NOT NULL,
	set_id INTEGER NOT NULL,
	created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	PRIMARY KEY (id),
	FOREIGN KEY (set_id) REFERENCES flashcard_sets(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE classes (
	id SERIAL, 
	name TEXT NOT NULL,
	description TEXT NOT NULL,
	join_code TEXT,
	created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	PRIMARY KEY (id),
	UNIQUE (join_code)
);

CREATE TABLE user_card_history (
	user_id INTEGER NOT NULL,
	card_id INTEGER NOT NULL,
	created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_DATE,
	times_seen INTEGER DEFAULT 0, 
	is_mastered BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY (user_id,card_id),
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (card_id) REFERENCES flashcards(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE class_user (
	user_id INTEGER NOT NULL,
	class_id INTEGER NOT NULL, 
	role TEXT NOT NULL,
	PRIMARY KEY(user_id, class_id),
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE class_set (
	class_id INTEGER,
	set_id INTEGER,
	PRIMARY KEY(class_id, set_id),
	FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (set_id) REFERENCES flashcard_sets(id) ON DELETE CASCADE ON UPDATE CASCADE
);
