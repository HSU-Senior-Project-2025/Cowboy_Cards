{"version":3,"file":"index-CEJ8oP4w.js","sources":["../../src/lib/utils.ts","../../src/components/ui/alert.tsx","../../src/components/ui/button.tsx","../../src/components/ui/card.tsx","../../src/components/ui/input.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/utils/makeHttpCall.ts","../../src/components/auth/AuthForm.tsx","../../src/components/auth/ConfirmResetPass.tsx","../../src/components/auth/ResetPass.tsx","../../src/components/Footer.tsx","../../src/contexts/ThemeContext.tsx","../../src/components/Navbar.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/tooltip.tsx","../../src/hooks/useClassQueries.ts","../../src/components/AddSetToClassDialog.tsx","../../src/components/ClassDetailControls.tsx","../../src/utils/EditableField.tsx","../../src/components/ClassDetailHeader.tsx","../../src/components/ClassDetailTabs.tsx","../../src/components/FlashcardSetList.tsx","../../src/components/Leaderboard.tsx","../../src/components/LeaderboardTab.tsx","../../src/components/StudentList.tsx","../../src/components/StudentTab.tsx","../../src/pages/ClassDetail.tsx","../../src/pages/CreateClass.tsx","../../src/pages/CreateSet.tsx","../../src/hooks/useFlashcardQueries.ts","../../src/components/FlashCard.tsx","../../src/components/ui/carousel.tsx","../../src/pages/Flashcard.tsx","../../src/pages/Home.tsx","../../src/pages/Index.tsx","../../src/pages/NotFound.tsx","../../src/pages/PublicCards.tsx","../../src/pages/PublicClasses.tsx","../../src/components/SetCardList.tsx","../../src/components/SetOverviewControls.tsx","../../src/components/SetOverviewHeader.tsx","../../src/hooks/useSetQueries.ts","../../src/pages/SetOverview.tsx","../../src/utils/InfoRow.tsx","../../src/components/UserAccountFirstRow.tsx","../../src/components/LoginStreakCard.tsx","../../src/components/UserAccountSecondRow.tsx","../../src/pages/UserAccount.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from 'react';\n\nimport type { ToastActionElement, ToastProps } from '@/components/ui/toast';\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: 'ADD_TOAST',\n  UPDATE_TOAST: 'UPDATE_TOAST',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  REMOVE_TOAST: 'REMOVE_TOAST',\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType['ADD_TOAST'];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType['UPDATE_TOAST'];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType['DISMISS_TOAST'];\n      toastId?: ToasterToast['id'];\n    }\n  | {\n      type: ActionType['REMOVE_TOAST'];\n      toastId?: ToasterToast['id'];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: 'REMOVE_TOAST',\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case 'UPDATE_TOAST':\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case 'DISMISS_TOAST': {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case 'REMOVE_TOAST':\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, 'id'>;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: 'UPDATE_TOAST',\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });\n\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\n  };\n}\n\nexport { toast, useToast };\n","type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\ntype CredentialOptions = 'include' | 'omit' | 'same-origin';\n\n// Interface defining the structure of options that can be passed to fetch requests\ninterface FetchOptions {\n  method: HttpMethod; // eslint-disable-next-line\n  headers: any;\n  credentials?: CredentialOptions;\n  body?: string; //JSON\n}\n\nconst defaultOpts: FetchOptions = {\n  method: 'GET',\n  headers: {},\n  credentials: 'include', //dev only, remove in prod same origin\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE;\n\n/**\n * Universal fetch utility for making HTTP requests\n * This is a wrapper around the native fetch API that provides consistent error handling\n * and response parsing\n * Can return any type of data\n *\n * @param url The URL to fetch from\n * @param options Request options including method, headers, and body\n * @returns Promise with the parsed response data\n */\nexport async function makeHttpCall<T>(\n  url: string = '',\n  options: FetchOptions = defaultOpts\n): Promise<T> {\n  const finalOpts = {\n    ...defaultOpts,\n    ...options,\n  };\n  try {\n    // Make the actual HTTP request\n    const response = await fetch(API_BASE + url, finalOpts);\n\n    // Check if the req failed: 4xx, 5xx\n    if (!response.ok) {\n      console.log('resp', response);\n      // Handle specific auth error types\n      //   if (data.code === 'duplicate_email') {\n      //     throw new Error('This email is already registered');\n      //   } else if (data.code === 'duplicate_username') {\n      //     throw new Error('This username is already taken');\n      //   } else if (data.code === 'invalid_credentials') {\n      //     throw new Error('Invalid email or password');\n      //   } else {\n      //     throw new Error(data.message || 'Authentication failed');\n      //   }\n      const msg = await response.text();\n\n      throw new Error(\n        `HTTP error! Status: ${response.status}, Message: ${msg}`\n      );\n    }\n\n    // Handle 204 No Content specifically\n    if (response.status === 204) {\n      return null as T; // Return null or appropriate value for no content\n    }\n\n    // For other successful responses, parse JSON\n    const data = await response.json();\n    return data as T;\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n}\n","import { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/components/ui/use-toast';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { useIonRouter } from '@ionic/react';\nimport { AlertCircle, LogIn } from 'lucide-react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Login form fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Additional signup form fields\n  const [username, setUsername] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  // Form validation\n  const [errors, setErrors] = useState<{\n    email?: string;\n    username?: string;\n    password?: string;\n    general?: string;\n  }>({});\n\n  const ionRouter = useIonRouter();\n  const { toast } = useToast();\n\n  // Basic validation before submitting\n  const validateForm = () => {\n    const newErrors: {\n      email?: string;\n      username?: string;\n      password?: string;\n    } = {};\n    let isValid = true;\n\n    // Email validation\n    if (!email) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Email is invalid';\n      isValid = false;\n    }\n\n    // Password validation\n    if (!password) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n\n    // Username validation (only for signup)\n    if (!isLogin && !username) {\n      newErrors.username = 'Username is required';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      let data;\n\n      if (isLogin) {\n        // Login request\n        data = await makeHttpCall(`/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        });\n      } else {\n        // Signup request\n        data = await makeHttpCall(`/signup`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            username,\n            email,\n            password,\n            first_name: firstName,\n            last_name: lastName,\n          }),\n        });\n      }\n\n      // Show success message\n      toast({\n        duration: 8000,\n        title: isLogin ? 'Welcome back!' : 'Account created',\n        description: isLogin\n          ? 'You have been successfully logged in.'\n          : 'Your account has been created successfully.',\n      });\n\n      // Navigate to the home page using Ionic's router\n      ionRouter.push('/home');\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setErrors(error);\n\n      // If no specific error was set, set a general error\n      if (Object.keys(errors).length === 0) {\n        setErrors({\n          general:\n            error.message || 'An unexpected error occurred. Please try again.',\n        });\n      }\n\n      toast({\n        title: 'Authentication failed',\n        description:\n          error.message || 'Please check your credentials and try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setErrors({});\n    if (isLogin) {\n      setUsername('');\n      setFirstName('');\n      setLastName('');\n    } else {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <Card className=\"w-11/12 max-w-[350px] mb-8\">\n      <CardHeader>\n        <CardTitle className=\"text-4xl tracking-wide font-smokum font-bold\">\n          {isLogin ? 'Welcome back' : 'Create account'}\n        </CardTitle>\n        <CardDescription>\n          {isLogin\n            ? 'Enter your credentials to continue'\n            : 'Sign up for a new account'}\n        </CardDescription>\n      </CardHeader>\n      <form onSubmit={handleSubmit}>\n        <CardContent className=\"space-y-4\">\n          {errors.general && (\n            <Alert variant=\"destructive\" className=\"mb-4\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{errors.general}</AlertDescription>\n            </Alert>\n          )}\n\n          {!isLogin && (\n            <>\n              <div className=\"space-y-2\">\n                <Label\n                  className=\"text-3xl tracking-wide font-smokum font-bold\"\n                  htmlFor=\"username\"\n                >\n                  Username\n                </Label>\n                <Input\n                  id=\"username\"\n                  type=\"text\"\n                  placeholder=\"johndoe\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                  className={errors.username ? 'border-red-500' : ''}\n                />\n                {errors.username && (\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.username}</p>\n                )}\n              </div>\n              <div className=\"space-y-2\">\n                <Label\n                  className=\"text-3xl tracking-wide font-smokum font-bold\"\n                  htmlFor=\"firstName\"\n                >\n                  First Name\n                </Label>\n                <Input\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"John\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label\n                  className=\"text-3xl tracking-wide font-smokum font-bold\"\n                  htmlFor=\"lastName\"\n                >\n                  Last Name\n                </Label>\n                <Input\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Doe\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </div>\n            </>\n          )}\n          <div className=\"space-y-2\">\n            <Label\n              className=\"text-3xl tracking-wide font-smokum font-bold\"\n              htmlFor=\"email\"\n            >\n              Email\n            </Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"name@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className={errors.email ? 'border-red-500' : ''}\n            />\n            {errors.email && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>\n            )}\n          </div>\n          <div className=\"space-y-2\">\n            <Label\n              className=\"text-3xl tracking-wide font-smokum font-bold\"\n              htmlFor=\"password\"\n            >\n              Password\n            </Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className={errors.password ? 'border-red-500' : ''}\n            />\n            {errors.password && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>\n            )}\n            {!isLogin && (\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Password must be at least 8 characters long\n              </p>\n            )}\n          </div>\n          {isLogin && (\n            <Link to=\"/reset-password\" className=\"text-sm text-primary\">\n              Forgot password?\n            </Link>\n          )}\n        </CardContent>\n        <CardFooter className=\"flex flex-col space-y-4\">\n          <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n            <LogIn className=\"mr-2 h-4 w-4\" />\n            {isLoading\n              ? isLogin\n                ? 'Signing in...'\n                : 'Signing up...'\n              : isLogin\n              ? 'Sign in'\n              : 'Sign up'}\n          </Button>\n          <Button\n            variant=\"link\"\n            type=\"button\"\n            onClick={() => {\n              setIsLogin(!isLogin);\n              resetForm();\n            }}\n            className=\"text-sm\"\n            disabled={isLoading}\n          >\n            {isLogin\n              ? 'Need an account? Sign up'\n              : 'Already have an account? Sign in'}\n          </Button>\n        </CardFooter>\n      </form>\n    </Card>\n  );\n};\n","import { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/components/ui/use-toast';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { IonContent, IonPage } from '@ionic/react';\nimport { AlertCircle } from 'lucide-react';\nimport { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst ConfirmResetPass = () => {\n  const location = useLocation<{ email: string }>();\n  const email = location.state?.email || '';\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<{\n    password?: string;\n    confirmPassword?: string;\n    token?: string;\n    general?: string;\n  }>({});\n\n  const history = useHistory();\n  const { toast } = useToast();\n\n  const validateForm = () => {\n    const newErrors: {\n      password?: string;\n      confirmPassword?: string;\n      token?: string;\n    } = {};\n    let isValid = true;\n\n    // Token validation\n    if (!token) {\n      newErrors.token = 'Reset token is required';\n      isValid = false;\n    }\n\n    // Password validation\n    if (!password) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n\n    // Confirm password validation\n    if (!confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n      isValid = false;\n    } else if (password !== confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n      isValid = false;\n    }\n\n    setErrors({ ...errors, ...newErrors });\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      // Make API call to reset password\n      await makeHttpCall('/reset-password', {\n        method: 'POST',\n        headers: {\n          password,\n          token,\n          email,\n        },\n      });\n\n      toast({\n        title: 'Password reset successful',\n        description:\n          'Your password has been reset. You can now log in with your new password.',\n      });\n\n      // Redirect to login page\n      history.push('/');\n    } catch (error) {\n      console.error('Password reset error:', error);\n\n      // Handle specific error types\n      if (error.message === 'Invalid token') {\n        setErrors({ token: 'Invalid or expired token' });\n      } else {\n        setErrors({\n          general:\n            error.message ||\n            'An error occurred during password reset. Please try again.',\n        });\n      }\n\n      toast({\n        title: 'Password reset failed',\n        description: error.message || 'Please check your inputs and try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n          <Card className=\"w-[350px]\">\n            <CardHeader>\n              <CardTitle>Reset Your Password</CardTitle>\n              <CardDescription>\n                Enter your new password and the reset token sent to your email\n              </CardDescription>\n            </CardHeader>\n            <form onSubmit={handleSubmit}>\n              <CardContent className=\"space-y-4\">\n                {errors.general && (\n                  <Alert variant=\"destructive\" className=\"mb-4\">\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <AlertDescription>{errors.general}</AlertDescription>\n                  </Alert>\n                )}\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"token\">Reset Token</Label>\n                  <Input\n                    id=\"token\"\n                    type=\"text\"\n                    placeholder=\"Enter the token from your email\"\n                    value={token}\n                    onChange={(e) => setToken(e.target.value)}\n                    required\n                    className={errors.token ? 'border-red-500' : ''}\n                  />\n                  {errors.token && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.token}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\">New Password</Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Enter your new password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    className={errors.password ? 'border-red-500' : ''}\n                  />\n                  {errors.password && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {errors.password}\n                    </p>\n                  )}\n                  <p className=\"text-xs text-gray-500\">\n                    Password must be at least 8 characters long\n                  </p>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                  <Input\n                    id=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Confirm your new password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                    className={errors.confirmPassword ? 'border-red-500' : ''}\n                  />\n                  {errors.confirmPassword && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {errors.confirmPassword}\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex flex-col space-y-4\">\n                <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                  {isLoading ? 'Processing...' : 'Reset password'}\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ConfirmResetPass;\n","import { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/components/ui/use-toast';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { IonContent, IonPage } from '@ionic/react';\nimport { AlertCircle } from 'lucide-react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ResetPass = () => {\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState<{ email?: string; general?: string }>(\n    {}\n  );\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { toast } = useToast();\n  const history = useHistory();\n\n  const validateForm = () => {\n    const newErrors: { email?: string } = {};\n    let isValid = true;\n\n    if (!email) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Email is invalid';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      // Make API call to send reset token\n      await makeHttpCall('/send-reset-password-token', {\n        method: 'POST',\n        headers: {\n          email,\n        },\n      });\n\n      toast({\n        title: 'Reset token sent',\n        description:\n          'If the email exists in our system, a reset token has been sent to it.',\n      });\n\n      // Navigate to the confirmation page with the email\n      history.push('/confirm-reset-password', { email });\n    } catch (error) {\n      console.error('Reset password request error:', error);\n\n      // Handle specific error types\n      let errorMessage = 'An unexpected error occurred. Please try again.';\n\n      if (error.message) {\n        if (error.message.includes('Invalid email')) {\n          errorMessage = 'The provided email address is not registered.';\n        } else if (error.message.includes('Database connection error')) {\n          errorMessage =\n            'Unable to connect to the server. Please try again later.';\n        } else {\n          errorMessage = error.message;\n        }\n      }\n\n      setErrors({\n        general: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonContent>\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n          <Card className=\"w-11/12 max-w-[350px]\">\n            <CardHeader>\n              <CardTitle className=\"text-4xl tracking-wide font-smokum font-bold\">\n                Reset password\n              </CardTitle>\n              <CardDescription>\n                Enter your email to reset your password\n              </CardDescription>\n            </CardHeader>\n            <form onSubmit={handleSubmit}>\n              <CardContent className=\"space-y-4\">\n                {errors.general && (\n                  <Alert variant=\"destructive\" className=\"mb-4\">\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <AlertDescription>{errors.general}</AlertDescription>\n                  </Alert>\n                )}\n                <div className=\"space-y-2\">\n                  <Label\n                    className=\"text-3xl tracking-wide font-smokum font-bold\"\n                    htmlFor=\"email\"\n                  >\n                    Email\n                  </Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"name@example.com\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    className={errors.email ? 'border-red-500' : ''}\n                  />\n                  {errors.email && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex flex-col space-y-4\">\n                <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                  {isLoading ? 'Sending...' : 'Send reset token'}\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ResetPass;\n","import {\n  IonButton,\n  IonButtons,\n  IonFooter,\n  IonIcon,\n  IonText,\n  IonToolbar,\n} from '@ionic/react';\nimport { home } from 'ionicons/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n\n  // Skip rendering on Index page\n  if (\n    location.pathname === '/' ||\n    location.pathname === '/reset-password' ||\n    location.pathname === '/confirm-reset-password'\n  ) {\n    return null;\n  }\n\n  return (\n    <IonFooter className='hidden md:flex ion-no-border'>\n      <IonToolbar>\n        <IonButtons slot='start'>\n          <IonButton>\n            <Link to='/home'>\n              <IonIcon icon={home} />\n            </Link>\n          </IonButton>\n        </IonButtons>\n\n        {/*/!* Add Button *!/*/}\n        {/*<IonButtons slot=\"primary\">*/}\n        {/*    <IonButton expand=\"full\" routerLink=\"/create\">*/}\n        {/*        <IonIcon icon={addCircle} />*/}\n        {/*    </IonButton>*/}\n        {/*</IonButtons>*/}\n\n        {/*/!* Settings Button *!/*/}\n        {/*<IonButtons slot=\"end\">*/}\n        {/*    <IonButton routerLink=\"/settings\">*/}\n        {/*        <IonIcon icon={settings} />*/}\n        {/*    </IonButton>*/}\n        {/*</IonButtons>*/}\n\n        <IonText className='mx-auto text-center text-sm'>\n          &copy;Cowboy Cards 2025. Built for learning and fun.\n        </IonText>\n      </IonToolbar>\n    </IonFooter>\n  );\n};\n\nexport { Footer };\n","import { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    // Will check localStorage first, if not found, will use 'light' as default\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    return savedTheme || 'light';\n  });\n\n  useEffect(() => {\n    // Update localStorage\n    localStorage.setItem('theme', theme);\n\n    // Update DOM\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n      document.body.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      document.body.classList.remove('dark');\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","import { useTheme } from '@/contexts/ThemeContext';\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonList,\n  IonMenu,\n  IonMenuToggle,\n  IonPopover,\n  IonToolbar,\n  useIonRouter,\n} from '@ionic/react';\nimport { add, close, menu, moon, personCircle, sunny } from 'ionicons/icons';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [popoverEvent, setPopoverEvent] = useState(null);\n  const location = useLocation();\n  const ionRouter = useIonRouter();\n  const { theme, setTheme } = useTheme();\n\n  // Skip rendering on Index page\n  if (\n    location.pathname === '/' ||\n    location.pathname === '/reset-password' ||\n    location.pathname === '/confirm-reset-password'\n  ) {\n    return null;\n  }\n\n  const openPopover = (event) => setPopoverEvent(event.nativeEvent);\n  const closePopover = () => setPopoverEvent(null);\n\n  const handleMenuItemClick = (route) => {\n    ionRouter.push(route);\n    document.querySelector('ion-menu')?.close();\n  };\n\n  const toggleDarkMode = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  return (\n    <>\n      <IonMenu side='start' contentId='main-content'>\n        <IonHeader>\n          <IonToolbar>\n            <IonButtons slot='start'>\n              <IonMenuToggle>\n                <IonButton>\n                  <IonIcon icon={close} />\n                </IonButton>\n              </IonMenuToggle>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonList>\n            <IonItem button onClick={() => handleMenuItemClick('/home')}>\n              My Dashboard\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/public-cards')}\n            >\n              Public Cards\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/public-classes')}\n            >\n              Public Classes\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/user-account')}\n            >\n              My Account\n            </IonItem>\n          </IonList>\n        </IonContent>\n      </IonMenu>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot='start'>\n            <IonMenuToggle>\n              <IonButton>\n                <IonIcon icon={menu} />\n              </IonButton>\n            </IonMenuToggle>\n          </IonButtons>\n\n          <div\n            className='cursor-pointer'\n            onClick={() => ionRouter.push('/home')}\n          >\n            <img\n              src='/Spirit-Cowboy-Profile-Only.png'\n              alt='Cowboy Cards Logo'\n              className='h-8 w-auto me:hidden block'\n            />\n            <h2 className='hidden me:block text-2xl sm:text-3xl md:text-4xl text-ellipsis overflow-hidden whitespace-nowrap font-ewert text-[color:--ion-color-primary]'>\n              Cowboy Cards\n            </h2>\n            {/* <IonTitle\n              color=\"primary\"\n              className=\"hidden xs:block text-2xl sm:text-3xl lg:text-4xl font-ewert\"\n            >\n              Cowboy Cards\n            </IonTitle> */}\n          </div>\n\n          <IonButtons slot='end'>\n            <IonButton onClick={openPopover}>\n              <IonIcon icon={add} className='text-[32px] stroke-[2]' />\n            </IonButton>\n            <IonPopover\n              event={popoverEvent}\n              isOpen={!!popoverEvent}\n              onDidDismiss={closePopover}\n            >\n              <IonContent>\n                <IonList>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      ionRouter.push('/create-set');\n                    }}\n                  >\n                    Create Set\n                  </IonItem>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      ionRouter.push('/create-class');\n                    }}\n                  >\n                    Create Class\n                  </IonItem>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      ionRouter.push('/public-classes');\n                    }}\n                  >\n                    Join Class\n                  </IonItem>\n                </IonList>\n              </IonContent>\n            </IonPopover>\n            <IonButton fill='clear' onClick={toggleDarkMode}>\n              <IonIcon\n                slot='icon-only'\n                icon={theme === 'dark' ? sunny : moon}\n              />\n            </IonButton>\n          </IonButtons>\n\n          <IonButtons slot='end'>\n            <IonButton routerLink='/user-account'>\n              <IonIcon icon={personCircle} size='large' />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n    </>\n  );\n};\n\nexport { Navbar };\n","import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import type {\n  Class,\n  FlashcardSet,\n  GetClassScoresRow,\n  ListClassesOfAUserRow,\n  ListMembersOfAClassRow,\n  ListSetsOfAUserRow,\n} from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\n// Class details hook\nexport function useClassDetails(id: string) {\n  return useQuery<Class, Error>({\n    queryKey: ['class', id],\n    queryFn: () =>\n      makeHttpCall<Class>(`/api/classes/`, {\n        method: 'GET',\n        headers: { id },\n      }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Class flashcard sets hook\nexport function useClassSets(id: string) {\n  return useQuery<FlashcardSet[], Error>({\n    queryKey: ['classSets', id],\n    queryFn: () =>\n      makeHttpCall<FlashcardSet[]>(`/api/class_set/list_sets`, {\n        method: 'GET',\n        headers: { id },\n      }),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\n// Class members hook\nexport function useClassMembers(id: string) {\n  return useQuery<ListMembersOfAClassRow[], Error>({\n    queryKey: ['classMembers', id],\n    queryFn: () =>\n      makeHttpCall<ListMembersOfAClassRow[]>(`/api/class_user/members`, {\n        method: 'GET',\n        headers: { class_id: id },\n      }),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\n// Class leaderboard hook\nexport function useClassLeaderboard(id: string) {\n  return useQuery<GetClassScoresRow[], Error>({\n    queryKey: ['classLeaderboard', id],\n    queryFn: () =>\n      makeHttpCall<GetClassScoresRow[]>(`/api/classes/leaderboard`, {\n        method: 'GET',\n        headers: { id },\n      }),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\n// User's available sets hook\nexport function useUserSets() {\n  return useQuery<ListSetsOfAUserRow[], Error>({\n    queryKey: ['userSets'],\n    queryFn: () => makeHttpCall<ListSetsOfAUserRow[]>(`/api/set_user/list`),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\n// User's classes hook\nexport function useUserClasses() {\n  return useQuery<ListClassesOfAUserRow[], Error>({\n    queryKey: ['userClasses'],\n    queryFn: () =>\n      makeHttpCall<ListClassesOfAUserRow[]>('/api/class_user/classes'),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Class update mutation\ntype UpdateClassArgs = { id: string; field: string; value: string };\n\nexport function useUpdateClass() {\n  const queryClient = useQueryClient();\n\n  return useMutation<Class, Error, UpdateClassArgs>({\n    mutationFn: ({ id, field, value }) =>\n      makeHttpCall<Class>(`/api/classes/${field}`, {\n        method: 'PUT',\n        headers: { id, [field]: value },\n      }),\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['class', variables.id] });\n    },\n  });\n}\n\n// Delete student from class mutation\nexport function useDeleteStudent(class_id: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, number>({\n    mutationFn: (studentId) =>\n      makeHttpCall(`/api/class_user/`, {\n        method: 'DELETE',\n        headers: { student_id: studentId, class_id },\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['classMembers', class_id] });\n    },\n  });\n}\n\n// Add set to class mutation\ntype AddSetToClassArgs = { classId: string; setId: number };\n\nexport function useAddSetToClass() {\n  const queryClient = useQueryClient();\n\n  return useMutation<string, Error, AddSetToClassArgs>({\n    mutationFn: ({ classId, setId }) =>\n      makeHttpCall<string>(`/api/class_set/`, {\n        method: 'POST',\n        headers: {\n          class_id: classId,\n          set_id: setId.toString(),\n        },\n      }),\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({\n        queryKey: ['classSets', variables.classId],\n      });\n    },\n  });\n}\n","import { useAddSetToClass, useUserSets } from '@/hooks/useClassQueries';\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonModal,\n  IonRadio,\n  IonRadioGroup,\n  IonSpinner,\n  IonText,\n  IonTitle,\n  IonToolbar,\n  useIonToast,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\n\nconst AddSetToClassDialog = (props) => {\n  const [selectedSetId, setSelectedSetId] = useState<number | null>(null);\n  const [presentToast] = useIonToast();\n\n  // Use React Query hooks\n  const {\n    data: userSets = [],\n    isLoading: isLoadingUserSets,\n    error: userSetsError,\n  } = useUserSets();\n\n  const addSetMutation = useAddSetToClass();\n  console.log('userSets', userSets);\n  console.log('addSetMutation', addSetMutation.data);\n\n  // Filter sets that are not already in the class\n  const availableSets = Array.isArray(userSets)\n    ? userSets.filter((set) =>\n        !Array.isArray(props.existingSetIds)\n          ? true\n          : !props.existingSetIds.includes(set.SetID)\n      )\n    : [];\n\n  // Reset selected set when dialog opens/closes\n  useEffect(() => {\n    if (!props.isOpen) {\n      setSelectedSetId(null);\n    }\n  }, [props.isOpen]);\n\n  const handleAddSet = async () => {\n    if (!selectedSetId || !props.classId) {\n      presentToast({\n        message: 'Please select a set to add.',\n        duration: 2000,\n        color: 'warning',\n      });\n      return;\n    }\n\n    try {\n      await addSetMutation.mutateAsync({\n        classId: props.classId,\n        setId: selectedSetId,\n      });\n\n      presentToast({\n        message: 'Set added successfully!',\n        duration: 2000,\n        color: 'success',\n      });\n\n      props.onDidDismiss();\n    } catch (err) {\n      const errorMessage = `Failed to add set: ${\n        err instanceof Error ? err.message : 'Unknown error'\n      }`;\n\n      presentToast({\n        message: errorMessage,\n        duration: 3000,\n        color: 'danger',\n      });\n    }\n  };\n\n  const isLoading = isLoadingUserSets || addSetMutation.isPending;\n  const error = userSetsError || addSetMutation.error;\n  console.log('availableSets', availableSets);\n\n  return (\n    <IonModal isOpen={props.isOpen} onDidDismiss={props.onDidDismiss}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Add Set to Class</IonTitle>\n          <IonButtons slot=\"end\">\n            <IonButton onClick={props.onDidDismiss} color=\"medium\">\n              Cancel\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        {isLoading && !availableSets?.length ? (\n          <div className=\"flex justify-center items-center h-full\">\n            <IonSpinner name=\"circular\" />\n            <span className=\"ml-2\">Loading your sets...</span>\n          </div>\n        ) : error ? (\n          <IonText color=\"danger\">\n            <p>{error instanceof Error ? error.message : String(error)}</p>\n          </IonText>\n        ) : availableSets?.length === 0 ? (\n          <p className=\"text-center text-gray-500 mt-4\">\n            You have no available sets to add to this class. Create a new set or\n            check if all your sets are already added.\n          </p>\n        ) : (\n          <IonRadioGroup\n            value={selectedSetId}\n            onIonChange={(e) => {\n              setSelectedSetId(Number(e.detail.value));\n            }}\n          >\n            <IonList>\n              {availableSets?.map((set) => (\n                <IonItem key={set.SetID}>\n                  <IonRadio slot=\"start\" key={set.SetID} value={set.SetID} />\n                  <IonLabel>\n                    <h2>{set.SetName}</h2>\n                    <p className=\"text-sm text-gray-500\">\n                      {set.SetDescription}\n                    </p>\n                  </IonLabel>\n                </IonItem>\n              ))}\n            </IonList>\n          </IonRadioGroup>\n        )}\n\n        {error && availableSets?.length > 0 && (\n          <IonText color=\"danger\" className=\"block mt-4\">\n            <p>{error instanceof Error ? error.message : String(error)}</p>\n          </IonText>\n        )}\n      </IonContent>\n      {!isLoading && availableSets?.length > 0 && (\n        <div className=\"ion-padding\">\n          <IonButton\n            expand=\"block\"\n            onClick={handleAddSet}\n            disabled={!selectedSetId || addSetMutation.isPending}\n            className=\"ion-margin-bottom\"\n          >\n            {addSetMutation.isPending ? (\n              <IonSpinner name=\"dots\" />\n            ) : (\n              'Add Selected Set'\n            )}\n          </IonButton>\n        </div>\n      )}\n    </IonModal>\n  );\n};\n\nexport default AddSetToClassDialog;\n","import { IonButton, IonIcon } from '@ionic/react';\nimport { addOutline, createOutline } from 'ionicons/icons';\n\nconst ClassDetailControls = (props) => {\n  return (\n    <div className=\"flex justify-between items-center mb-4\">\n      {props.isTeacher && (\n        <div className=\"gap-2\">\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            style={{ '--border-radius': '0.5rem' }}\n            onClick={props.onAddSetClick}\n            color=\"primary\"\n            disabled={!props.classId}\n          >\n            <IonIcon slot=\"start\" icon={addOutline} />\n            Add Existing Set\n          </IonButton>\n\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            style={{ '--border-radius': '0.5rem' }}\n            routerLink={`/create-set?classId=${props.classId}`}\n            color=\"primary\"\n            disabled={!props.classId}\n          >\n            <IonIcon slot=\"start\" icon={createOutline} />\n            Create New Set\n          </IonButton>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClassDetailControls;\n","import { IonInput, IonItem } from '@ionic/react';\n\nexport const EditableField = (props) => {\n  return (\n    <div>\n      <IonItem>\n        <IonInput\n          type={props.type}\n          label={props.label}\n          name={props.name}\n          value={props.value}\n          onIonChange={props.onChange}\n        />\n      </IonItem>\n      {props.error && (\n        <p className=\"text-red-500 text-xs mt-1\">{props.error}</p>\n      )}\n    </div>\n  );\n};\n","import { EditableField } from '@/utils/EditableField';\nimport { IonButton, IonIcon } from '@ionic/react';\nimport { arrowBackOutline, createOutline } from 'ionicons/icons';\n\nconst ClassDetailHeader = (props) => {\n  return (\n    <>\n      {props.isEditing ? (\n        <>\n          <EditableField\n            type=\"text\"\n            label=\"Class Name\"\n            name=\"class_name\"\n            value={props.updatedInfo.class_name}\n            onChange={props.handleChange}\n            error={props.formErrors.className}\n          />\n          <EditableField\n            type=\"text\"\n            label=\"Class Description\"\n            name=\"class_description\"\n            value={props.updatedInfo.class_description}\n            onChange={props.handleChange}\n            error={props.formErrors.classDescription}\n          />\n          {props.formErrors.general && (\n            <p className=\"text-red-500 text-sm mt-1\">\n              {props.formErrors.general}\n            </p>\n          )}\n          <div className=\"mt-4 flex justify-end space-x-2\">\n            <IonButton onClick={props.handleSave} color=\"primary\" size=\"small\">\n              Save\n            </IonButton>\n            <IonButton onClick={props.handleCancel} color=\"medium\" size=\"small\">\n              Cancel\n            </IonButton>\n          </div>\n        </>\n      ) : props.loading ? (\n        <div>Loading...</div>\n      ) : props.classData ? (\n        <>\n          <div className=\"flex flex-col\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-2xl font-bold\">\n                {props.loading ? 'Loading...' : props.classData.ClassName}\n              </h1>\n              {props.isTeacher && !props.isEditing && (\n                <IonIcon\n                  icon={createOutline}\n                  size=\"large\"\n                  color=\"primary\"\n                  className=\"hover:transform hover:scale-110 cursor-pointer p-2\"\n                  onClick={props.handleEdit}\n                ></IonIcon>\n              )}\n            </div>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              {props.loading ? 'Loading...' : props.classData.ClassDescription}\n            </p>\n            <IonButton\n              className=\"rounded-lg mt-4 w-auto inline-block\"\n              style={{\n                '--border-radius': '0.5rem',\n                maxWidth: 'fit-content',\n              }}\n              routerLink=\"/home\"\n              color=\"primary\"\n            >\n              <IonIcon slot=\"start\" icon={arrowBackOutline} />\n              Back\n            </IonButton>\n          </div>\n        </>\n      ) : (\n        <h1>Class details unavailable</h1>\n      )}\n    </>\n  );\n};\n\nexport default ClassDetailHeader;\n","import { IonIcon, IonLabel, IonSegment, IonSegmentButton } from '@ionic/react';\nimport { bookOutline, trophyOutline, peopleOutline } from 'ionicons/icons';\n\nconst ClassDetailTabs = (props) => {\n  return (\n    <IonSegment\n      value={props.selectedTab}\n      onIonChange={(e) => props.onTabChange(e.detail.value as string)}\n      className=\"w-full mb-6\"\n    >\n      <IonSegmentButton value=\"flashcards\">\n        <IonIcon icon={bookOutline} className=\"mr-2\" />\n        <IonLabel>Flashcard Sets</IonLabel>\n      </IonSegmentButton>\n      <IonSegmentButton value=\"leaderboard\">\n        <IonIcon icon={trophyOutline} className=\"mr-2\" />\n        <IonLabel>Leaderboard</IonLabel>\n      </IonSegmentButton>\n      <IonSegmentButton value=\"students\">\n        <IonIcon icon={peopleOutline} className=\"mr-2\" />\n        <IonLabel>Students</IonLabel>\n      </IonSegmentButton>\n    </IonSegment>\n  );\n};\n\nexport default ClassDetailTabs;\n","import type { Flashcard } from '@/types/globalTypes';\nimport {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonCol,\n  IonGrid,\n  IonRow,\n} from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst FlashcardCarousel = (props) => {\n  const history = useHistory();\n  const [flashcards, setFlashcards] = useState<Flashcard[]>([]);\n\n  return (\n    <div className=\"mt-6\">\n      {props.loading ? (\n        <div>Loading...</div>\n      ) : props.flashcardSets?.length ? (\n        <IonGrid>\n          <IonRow>\n            {props.flashcardSets\n              .sort((a, b) => a.ID - b.ID)\n              ?.map((set) => (\n                <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"4\" key={set.ID}>\n                  <IonCard\n                    className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-all duration-200 rounded-lg border shadow-sm\"\n                    onClick={() =>\n                      history.push(`/set-overview/${set.ID}`, {\n                        fromClassID: props.classID,\n                      })\n                    }\n                  >\n                    <IonCardHeader>\n                      <IonCardTitle className=\"text-lg font-semibold\">\n                        {set.SetName}\n                      </IonCardTitle>\n                    </IonCardHeader>\n                    <IonCardContent>\n                      <p className=\"text-muted-foreground mb-2\">\n                        {set.SetDescription}\n                      </p>\n                    </IonCardContent>\n                  </IonCard>\n                </IonCol>\n              ))}\n          </IonRow>\n        </IonGrid>\n      ) : (\n        <p>\n          No flashcard sets available. Create one or add an existing set to your\n          class.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default FlashcardCarousel;\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonItem,\n  IonList,\n} from '@ionic/react';\nimport { motion } from 'framer-motion';\n\nconst Leaderboard = (props) => {\n  return (\n    <IonCard className=\"rounded-lg border shadow-sm\">\n      <IonCardHeader>\n        <IonCardTitle className=\"text-xl font-semibold\">\n          Class Leaderboard\n        </IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        {/* Add a scrollable container */}\n        <IonList className=\"max-h-96 overflow-y-auto space-y-3\" lines=\"none\">\n          {props.leaderboard === null ? (\n            <h1 className=\"text-center text-gray-500\">No scores available</h1>\n          ) : (\n            props.leaderboard?.map((entry, index) => (\n              // Wrap each item with a motion.div for animation\n              <motion.div\n                key={entry.UserID}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n              >\n                <IonItem className=\"muted-item p-3\">\n                  <div className=\"flex items-center gap-3\">\n                    {index === 0 && (\n                      <span className=\"text-yellow-500 text-xl\">🥇</span>\n                    )}\n                    {index === 1 && (\n                      <span className=\"text-gray-400 text-xl\">🥈</span>\n                    )}\n                    {index === 2 && (\n                      <span className=\"text-orange-500 text-xl\">🥉</span>\n                    )}\n                    <span className=\"font-medium text-lg\">\n                      {entry.Username}\n                    </span>\n                  </div>\n                  <span slot=\"end\" className=\"text-primary font-semibold\">\n                    {entry.ClassScore} points\n                  </span>\n                </IonItem>\n              </motion.div>\n            ))\n          )}\n        </IonList>\n      </IonCardContent>\n    </IonCard>\n  );\n};\n\nexport default Leaderboard;\n","import { IonSpinner } from '@ionic/react';\nimport Leaderboard from '@/components/Leaderboard';\n\nconst LeaderboardTab = (props) => {\n  return (\n    <>\n      {props.loadingScores ? (\n        <div className=\"flex justify-center items-center p-8\">\n          <IonSpinner name=\"circular\" />\n          <span className=\"ml-2\">Calculating scores...</span>\n        </div>\n      ) : (\n        <Leaderboard leaderboard={props.leaderboardData} />\n      )}\n    </>\n  );\n};\n\nexport default LeaderboardTab;\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonIcon,\n  IonItem,\n  IonList,\n} from '@ionic/react';\n\nimport { trashOutline } from 'ionicons/icons';\n\nconst StudentList = (props) => {\n  return (\n    <IonCard className=\"mt-6\">\n      <IonCardHeader>\n        <IonCardTitle className=\"text-xl font-semibold\">\n          Class Students\n        </IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList className=\"space-y-3\" lines=\"none\">\n          {props.students?.map((student) => (\n            <IonItem key={student.UserID} className=\"muted-item p-3\">\n              <span className=\"font-medium\">{student.Username}</span>\n              <span slot=\"end\" className=\"text-muted-foreground\">\n                {student.email}\n              </span>\n              {props.isTeacher && (\n                <IonIcon\n                  slot=\"end\"\n                  icon={trashOutline}\n                  color=\"danger\"\n                  className=\"cursor-pointer\"\n                  onClick={() => props.onDeleteStudent(student.UserID)}\n                />\n              )}\n            </IonItem>\n          ))}\n        </IonList>\n      </IonCardContent>\n    </IonCard>\n  );\n};\n\nexport default StudentList;\n","import { useState } from 'react';\nimport StudentList from '@/components/StudentList';\nimport { IonAlert } from '@ionic/react';\n\nconst StudentTab = (props) => {\n  const [showDeleteAlert, setShowDeleteAlert] = useState({\n    isOpen: false,\n    studentId: null,\n  });\n\n  const handleShowDeleteAlert = (studentId: number) => {\n    setShowDeleteAlert({ isOpen: true, studentId: studentId });\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        <StudentList\n          isTeacher={props.isTeacher}\n          students={props.students}\n          onDeleteStudent={handleShowDeleteAlert}\n        />\n      </div>\n\n      <IonAlert\n        isOpen={showDeleteAlert.isOpen}\n        onDidDismiss={\n          () => setShowDeleteAlert({ isOpen: false, studentId: null }) // Reset state on dismiss\n        }\n        header=\"Confirm Deletion\"\n        message=\"Are you sure you want to remove this student from the class? This action cannot be undone.\"\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n            },\n          },\n          {\n            text: 'Delete',\n            handler: () => {\n              if (showDeleteAlert.studentId !== null) {\n                props.handleActualDelete(showDeleteAlert.studentId);\n                console.log(\n                  `Student deletion initiated for ID: ${showDeleteAlert.studentId}`\n                );\n              }\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default StudentTab;\n","import AddSetToClassDialog from '@/components/AddSetToClassDialog';\nimport ClassDetailControls from '@/components/ClassDetailControls';\nimport ClassDetailHeader from '@/components/ClassDetailHeader';\nimport ClassDetailTabs from '@/components/ClassDetailTabs';\nimport FlashcardSetList from '@/components/FlashcardSetList';\nimport { Footer } from '@/components/Footer';\nimport LeaderboardTab from '@/components/LeaderboardTab';\nimport { Navbar } from '@/components/Navbar';\nimport StudentTab from '@/components/StudentTab';\nimport { type CarouselApi } from '@/components/ui/carousel';\nimport {\n  useClassDetails,\n  useClassLeaderboard,\n  useClassMembers,\n  useClassSets,\n  useDeleteStudent,\n  useUpdateClass,\n} from '@/hooks/useClassQueries';\nimport { IonContent, IonPage } from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ClassDetail = () => {\n  const { id } = useParams<{ id: string }>();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [carouselApi, setCarouselApi] = useState<CarouselApi>();\n  const [tab, setTab] = useState('flashcards');\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState({\n    class_name: '',\n    class_description: '',\n  });\n  const [showAddSetDialog, setShowAddSetDialog] = useState(false);\n  const [formErrors, setFormErrors] = useState<{\n    className?: string;\n    classDescription?: string;\n    general?: string;\n  }>({});\n\n  // React Query hooks\n  const {\n    data: classData,\n    isLoading: isLoadingClass,\n    error: classError,\n  } = useClassDetails(id!);\n  const {\n    data: flashcardSets = [],\n    isLoading: isLoadingSets,\n    error: setsError,\n  } = useClassSets(id!);\n  const {\n    data: classUsers = [],\n    isLoading: isLoadingUsers,\n    error: usersError,\n  } = useClassMembers(id!);\n  const {\n    data: leaderboardData = [],\n    isLoading: isLoadingLeaderboard,\n    error: leaderboardError,\n  } = useClassLeaderboard(id!);\n\n  const updateClassMutation = useUpdateClass();\n  const deleteStudentMutation = useDeleteStudent(id!);\n\n  const isTeacher = classData?.Role === 'teacher';\n\n  const handleEdit = () => {\n    setUpdatedInfo({\n      class_name: classData?.ClassName || '',\n      class_description: classData?.ClassDescription || '',\n    });\n    setIsEditing(true);\n  };\n\n  const validateForm = () => {\n    const newErrors: { className?: string; classDescription?: string } = {};\n    let isValid = true;\n    updatedInfo.class_name = updatedInfo.class_name.trim();\n    updatedInfo.class_description = updatedInfo.class_description.trim();\n    if (!updatedInfo.class_name) {\n      newErrors.className = 'Class name is required';\n      isValid = false;\n    }\n    if (!updatedInfo.class_description) {\n      newErrors.classDescription = 'Class description is required';\n      isValid = false;\n    }\n    setFormErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSave = async () => {\n    if (!validateForm()) return;\n    try {\n      await Promise.all([\n        updateClassMutation.mutateAsync({\n          id: id!,\n          field: 'class_name',\n          value: updatedInfo.class_name,\n        }),\n        updateClassMutation.mutateAsync({\n          id: id!,\n          field: 'class_description',\n          value: updatedInfo.class_description,\n        }),\n      ]);\n      setIsEditing(false);\n    } catch (error) {\n      alert('Failed to update some fields. Please try again.');\n    }\n  };\n\n  const handleChange = (e: CustomEvent) => {\n    const { name } = e.target as HTMLInputElement;\n    const value = e.detail.value;\n    setUpdatedInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  const handleDeleteStudent = async (studentId: number | null) => {\n    if (studentId === null) return;\n    try {\n      await deleteStudentMutation.mutateAsync(studentId);\n    } catch (error) {\n      alert('Error deleting student');\n    }\n  };\n\n  useEffect(() => {\n    if (!carouselApi) return;\n    carouselApi.on('select', () => {\n      setCurrentCardIndex(carouselApi.selectedScrollSnap());\n    });\n  }, [carouselApi]);\n\n  // Error and loading handling\n  const queryLoading =\n    isLoadingClass || isLoadingSets || isLoadingUsers || isLoadingLeaderboard;\n  const queryError = classError || setsError || usersError || leaderboardError;\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent className=\"ion-padding\">\n        <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n          {queryError && (\n            <div className=\"text-red-500\">{queryError.message}</div>\n          )}\n          <div className=\"gap-4 mb-6\">\n            <ClassDetailHeader\n              classData={classData}\n              isTeacher={isTeacher}\n              loading={queryLoading}\n              handleEdit={handleEdit}\n              isEditing={isEditing}\n              updatedInfo={updatedInfo}\n              formErrors={formErrors}\n              handleChange={handleChange}\n              handleSave={handleSave}\n              handleCancel={handleCancel}\n            />\n            <ClassDetailControls\n              isTeacher={isTeacher}\n              classId={id}\n              onAddSetClick={() => setShowAddSetDialog(true)}\n            />\n          </div>\n          <ClassDetailTabs selectedTab={tab} onTabChange={setTab} />\n          {tab === 'leaderboard' && (\n            <LeaderboardTab\n              leaderboardData={leaderboardData}\n              loadingScores={isLoadingLeaderboard}\n            />\n          )}\n          {tab === 'flashcards' && (\n            <FlashcardSetList\n              flashcardSets={flashcardSets}\n              currentCardIndex={currentCardIndex}\n              setApi={setCarouselApi}\n              loading={queryLoading}\n              classId={id}\n            />\n          )}\n          {tab === 'students' && (\n            <StudentTab\n              isTeacher={isTeacher}\n              students={classUsers}\n              handleActualDelete={handleDeleteStudent}\n            />\n          )}\n        </div>\n        <AddSetToClassDialog\n          isOpen={showAddSetDialog}\n          onDidDismiss={() => setShowAddSetDialog(false)}\n          classId={id}\n          existingSetIds={flashcardSets?.map((set) => set.ID) || []}\n        />\n      </IonContent>\n\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default ClassDetail;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport type { NewClass } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonPage,\n  IonTextarea,\n  IonToast,\n} from '@ionic/react';\nimport { useState } from 'react';\n\nconst CreateClass = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [formData, setFormData] = useState({\n    className: '',\n    description: '',\n  });\n  const [showSuccess, setShowSuccess] = useState(false);\n  // const [isPrivate, setIsPrivate] = useState(false);\n  // const [textToCopy, setTextToCopy] = useState('This is the text to be copied');\n  // const [showToast, setShowToast] = useState(false);\n  // const [showSuccess, setShowSuccess] = useState(false);\n\n  // const copyToClipboard = async () => {\n  //   try {\n  //     await navigator.clipboard.writeText(textToCopy);\n  //     setShowToast(true);\n  //   } catch (err) {\n  //     console.error('Failed to copy text', err);\n  //   }\n  // };\n\n  const submitForm = async () => {\n    if (loading) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await makeHttpCall<NewClass>(`/api/classes`, {\n        method: 'POST',\n        headers: {\n          class_name: formData.className,\n          class_description: formData.description,\n        },\n      });\n\n      console.log('Class created successfully:', data);\n\n      setFormData({\n        className: '',\n        description: '',\n      });\n\n      setShowSuccess(true);\n    } catch (error) {\n      setError(`Failed to create class: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div\n          id=\"main-content\"\n          className=\"container mx-auto px-4 py-8 max-w-4xl\"\n        >\n          {loading && <div>Loading...</div>}\n          {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n          <h1 className=\"text-4xl tracking-wide font-bold font-smokum mb-6\">\n            Create New Class\n          </h1>\n          <form>\n            <IonCard className=\"mb-6 rounded-lg border shadow-sm\">\n              <IonCardContent>\n                <IonTextarea\n                  placeholder=\"Enter Class Name\"\n                  value={formData.className}\n                  onIonChange={(e) =>\n                    setFormData((prev) => ({\n                      ...prev,\n                      className: e.detail.value || '',\n                    }))\n                  }\n                  rows={1}\n                  autoGrow\n                  className=\"w-full text-xl font-bold mb-2\"\n                  style={{ resize: 'none' }}\n                />\n                <IonTextarea\n                  placeholder=\"Enter Class Description\"\n                  value={formData.description}\n                  onIonChange={(e) =>\n                    setFormData((prev) => ({\n                      ...prev,\n                      description: e.detail.value || '',\n                    }))\n                  }\n                  rows={1}\n                  autoGrow\n                  className=\"w-full text-base mt-4\"\n                  style={{ resize: 'none' }}\n                />\n              </IonCardContent>\n              {/* <IonItem>\n              \n              Public/Private will not be in MVP\n\n              <IonCheckbox\n                labelPlacement=\"start\"\n                justify=\"start\"\n                checked={isPrivate}\n                onIonChange={(e) => {\n                  setIsPrivate(e.detail.checked);\n                }}\n              >\n                Private\n              </IonCheckbox>\n              <IonRadioGroup\n                onIonChange={(e) => {\n                  const value = e.detail.value;\n                  setIsPrivate(value === 'private');\n                  setFormData((prev) => ({\n                    ...prev,\n                    joinCode: value === 'private' ? crypto.randomUUID() : '',\n                  }));\n                }}\n              >\n                <IonRadio value=\"public\">Public</IonRadio>\n                <IonRadio value=\"private\">Private</IonRadio>\n              </IonRadioGroup>\n            </IonItem> */}\n            </IonCard>\n            <div className=\"flex justify-center\">\n              <IonButton\n                color=\"primary\"\n                className=\"rounded-lg shadow-sm w-full md:w-auto\"\n                onClick={submitForm}\n                disabled={loading}\n              >\n                {loading ? 'Creating...' : 'Create Set'}\n              </IonButton>\n            </div>\n            {/* \n          {showSuccess && (\n            <IonText>\n              {isPrivate && (\n                <p>\n                  Class created successfully! Please save this join code: <br />\n                  <b>{lastJoinCode}</b>\n                </p>\n              )}\n              {!isPrivate && <p>Class created successfully!</p>}\n              <IonButton onClick={copyToClipboard}>Copy to Clipboard</IonButton>\n              <IonToast\n                isOpen={showToast}\n                onDidDismiss={() => setShowToast(false)}\n                message=\"Text copied to clipboard!\"\n                duration={2000}\n              />\n            </IonText>\n          )} */}\n          </form>\n          {showSuccess && (\n            <IonToast\n              isOpen={showSuccess}\n              color=\"success\"\n              onDidDismiss={() => setShowSuccess(false)}\n              message=\"Class created successfully!\"\n              duration={2000}\n            />\n          )}\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default CreateClass;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport type { FlashcardSet } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonPage,\n  IonText,\n  IonTextarea,\n  IonToast,\n} from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst CreateSet = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [errors, setErrors] = useState({ title: '', description: '' });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const saveSet = async () => {\n    if (loading) return;\n    setLoading(true);\n    setError(null);\n\n    const newErrors = { title: '', description: '' };\n    let hasError = false;\n\n    if (!title.trim()) {\n      newErrors.title = 'Title is required';\n      hasError = true;\n    }\n\n    if (!description.trim()) {\n      newErrors.description = 'Description is required';\n      hasError = true;\n    }\n\n    setErrors(newErrors);\n\n    if (hasError) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const setResponse = await makeHttpCall<FlashcardSet>(\n        `/api/flashcards/sets`,\n        {\n          method: 'POST',\n          headers: {\n            set_name: title,\n            set_description: description,\n          },\n        }\n      );\n\n      setTitle('');\n      setDescription('');\n\n      setShowSuccess(true);\n\n      // history.push(`/set-overview/${setResponse.ID}`);\n    } catch (error) {\n      console.error('Error saving flashcard set:', error);\n      setError(`Failed to save flashcard set: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div\n          id=\"main-content\"\n          className=\"container mx-auto px-4 py-8 max-w-4xl\"\n        >\n          {loading && <div>Loading...</div>}\n          {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n          <h1 className=\"text-4xl tracking-wide font-bold font-smokum mb-6\">\n            Create New Flashcard Set\n          </h1>\n\n          <IonCard className=\"mb-6 rounded-lg border shadow-sm\">\n            <IonCardContent>\n              <IonTextarea\n                placeholder=\"Enter Set Title\"\n                value={title}\n                onIonChange={(e) => setTitle(e.detail.value!)}\n                rows={1}\n                autoGrow\n                className=\"w-full text-xl font-bold mb-2\"\n                style={{ resize: 'none' }}\n              />\n              {errors.title && (\n                <IonText color=\"danger\">\n                  <p className=\"text-sm mt-1\">{errors.title}</p>\n                </IonText>\n              )}\n\n              <IonTextarea\n                placeholder=\"Enter Set Description\"\n                value={description}\n                onIonChange={(e) => setDescription(e.detail.value!)}\n                rows={1}\n                autoGrow\n                className=\"w-full text-base mt-4\"\n                style={{ resize: 'none' }}\n              />\n              {errors.description && (\n                <IonText color=\"danger\">\n                  <p className=\"text-sm mt-1\">{errors.description}</p>\n                </IonText>\n              )}\n            </IonCardContent>\n          </IonCard>\n\n          <div className=\"flex justify-center\">\n            <IonButton\n              color=\"primary\"\n              className=\"rounded-lg shadow-sm w-full md:w-auto\"\n              onClick={saveSet}\n              disabled={loading}\n            >\n              {loading ? 'Creating...' : 'Create Set'}\n            </IonButton>\n          </div>\n\n          {showSuccess && (\n            <IonToast\n              isOpen={showSuccess}\n              color=\"success\"\n              onDidDismiss={() => setShowSuccess(false)}\n              message=\"Set created successfully!\"\n              duration={2000}\n            />\n          )}\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default CreateSet;\n","import type { Flashcard, FlashcardSet } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\n// Flashcard set details hook - Get a specific flashcard set\nexport function useFlashcardSetDetails(id: string) {\n  return useQuery<FlashcardSet, Error>({\n    queryKey: ['flashcardSet', id],\n    queryFn: () =>\n      makeHttpCall<FlashcardSet>(`/api/flashcards/sets/`, {\n        method: 'GET',\n        headers: { id },\n      }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Flashcard cards hook - Get all cards in a set\nexport function useFlashcardCards(id: string) {\n  return useQuery<Flashcard[], Error>({\n    queryKey: ['flashcardCards', id],\n    queryFn: () =>\n      makeHttpCall<Flashcard[]>(`/api/flashcards/list`, {\n        method: 'GET',\n        headers: { set_id: id },\n      }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Update card study status mutation - Mark card as correct/incorrect\nexport function useUpdateCardStudyStatus() {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, { cardId: number; isCorrect: boolean }>({\n    mutationFn: ({ cardId, isCorrect }) => {\n      const endpoint = isCorrect\n        ? '/api/card_history/correct'\n        : '/api/card_history/incorrect';\n\n      return makeHttpCall(endpoint, {\n        method: 'POST',\n        headers: {\n          card_id: cardId.toString(),\n        },\n      });\n    },\n    // We don't need to invalidate any queries here as this doesn't change the cards,\n    // just records study history\n  });\n}\n","import { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { useUpdateCardStudyStatus } from '@/hooks/useFlashcardQueries';\nimport { Check, X } from 'lucide-react';\nimport { useState } from 'react';\n\nexport const FlashCard = (props) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const updateCardStatus = useUpdateCardStudyStatus();\n  const [error, setError] = useState<Error | null>(null);\n  const handleScoreUpdate = async (isCorrect: boolean) => {\n    try {\n      await updateCardStatus.mutateAsync({\n        cardId: props.cardId,\n        isCorrect,\n      });\n      console.log(`Score update successful for card ${props.cardId}`);\n      props.onAdvance?.();\n    } catch (error) {\n      console.error(`Failed to update score for card ${props.cardId}:`, error);\n      setError(error as Error);\n    }\n  };\n\n  const handleIncorrectClick = () => {\n    handleScoreUpdate(false);\n  };\n\n  const handleCorrectClick = () => {\n    handleScoreUpdate(true);\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      {error && <div className=\"text-red-500\">Error: {error.message}</div>}\n      <div\n        className={`flip-card cursor-pointer ${isFlipped ? 'flipped' : ''}`}\n        onClick={() => setIsFlipped(!isFlipped)}\n      >\n        <Card className=\"flip-card-front p-8 min-h-[300px] flex items-center justify-center text-center\">\n          <p className=\"text-xl\">{props.front}</p>\n        </Card>\n        <Card className=\"flip-card-back p-8 min-h-[300px] flex items-center justify-center text-center absolute top-0 w-full\">\n          <p className=\"text-xl\">{props.back}</p>\n        </Card>\n      </div>\n\n      <div className=\"flex justify-center gap-4 mt-6\">\n        <Button\n          variant=\"outline\"\n          id=\"shadcn-button\"\n          className=\"w-32\"\n          onClick={handleIncorrectClick}\n        >\n          <X className=\"mr-2 h-4 w-4\" />\n          Not yet\n        </Button>\n        <Button\n          id=\"shadcn-button\"\n          className=\"w-32\"\n          onClick={handleCorrectClick}\n        >\n          <Check className=\"mr-2 h-4 w-4\" />\n          Got it\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","import { FlashCard } from '@/components/FlashCard';\nimport { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport {\n  Carousel,\n  type CarouselApi,\n  CarouselContent,\n  CarouselItem,\n} from '@/components/ui/carousel';\nimport {\n  useFlashcardCards,\n  useFlashcardSetDetails,\n} from '@/hooks/useFlashcardQueries';\nimport type { Flashcard } from '@/types/globalTypes';\nimport {\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonPage,\n  IonSpinner,\n  useIonToast,\n} from '@ionic/react';\nimport { arrowBackOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Flashcard = () => {\n  const { id } = useParams<{ id: string }>();\n  const [presentToast] = useIonToast();\n  const [carouselApi, setCarouselApi] = useState<CarouselApi>();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n\n  // React Query hooks\n  const {\n    data: flashcardSetData,\n    isLoading: isLoadingSet,\n    error: setError,\n  } = useFlashcardSetDetails(id);\n\n  const {\n    data: cards = [],\n    isLoading: isLoadingCards,\n    error: cardsError,\n  } = useFlashcardCards(id);\n\n  // Loading state derived from React Query\n  const isLoading = isLoadingSet || isLoadingCards;\n\n  // Error handling\n  const error = setError || cardsError;\n  if (error) {\n    console.error('Query error:', error);\n    let message = 'Unknown error';\n    if (error instanceof Error) message = error.message;\n    presentToast({\n      message: `Error loading data: ${message}`,\n      duration: 3000,\n      color: 'danger',\n    });\n  }\n\n  useEffect(() => {\n    if (!carouselApi) {\n      return;\n    }\n\n    const onSelect = () => {\n      setCurrentCardIndex(carouselApi.selectedScrollSnap());\n    };\n\n    onSelect();\n\n    carouselApi.on('select', onSelect);\n    carouselApi.on('reInit', onSelect);\n\n    return () => {\n      carouselApi.off('select', onSelect);\n      carouselApi.off('reInit', onSelect);\n    };\n  }, [carouselApi]);\n\n  const handleAdvance = () => {\n    // Check if carousel exists and there are cards\n    if (carouselApi && cards.length > 0) {\n      // Check if currently on the last card\n      if (currentCardIndex === cards.length - 1) {\n        // Show success toast\n        presentToast({\n          message: 'Congratulations! You have completed the set.',\n          duration: 3000,\n          color: 'success',\n        });\n        // Optional: Add actions like navigating back or resetting\n      } else {\n        // Not the last card, advance to the next one\n        carouselApi.scrollNext();\n      }\n    }\n  };\n\n  // Calculate progress percentage\n  const progressPercentage = cards.length\n    ? Math.round(((currentCardIndex + 1) / cards.length) * 100)\n    : 0;\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div\n          id=\"main-content\"\n          className=\"container mx-auto px-4 py-8 max-w-4xl\"\n        >\n          {/* Flashcards */}\n          <div className=\"flex items-center gap-4 mb-6\">\n            <IonButton\n              className=\"rounded-lg\"\n              style={{ '--border-radius': '0.5rem' }}\n              routerLink={`/set-overview/${id}`}\n            >\n              <IonIcon slot=\"start\" icon={arrowBackOutline} />\n              Back\n            </IonButton>\n            <div>\n              {isLoading ? (\n                <div className=\"flex flex-col gap-2\">\n                  <IonSpinner name=\"dots\" />\n                  <IonSpinner name=\"dots\" />\n                </div>\n              ) : (\n                <>\n                  <h1 className=\"text-2xl font-bold\">\n                    {flashcardSetData?.SetName}\n                  </h1>\n                  <p className=\"text-gray-500\">\n                    {flashcardSetData?.SetDescription}\n                  </p>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div className=\"w-full max-w-xl mx-auto relative py-8 min-h-[400px] flex flex-col items-center justify-center\">\n            {isLoading ? (\n              <IonSpinner name=\"circular\" />\n            ) : cards.length === 0 ? (\n              <div className=\"text-center text-gray-500 text-lg py-20\">\n                This set has no cards yet.\n              </div>\n            ) : (\n              <>\n                {/* Progress Bar */}\n                <div className=\"w-full mb-4 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                  <div\n                    className=\"bg-primary h-2.5 rounded-full transition-all duration-300\"\n                    style={{ width: `${progressPercentage}%` }}\n                  ></div>\n                </div>\n\n                {/* Card Counter */}\n                <div className=\"text-sm text-gray-500 mb-4\">\n                  Card {currentCardIndex + 1} of {cards.length}\n                </div>\n\n                <Carousel\n                  orientation=\"vertical\"\n                  setApi={setCarouselApi}\n                  className=\"w-full\"\n                >\n                  <CarouselContent className=\"-mt-1 h-[400px]\">\n                    {cards?.map((card, index) => (\n                      <CarouselItem key={index}>\n                        <FlashCard\n                          front={card.Front}\n                          back={card.Back}\n                          onAdvance={handleAdvance}\n                          cardId={card.ID}\n                        />\n                      </CarouselItem>\n                    ))}\n                  </CarouselContent>\n                </Carousel>\n              </>\n            )}\n          </div>\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default Flashcard;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport type {\n  ListClassesOfAUserRow,\n  ListSetsOfAUserRow,\n} from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonIcon,\n  IonLabel,\n  IonPage,\n  IonSegment,\n  IonSegmentButton,\n  IonSpinner,\n  useIonViewWillEnter,\n} from '@ionic/react';\nimport { addOutline, bookOutline, listOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [tab, setTab] = useState('classes');\n  const [classes, setClasses] = useState<ListClassesOfAUserRow[]>([]);\n  const [sets, setSets] = useState<ListSetsOfAUserRow[]>([]);\n  const [classesLoading, setClassesLoading] = useState(false);\n  const [setsLoading, setSetsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchClassesOfUser = async () => {\n    setClassesLoading(true);\n    setError(null);\n    try {\n      const data = await makeHttpCall<ListClassesOfAUserRow[]>(\n        `/api/class_user/classes`\n      );\n      console.log('Classes: ', data);\n      setClasses(data);\n    } catch (error) {\n      setError(`Error fetching classes: ${error.message}`);\n    } finally {\n      setClassesLoading(false);\n    }\n  };\n\n  const fetchSetsOfUser = async () => {\n    setSetsLoading(true);\n    try {\n      const data = await makeHttpCall<ListSetsOfAUserRow[]>(\n        `/api/set_user/list`\n      );\n      console.log('Sets: ', data);\n      setSets(data);\n    } catch (error) {\n      setError(`Error fetching sets: ${error.message}`);\n    } finally {\n      setSetsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchClassesOfUser();\n    fetchSetsOfUser();\n  }, []);\n\n  useIonViewWillEnter(() => {\n    fetchClassesOfUser();\n    fetchSetsOfUser();\n  });\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div\n          id=\"main-content\"\n          className=\"container mx-auto px-4 py-8 flex-grow\"\n        >\n          {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n          <div className=\"flex flex-col me:flex-row me:justify-between me:items-center mb-8\">\n            <h1 className=\"text-4xl font-smokum font-bold\">\n              {tab === 'classes' ? 'My Classes' : 'My Flashcard Sets'}\n            </h1>\n            <div className=\"flex items-center gap-2 mt-4 me:mt-0\">\n              <IonButton\n                color=\"primary\"\n                className=\"rounded-lg\"\n                style={{ '--border-radius': '0.5rem' }}\n                routerLink={\n                  tab === 'classes' ? '/public-classes' : '/public-cards'\n                }\n              >\n                <IonIcon slot=\"start\" icon={addOutline} />{' '}\n                {tab === 'classes' ? 'Join Class' : 'Join Set'}\n              </IonButton>\n            </div>\n          </div>\n\n          <div className=\"mb-8\">\n            <IonSegment\n              value={tab}\n              onIonChange={(e) =>\n                setTab((e.detail.value as string) || 'classes')\n              }\n              style={{\n                '--background': 'var(--ion-color-light)',\n              }}\n            >\n              <IonSegmentButton value=\"classes\">\n                <IonIcon icon={listOutline} className=\"mr-2\" />\n                <IonLabel>My Classes</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"flashcards\">\n                <IonIcon icon={bookOutline} className=\"mr-2\" />\n                <IonLabel>My Cards</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </div>\n\n          {tab === 'classes' && (\n            <>\n              {classesLoading ? (\n                <div className=\"flex justify-center items-center p-8\">\n                  <IonSpinner name=\"circular\" />\n                  <span className=\"ml-2\">Loading classes...</span>\n                </div>\n              ) : classes === null ? (\n                <div className=\"text-center p-8 text-gray-600\">\n                  You are not part of any classes. Join a class to get started.\n                </div>\n              ) : (\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                  {classes?.map((cls) => (\n                    <Link key={cls.ClassID} to={`/class/${cls.ClassID}`}>\n                      <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                        <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                          <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                            {cls.ClassName}\n                          </IonCardTitle>\n                          <IonCardSubtitle className=\"text-sm text-muted-foreground\">\n                            {cls.ClassDescription}\n                          </IonCardSubtitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                          {/* <IonText className=\"text-sm text-gray-600\">\n                          {cls.sets} sets\n                        </IonText> */}\n                        </IonCardContent>\n                      </IonCard>\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </>\n          )}\n\n          {tab === 'flashcards' && (\n            <>\n              {setsLoading ? (\n                <div className=\"flex justify-center items-center p-8\">\n                  <IonSpinner name=\"circular\" />\n                  <span className=\"ml-2\">Loading sets...</span>\n                </div>\n              ) : sets === null ? (\n                <div className=\"text-center p-8 text-gray-600\">\n                  You are not part of any sets. Join a set to get started.\n                </div>\n              ) : (\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                  {sets?.map((set) => (\n                    <Link key={set.SetID} to={`/set-overview/${set.SetID}`}>\n                      <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                        <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                          <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                            {set.SetName}\n                          </IonCardTitle>\n                          <IonCardSubtitle className=\"text-sm text-muted-foreground\">\n                            {set.SetDescription}\n                          </IonCardSubtitle>\n                        </IonCardHeader>\n                        <IonCardContent>\n                          {/* <IonText className=\"text-sm text-gray-600\">\n                          {set.cards} cards\n                        </IonText> */}\n                        </IonCardContent>\n                      </IonCard>\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default Home;\n","import { AuthForm } from '@/components/auth/AuthForm';\nimport { IonContent, IonPage } from '@ionic/react';\n\nconst Index = () => {\n  return (\n    <IonPage>\n      <IonContent>\n        <div className=\"min-h-screen flex flex-col items-center justify-center from-white to-gray-50\">\n          <div className=\"text-center mb-8 sm:mb-12 md:mb-16 mt-6 sm:mt-10 md:mt-14 mx-2\">\n            <h1 className=\"text-5xl sm:text-6xl md:text-7xl text-primary mb-4 font-ewert\">\n              Cowboy Cards\n            </h1>\n            <p className=\"text-lg sm:text-xl md:text-2xl font-rye\">\n              Master any subject with smart flashcards\n            </p>\n          </div>\n          <AuthForm />\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Index;\n","import { IonContent, IonPage } from '@ionic/react';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    console.error(\n      '404 Error: User attempted to access non-existent route:',\n      location.pathname\n    );\n  }, [location.pathname]);\n\n  return (\n    <IonPage>\n      <IonContent>\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n            <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n            <a\n              href=\"/home\"\n              className=\"text-blue-500 hover:text-blue-700 underline\"\n            >\n              Return to Home\n            </a>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NotFound;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport { useUserSets } from '@/hooks/useClassQueries';\nimport type { FlashcardSet } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonPage,\n  IonSearchbar,\n  useIonToast,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PublicFlashcards = () => {\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [flashcardSets, setFlashcardSets] = useState<FlashcardSet[]>([]);\n  const [searchText, setSearchText] = useState('');\n  const [presentToast] = useIonToast();\n  const { data: userSets, isLoading: isLoadingUserSets } = useUserSets();\n\n  const filteredFlashcardSets = flashcardSets.filter(\n    (set) =>\n      set.SetName.toLowerCase().includes(searchText.toLowerCase()) ||\n      (set.SetDescription &&\n        set.SetDescription.toLowerCase().includes(searchText.toLowerCase()))\n  );\n\n  useEffect(() => {\n    async function fetchSets() {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await makeHttpCall<FlashcardSet[]>(\n          `/api/flashcards/sets/list`\n        );\n        setFlashcardSets(res);\n      } catch (error) {\n        console.error('Error fetching flashcard sets:', error);\n        setError(`Error fetching flashcard sets: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchSets();\n  }, []);\n\n  const isUserMember = (setId: number): boolean => {\n    if (!userSets) return false;\n    return userSets.some((userSet) => userSet.SetID === setId);\n  };\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div id='main-content' className='container mx-auto px-0 py-8 w-4/5'>\n          <div className='flex items-center flex-col justify-between mb-4'>\n            <h1 className='text-4xl tracking-wide font-bold font-smokum pb-8'>\n              Public Flashcard Sets\n            </h1>\n            {loading || (isLoadingUserSets && <div>Loading...</div>)}\n            {error && <div className='text-red-500 mt-2'>{error}</div>}\n            <IonSearchbar\n              value={searchText} // eslint-disable-next-line\n              onIonInput={(e: any) => setSearchText(e.target.value)}\n              placeholder='Search flashcard sets'\n              className='mb-4 max-w-lg'\n            />\n          </div>\n          <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n            {filteredFlashcardSets?.map(\n              (set) =>\n                !isUserMember(set.ID) && (\n                  <Link key={set.ID} to={`/set-overview/${set.ID}`}>\n                    <IonCard className='cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm'>\n                      <IonCardHeader className='flex flex-col space-y-1.5 p-6'>\n                        <IonCardTitle className='text-2xl font-semibold leading-none tracking-tight'>\n                          {set.SetName}\n                        </IonCardTitle>\n                        <IonCardSubtitle className='text-sm '>\n                          {set.SetDescription || 'No description'}\n                        </IonCardSubtitle>\n                        <IonButton\n                          expand='block'\n                          color='primary'\n                          className='mt-4'\n                          onClick={async (e) => {\n                            try {\n                              const response = await makeHttpCall(\n                                `/api/set_user`,\n                                {\n                                  method: 'POST',\n                                  headers: {\n                                    set_id: set.ID,\n                                    role: 'user',\n                                  },\n                                }\n                              );\n                              console.log('Join set response:', response);\n                              presentToast({\n                                message: 'Successfully joined set',\n                                duration: 2000,\n                                color: 'success',\n                              });\n                            } catch (error) {\n                              console.error('Error joining set:', error);\n                            }\n                          }}\n                        >\n                          Join Set\n                        </IonButton>\n                      </IonCardHeader>\n                    </IonCard>\n                  </Link>\n                )\n            )}\n          </div>\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default PublicFlashcards;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport { useUserClasses } from '@/hooks/useClassQueries';\nimport type { Class } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonPage,\n  IonSearchbar,\n  useIonToast,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PublicClasses = () => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchText, setSearchText] = useState('');\n  const [presentToast] = useIonToast();\n  const { data: userClasses, isLoading: isLoadingUserClasses } =\n    useUserClasses();\n\n  const isUserMember = (classId: number): boolean => {\n    if (!userClasses) return false;\n    return userClasses.some((userClass) => userClass.ClassID === classId);\n  };\n\n  const filteredClasses = classes.filter(\n    (x) =>\n      x.ClassName.toLowerCase().includes(searchText.toLowerCase()) ||\n      (x.ClassDescription &&\n        x.ClassDescription.toLowerCase().includes(searchText.toLowerCase()))\n  );\n\n  useEffect(() => {\n    const fetchClasses = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await makeHttpCall<Class[]>(`/api/classes/list`);\n        setClasses(res);\n      } catch (error) {\n        setError(`Error fetching classes: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClasses();\n  }, []);\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div id='main-content' className='container mx-auto px-0 py-8 w-4/5'>\n          <div className='flex items-center flex-col justify-between mb-4'>\n            <h1 className='text-4xl tracking-wide font-bold font-smokum pb-8'>\n              Public Classes\n            </h1>\n            {(loading || isLoadingUserClasses) && <div>Loading...</div>}\n            {error && <div className='text-red-500 mt-2'>{error}</div>}\n            <IonSearchbar\n              value={searchText} // eslint-disable-next-line\n              onIonInput={(e: any) => setSearchText(e.target.value)}\n              placeholder='Search classes'\n              className='mb-4 max-w-lg'\n            />\n          </div>\n          <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n            {filteredClasses?.map(\n              (classItem) =>\n                !isUserMember(classItem.ID) && (\n                  <Link key={classItem.ID} to={`/class/${classItem.ID}`}>\n                    <IonCard className='cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm'>\n                      <IonCardHeader className='flex flex-col space-y-1.5 p-6'>\n                        <IonCardTitle className='text-2xl font-semibold leading-none tracking-tight'>\n                          {classItem.ClassName}\n                        </IonCardTitle>\n                        <IonCardSubtitle className='text-sm '>\n                          {classItem.ClassDescription || 'No description'}\n                        </IonCardSubtitle>\n                        <IonButton\n                          expand='block'\n                          color='primary'\n                          className='mt-4'\n                          onClick={async () => {\n                            try {\n                              const response = await makeHttpCall(\n                                `/api/class_user`,\n                                {\n                                  method: 'POST',\n                                  headers: {\n                                    class_id: classItem.ID,\n                                    role: 'student',\n                                  },\n                                }\n                              );\n                              console.log('Join class response:', response);\n                              presentToast({\n                                message: 'Successfully joined class',\n                                duration: 2000,\n                                color: 'success',\n                              });\n                            } catch (error) {\n                              console.error('Error joining class:', error);\n                            }\n                          }}\n                        >\n                          Join Class\n                        </IonButton>\n                      </IonCardHeader>\n                    </IonCard>\n                  </Link>\n                )\n            )}\n          </div>\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default PublicClasses;\n","import {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonIcon,\n  IonItem,\n  IonSpinner,\n  IonText,\n  IonTextarea,\n} from '@ionic/react';\nimport { addOutline, trashOutline } from 'ionicons/icons';\n\nconst SetCardList = (props) => {\n  // Check if we have cards to display\n  const hasCards =\n    Array.isArray(props.cardsToDisplay) && props.cardsToDisplay.length > 0;\n\n  return (\n    <div className=\"mt-8 min-h-[200px]\">\n      {props.loading ? (\n        <div className=\"flex items-center justify-center\">\n          <IonSpinner name=\"circular\" />\n        </div>\n      ) : !hasCards && !props.isEditing ? (\n        <div className=\"text-center\">\n          <p className=\"text-lg text-gray-900 dark:text-gray-400 mb-4\">\n            This set has no cards yet.\n          </p>\n          {props.isOwner && (\n            <IonButton\n              color=\"primary\"\n              className=\"rounded-lg\"\n              style={{ '--border-radius': '0.5rem' }}\n              onClick={props.onAddCardClick}\n            >\n              Add Cards\n            </IonButton>\n          )}\n        </div>\n      ) : (\n        <div className=\"w-full\">\n          {props.cardsToDisplay?.map((card, index) =>\n            props.isEditing && props.isOwner ? (\n              // --- Edit Mode Card --- //\n              <IonCard\n                key={card.ID <= 0 ? `new-${index}` : card.ID}\n                className=\"mb-4 rounded-lg border shadow-sm p-4\"\n              >\n                <IonItem lines=\"none\">\n                  <IonText className=\"text-md font-semibold text-gray-900 dark:text-gray-300 mr-auto\">\n                    Card {index + 1}\n                  </IonText>\n                  <IonButton\n                    fill=\"clear\"\n                    color=\"danger\"\n                    size=\"small\"\n                    onClick={() => props.onRemoveCard(index)}\n                  >\n                    <IonIcon slot=\"icon-only\" icon={trashOutline} />\n                  </IonButton>\n                </IonItem>\n                <div className=\"flex flex-col md:flex-row gap-4 mt-2\">\n                  <div className=\"flex-1\">\n                    <IonTextarea\n                      label=\"Front\"\n                      labelPlacement=\"stacked\"\n                      value={card.Front}\n                      onIonInput={(e) =>\n                        props.onCardChange(index, 'Front', e.detail.value)\n                      }\n                      className={`w-full border rounded-md p-2 ${\n                        props.cardErrors[index]?.front\n                          ? 'border-red-500'\n                          : 'border-gray-300'\n                      }`}\n                      autoGrow={true}\n                      rows={3}\n                    />\n                    {props.cardErrors[index]?.front && (\n                      <p className=\"text-red-500 text-xs mt-1\">\n                        {props.cardErrors[index].front}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"flex-1\">\n                    <IonTextarea\n                      label=\"Back\"\n                      labelPlacement=\"stacked\"\n                      value={card.Back}\n                      onIonInput={(e) =>\n                        props.onCardChange(index, 'Back', e.detail.value)\n                      }\n                      className={`w-full border rounded-md p-2 ${\n                        props.cardErrors[index]?.back\n                          ? 'border-red-500'\n                          : 'border-gray-300'\n                      }`}\n                      autoGrow={true}\n                      rows={3}\n                    />\n                    {props.cardErrors[index]?.back && (\n                      <p className=\"text-red-500 text-xs mt-1\">\n                        {props.cardErrors[index].back}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </IonCard>\n            ) : (\n              // --- Display Mode Card --- //\n              <IonCard\n                key={card.ID}\n                className=\"mb-4 rounded-lg border shadow-sm\"\n              >\n                <IonCardContent>\n                  <div className=\"border-b border-gray-300 mb-3 pb-1 m-4\">\n                    <IonText className=\"text-md font-semibold text-gray-900 dark:text-gray-300\">\n                      Card {index + 1}\n                    </IonText>\n                  </div>\n                  <div className=\"flex flex-row justify-between items-start\">\n                    <div className=\"w-3/12 pr-4 border-r border-gray-300 m-4\">\n                      <IonText className=\"block whitespace-pre-wrap text-lg text-gray-900 dark:text-gray-200\">\n                        {card.Front}\n                      </IonText>\n                    </div>\n                    <div className=\"w-9/12 pl-4 m-4\">\n                      <IonText className=\"block whitespace-pre-wrap text-lg text-gray-900 dark:text-gray-200\">\n                        {card.Back}\n                      </IonText>\n                    </div>\n                  </div>\n                </IonCardContent>\n              </IonCard>\n            )\n          )}\n          {props.isEditing && props.isOwner && (\n            <IonButton\n              expand=\"block\"\n              onClick={props.onAddCard}\n              className=\"mt-4 rounded-lg\"\n            >\n              <IonIcon slot=\"start\" icon={addOutline} />\n              Add New Card\n            </IonButton>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SetCardList;\n","import { IonButton } from '@ionic/react';\n\nconst SetOverviewControls = (props) => {\n  return (\n    <>\n      <IonButton\n        className=\"rounded-lg flex-grow md:flex-grow-0\"\n        color={'primary'}\n        style={{ '--border-radius': '0.5rem' }}\n        routerLink={props.studyLink}\n        disabled={props.isEditing}\n      >\n        Study Set\n      </IonButton>\n      {props.isOwner && !props.isEditing && (\n        <>\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            style={{ '--border-radius': '0.5rem' }}\n            onClick={props.onEditClick}\n          >\n            Edit Set & Cards\n          </IonButton>\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            color={'danger'}\n            style={{ '--border-radius': '0.5rem' }}\n            onClick={props.onDeleteClick}\n          >\n            Delete Set\n          </IonButton>\n        </>\n      )}\n      {props.isOwner && props.isEditing && (\n        <>\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={props.onSaveClick}\n          >\n            Save All Changes\n          </IonButton>\n          <IonButton\n            className=\"rounded-lg flex-grow md:flex-grow-0\"\n            color=\"medium\"\n            size=\"small\"\n            onClick={props.onCancelClick}\n          >\n            Cancel\n          </IonButton>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SetOverviewControls;\n","import { EditableField } from '@/utils/EditableField';\nimport { IonButton, IonIcon, IonSpinner } from '@ionic/react';\nimport { arrowBackOutline } from 'ionicons/icons';\n\nconst SetOverviewHeader = (props) => {\n  return (\n    <div className=\"gap-4 flex-1 pr-4\">\n      <div className=\"flex flex-col\">\n        {props.loading || !props.flashcardSetData ? (\n          <IonSpinner name=\"dots\" />\n        ) : props.isEditing && props.isOwner ? (\n          <>\n            <EditableField\n              type=\"text\"\n              label=\"Set Name\"\n              name=\"set_name\"\n              value={props.updatedInfo.set_name}\n              onChange={props.onMetadataChange}\n              error={props.metadataErrors.setName}\n            />\n            <EditableField\n              type=\"text\"\n              label=\"Set Description\"\n              name=\"set_description\"\n              value={props.updatedInfo.set_description}\n              onChange={props.onMetadataChange}\n              error={props.metadataErrors.setDescription}\n            />\n            {props.metadataErrors.general && (\n              <p className=\"text-red-500 text-sm mt-1\">\n                {props.metadataErrors.general}\n              </p>\n            )}\n          </>\n        ) : (\n          <>\n            <h1 className=\"text-3xl font-bold\">\n              {props.flashcardSetData.SetName || 'Untitled Set'}\n            </h1>\n            <p className=\"text-base mt-1 text-gray-700\">\n              {props.flashcardSetData.SetDescription ||\n                'No description available'}\n            </p>\n          </>\n        )}\n      </div>\n      <IonButton\n        className=\"rounded-lg flex-grow md:flex-grow-0 mt-4\"\n        style={{ '--border-radius': '0.5rem' }}\n        onClick={props.onBackClick}\n        disabled={props.isEditing}\n      >\n        <IonIcon slot=\"start\" icon={arrowBackOutline} />\n        Back\n      </IonButton>\n    </div>\n  );\n};\n\nexport default SetOverviewHeader;\n","import type { Flashcard, FlashcardSet } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\n// Set details hook - Get a specific flashcard set\nexport function useSetDetails(id: string) {\n  return useQuery<FlashcardSet, Error>({\n    queryKey: ['set', id],\n    queryFn: () =>\n      makeHttpCall<FlashcardSet>(`/api/flashcards/sets/`, {\n        method: 'GET',\n        headers: { id },\n      }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Set cards hook - Get all cards in a set\nexport function useSetCards(id: string) {\n  return useQuery<Flashcard[], Error>({\n    queryKey: ['setCards', id],\n    queryFn: () =>\n      makeHttpCall<Flashcard[]>(`/api/flashcards/list`, {\n        method: 'GET',\n        headers: { set_id: id },\n      }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Update set mutation - Update set name or description\ntype UpdateSetArgs = {\n  id: string;\n  field: 'set_name' | 'set_description';\n  value: string;\n};\n\nexport function useUpdateSet() {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, UpdateSetArgs>({\n    mutationFn: ({ id, field, value }) =>\n      makeHttpCall(`/api/flashcards/sets/${field}`, {\n        method: 'PUT',\n        headers: { id, [field]: value },\n      }),\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['set', variables.id] });\n    },\n  });\n}\n\n// Update card mutation - Update card front or back\ntype UpdateCardArgs = {\n  id: number;\n  field: 'front' | 'back';\n  value: string;\n};\n\nexport function useUpdateCard() {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, UpdateCardArgs>({\n    mutationFn: ({ id, field, value }) =>\n      makeHttpCall(`/api/flashcards/${field}`, {\n        method: 'PUT',\n        headers: { id, [field]: value },\n      }),\n    onSuccess: (_, variables) => {\n      // We need to invalidate the setCards query that contains this card\n      // First find the card to get its setId\n      const queries = queryClient\n        .getQueryCache()\n        .findAll({ queryKey: ['setCards'] });\n\n      const setId = queries\n        .map((query) => query.queryKey[1])\n        .find((querySetId) => {\n          const setCards = queryClient.getQueryData<Flashcard[]>([\n            'setCards',\n            querySetId,\n          ]);\n          return setCards?.some((card) => card.ID === variables.id);\n        });\n\n      if (setId) {\n        queryClient.invalidateQueries({ queryKey: ['setCards', setId] });\n      }\n    },\n  });\n}\n\n// Add card mutation - Add a new card to a set\ntype AddCardArgs = {\n  setId: number;\n  front: string;\n  back: string;\n};\n\nexport function useAddCard() {\n  const queryClient = useQueryClient();\n\n  return useMutation<Flashcard, Error, AddCardArgs>({\n    mutationFn: ({ setId, front, back }) =>\n      makeHttpCall<Flashcard>(`/api/flashcards`, {\n        method: 'POST',\n        headers: {\n          front,\n          back,\n          set_id: setId,\n        },\n      }),\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({\n        queryKey: ['setCards', variables.setId.toString()],\n      });\n    },\n  });\n}\n\n// Delete card mutation - Remove a card from a set\nexport function useDeleteCard() {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, number>({\n    mutationFn: (cardId) =>\n      makeHttpCall(`/api/flashcards`, {\n        method: 'DELETE',\n        headers: { id: cardId },\n      }),\n    onSuccess: (_, cardId) => {\n      // Similar to update, find the set that contains this card\n      const queries = queryClient\n        .getQueryCache()\n        .findAll({ queryKey: ['setCards'] });\n\n      const setId = queries\n        .map((query) => query.queryKey[1])\n        .find((querySetId) => {\n          const setCards = queryClient.getQueryData<Flashcard[]>([\n            'setCards',\n            querySetId,\n          ]);\n          return setCards?.some((card) => card.ID === cardId);\n        });\n\n      if (setId) {\n        queryClient.invalidateQueries({ queryKey: ['setCards', setId] });\n      }\n    },\n  });\n}\n\n// Delete set mutation - Remove a flashcard set\nexport function useDeleteSet() {\n  const queryClient = useQueryClient();\n\n  return useMutation<void, Error, string>({\n    mutationFn: (setId) =>\n      makeHttpCall<void>(`/api/flashcards/sets/`, {\n        method: 'DELETE',\n        headers: { id: setId },\n      }),\n    onSuccess: (_, setId) => {\n      // Invalidate both the set details and its cards\n      queryClient.invalidateQueries({ queryKey: ['set', setId] });\n      queryClient.invalidateQueries({ queryKey: ['setCards', setId] });\n      // Also invalidate any user sets queries that might contain this set\n      queryClient.invalidateQueries({ queryKey: ['userSets'] });\n    },\n  });\n}\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport SetCardList from '@/components/SetCardList';\nimport SetOverviewControls from '@/components/SetOverviewControls';\nimport SetOverviewHeader from '@/components/SetOverviewHeader';\nimport {\n  useAddCard,\n  useDeleteCard,\n  useDeleteSet,\n  useSetCards,\n  useSetDetails,\n  useUpdateCard,\n  useUpdateSet,\n} from '@/hooks/useSetQueries';\nimport type { Flashcard } from '@/types/globalTypes';\nimport {\n  IonAlert,\n  IonContent,\n  IonPage,\n  IonSpinner,\n  useIonToast,\n} from '@ionic/react';\nimport { useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nconst SetOverview = () => {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [presentToast] = useIonToast();\n  const location = useLocation<{ fromClassId?: string }>();\n  const fromClassId = location.state?.fromClassId;\n\n  // React Query hooks\n  const {\n    data: flashcardSetData,\n    isLoading: isLoadingSet,\n    error: setError,\n  } = useSetDetails(id);\n\n  const {\n    data: cards = [],\n    isLoading: isLoadingCards,\n    error: cardsError,\n  } = useSetCards(id);\n\n  // Mutations\n  const updateSetMutation = useUpdateSet();\n  const updateCardMutation = useUpdateCard();\n  const addCardMutation = useAddCard();\n  const deleteCardMutation = useDeleteCard();\n  const deleteSetMutation = useDeleteSet();\n\n  // UI state\n  const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedCards, setEditedCards] = useState<Flashcard[]>([]);\n  const [updatedInfo, setUpdatedInfo] = useState({\n    set_name: '',\n    set_description: '',\n  });\n  const [metadataErrors, setMetadataErrors] = useState<{\n    setName?: string;\n    setDescription?: string;\n    general?: string;\n  }>({});\n  const [cardErrors, setCardErrors] = useState<{\n    [key: number]: { front?: string; back?: string };\n  }>({});\n\n  // Check if user is the owner of the set\n  const isOwner = flashcardSetData?.Role === 'owner';\n\n  // Loading state derived from React Query\n  const isLoading = isLoadingSet || isLoadingCards;\n\n  // Error handling\n  const error = setError || cardsError;\n  if (error) {\n    console.error('Query error:', error);\n    let message = 'Unknown error';\n    if (error instanceof Error) message = error.message;\n    presentToast({\n      message: `Error loading data: ${message}`,\n      duration: 3000,\n      color: 'danger',\n    });\n  }\n\n  const handleEdit = () => {\n    if (!flashcardSetData) return;\n    setUpdatedInfo({\n      set_name: flashcardSetData.SetName || '',\n      set_description: flashcardSetData.SetDescription || '',\n    });\n    setEditedCards(cards?.map((card) => ({ ...card })));\n    setIsEditing(true);\n    setMetadataErrors({});\n    setCardErrors({});\n  };\n\n  const handleMetadataChange = (e: CustomEvent) => {\n    const { name } = e.target as HTMLInputElement;\n    const value = e.detail.value ?? '';\n    setUpdatedInfo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleCardChange = (\n    index: number,\n    field: 'Front' | 'Back',\n    value: string | null | undefined\n  ) => {\n    const newValue = value ?? '';\n    setEditedCards((prevCards) =>\n      prevCards?.map((card, i) =>\n        i === index ? { ...card, [field]: newValue } : card\n      )\n    );\n  };\n\n  const handleAddCard = () => {\n    if (!flashcardSetData) return;\n    const newCard: Flashcard = {\n      ID: 0 - (editedCards || []).filter((c) => c.ID <= 0).length - 1,\n      Front: '',\n      Back: '',\n      SetID: flashcardSetData.ID,\n      CreatedAt: new Date().toISOString(),\n      UpdatedAt: new Date().toISOString(),\n    };\n    setEditedCards((prevCards) => [...(prevCards || []), newCard]);\n  };\n\n  const handleRemoveCard = (index: number) => {\n    setEditedCards((prevCards) => prevCards.filter((_, i) => i !== index));\n  };\n\n  const validateMetadata = () => {\n    const newErrors: { setName?: string; setDescription?: string } = {};\n    let isValid = true;\n\n    const trimmedName = updatedInfo.set_name.trim();\n    const trimmedDescription = updatedInfo.set_description.trim();\n\n    if (!trimmedName) {\n      newErrors.setName = 'Set name is required';\n      isValid = false;\n    }\n    if (!trimmedDescription) {\n      newErrors.setDescription = 'Set description is required';\n      isValid = false;\n    }\n\n    setMetadataErrors(newErrors);\n    setUpdatedInfo({\n      set_name: trimmedName,\n      set_description: trimmedDescription,\n    });\n    return isValid;\n  };\n\n  const validateCards = () => {\n    const newCardErrors: { [key: number]: { front?: string; back?: string } } =\n      {};\n    let isValid = true;\n    editedCards.forEach((card, index) => {\n      const errors: { front?: string; back?: string } = {};\n      const trimmedFront = card.Front.trim();\n      const trimmedBack = card.Back.trim();\n\n      if (!trimmedFront) {\n        errors.front = 'Front cannot be empty';\n        isValid = false;\n      }\n      if (!trimmedBack) {\n        errors.back = 'Back cannot be empty';\n        isValid = false;\n      }\n      if (Object.keys(errors).length > 0) {\n        newCardErrors[index] = errors;\n      }\n      if (trimmedFront !== card.Front || trimmedBack !== card.Back) {\n        setEditedCards((prev) =>\n          prev?.map((c, i) =>\n            i === index ? { ...c, Front: trimmedFront, Back: trimmedBack } : c\n          )\n        );\n      }\n    });\n    setCardErrors(newCardErrors);\n    return isValid;\n  };\n\n  const handleSave = async () => {\n    const isMetadataValid = validateMetadata();\n    const areCardsValid = validateCards();\n\n    if (!isMetadataValid || !areCardsValid || !flashcardSetData) {\n      console.log('Form validation failed:', metadataErrors, cardErrors);\n      presentToast({\n        message: 'Please fix validation errors before saving.',\n        duration: 3000,\n        color: 'warning',\n      });\n      return;\n    }\n\n    try {\n      // Update set metadata if changed\n      if (updatedInfo.set_name !== (flashcardSetData.SetName || '').trim()) {\n        await updateSetMutation.mutateAsync({\n          id: id,\n          field: 'set_name',\n          value: updatedInfo.set_name,\n        });\n      }\n\n      if (\n        updatedInfo.set_description !==\n        (flashcardSetData.SetDescription || '').trim()\n      ) {\n        await updateSetMutation.mutateAsync({\n          id: id,\n          field: 'set_description',\n          value: updatedInfo.set_description,\n        });\n      }\n\n      // Process card changes\n      const originalCardMap = new Map(\n        (cards || []).map((card) => [card.ID, card])\n      );\n\n      // Delete removed cards\n      for (const originalCard of cards || []) {\n        if (\n          !editedCards.some((c) => c.ID === originalCard.ID) &&\n          originalCard.ID > 0\n        ) {\n          await deleteCardMutation.mutateAsync(originalCard.ID);\n        }\n      }\n\n      // Add/update cards\n      for (const editedCard of editedCards) {\n        if (editedCard.ID <= 0) {\n          // New card\n          await addCardMutation.mutateAsync({\n            setId: flashcardSetData.ID,\n            front: editedCard.Front,\n            back: editedCard.Back,\n          });\n        } else {\n          // Existing card\n          const originalCard = originalCardMap.get(editedCard.ID);\n          if (originalCard) {\n            // Update front if changed\n            if (editedCard.Front !== (originalCard.Front || '').trim()) {\n              await updateCardMutation.mutateAsync({\n                id: editedCard.ID,\n                field: 'front',\n                value: editedCard.Front,\n              });\n            }\n\n            // Update back if changed\n            if (editedCard.Back !== (originalCard.Back || '').trim()) {\n              await updateCardMutation.mutateAsync({\n                id: editedCard.ID,\n                field: 'back',\n                value: editedCard.Back,\n              });\n            }\n          }\n        }\n      }\n\n      presentToast({\n        message: 'Set details and cards updated successfully!',\n        duration: 2000,\n        color: 'success',\n      });\n\n      setIsEditing(false);\n      setMetadataErrors({});\n      setCardErrors({});\n    } catch (error) {\n      console.error('Failed to update set:', error);\n      let message = 'Unknown error during save';\n      if (error instanceof Error) message = error.message;\n      setMetadataErrors((prev) => ({\n        ...prev,\n        general: `Failed to save: ${message}`,\n      }));\n      presentToast({\n        message: `Failed to save changes: ${message}`,\n        duration: 3000,\n        color: 'danger',\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setMetadataErrors({});\n    setCardErrors({});\n  };\n\n  const handleDeleteSet = async () => {\n    if (!id) {\n      console.error('Cannot delete set: ID is missing.');\n      presentToast({\n        message: 'Cannot delete: Set ID missing.',\n        duration: 3000,\n        color: 'danger',\n      });\n      return;\n    }\n\n    try {\n      await deleteSetMutation.mutateAsync(id);\n      presentToast({\n        message: 'Set deleted successfully.',\n        duration: 2000,\n        color: 'success',\n      });\n      history.push('/student-dashboard');\n    } catch (error) {\n      console.error('Failed to delete set:', error);\n      let message = 'Unknown error during deletion';\n      if (error instanceof Error) message = error.message;\n      presentToast({\n        message: `Failed to delete set: ${message}`,\n        duration: 3000,\n        color: 'danger',\n      });\n    }\n  };\n\n  const handleBackClick = () => {\n    if (!isEditing) {\n      if (fromClassId) {\n        history.push(`/class/${fromClassId}`);\n      } else {\n        history.push('/home');\n      }\n    }\n  };\n\n  const cardsToDisplay = isEditing ? editedCards : cards;\n\n  if (isLoading && !isEditing) {\n    return (\n      <IonPage>\n        <IonContent className=\"\">\n          <Navbar />\n          <div className=\"flex items-center justify-center h-64\">\n            <IonSpinner name=\"circular\" />\n          </div>\n        </IonContent>\n        <Footer />\n      </IonPage>\n    );\n  }\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n          <div className=\"gap-4 mb-6\">\n            <SetOverviewHeader\n              loading={isLoading}\n              flashcardSetData={flashcardSetData}\n              isEditing={isEditing}\n              isOwner={isOwner}\n              updatedInfo={updatedInfo}\n              metadataErrors={metadataErrors}\n              onMetadataChange={handleMetadataChange}\n              onBackClick={handleBackClick}\n            />\n\n            <SetOverviewControls\n              isOwner={isOwner}\n              isEditing={isEditing}\n              onBackClick={handleBackClick}\n              onEditClick={handleEdit}\n              onSaveClick={handleSave}\n              onCancelClick={handleCancel}\n              onDeleteClick={() => setShowDeleteAlert(true)}\n              studyLink={`/flashcards/${id}`}\n            />\n          </div>\n\n          <SetCardList\n            loading={isLoading}\n            cardsToDisplay={cardsToDisplay}\n            isEditing={isEditing}\n            isOwner={isOwner}\n            cardErrors={cardErrors}\n            onCardChange={handleCardChange}\n            onAddCard={handleAddCard}\n            onRemoveCard={handleRemoveCard}\n            onAddCardClick={handleEdit}\n          />\n        </div>\n\n        <IonAlert\n          isOpen={showDeleteAlert}\n          onDidDismiss={() => setShowDeleteAlert(false)}\n          header={'Confirm Deletion'}\n          message={\n            'Are you sure you want to delete this set? This action cannot be undone.'\n          }\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: 'Delete',\n              role: 'destructive',\n              handler: handleDeleteSet,\n            },\n          ]}\n        />\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default SetOverview;\n","\n\nconst InfoRow = (props) => {\n  return (\n    <div className=\"flex justify-between items-center\">\n      <span className=\"font-medium\">{props.label}:</span>\n      <span>{props.value}</span>\n    </div>\n  );\n};\n\nexport default InfoRow;\n","import { EditableField } from '@/utils/EditableField';\nimport InfoRow from '@/utils/InfoRow';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonIcon,\n} from '@ionic/react';\nimport { createOutline } from 'ionicons/icons';\n\nconst UserAccountFirstRow = (props) => {\n  return (\n    <div className=\"flex flex-col md:flex-row gap-6\">\n      <IonCard className=\"md:w-1/2 rounded-lg border shadow-sm\">\n        <IonCardHeader className=\"p-6\">\n          <IonCardTitle className=\"text-xl font-rye font-semibold text-primary\">\n            Account Information\n          </IonCardTitle>\n        </IonCardHeader>\n        <IonCardContent className=\"p-6 pt-0\">\n          {props.isEditing ? (\n            <div className=\"space-y-4\">\n              <EditableField\n                type=\"text\"\n                label=\"First Name\"\n                name=\"first_name\"\n                value={props.updatedInfo?.first_name || ''}\n                error={props.errors.first_name}\n                onChange={props.handleChange}\n              />\n              <EditableField\n                type=\"text\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                value={props.updatedInfo?.last_name || ''}\n                error={props.errors.last_name}\n                onChange={props.handleChange}\n              />\n              <EditableField\n                type=\"text\"\n                label=\"Username\"\n                name=\"username\"\n                value={props.updatedInfo?.username || ''}\n                error={props.errors.username}\n                onChange={props.handleChange}\n              />\n              <EditableField\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={props.updatedInfo?.email || ''}\n                error={props.errors.email}\n                onChange={props.handleChange}\n              />\n              <div className=\"mt-4 flex justify-end\">\n                <IonButton onClick={props.handleSave}>Save Changes</IonButton>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              <InfoRow label=\"First Name\" value={props.userInfo?.first_name} />\n              <InfoRow label=\"Last Name\" value={props.userInfo?.last_name} />\n              <InfoRow label=\"Username\" value={props.userInfo?.username} />\n              <InfoRow label=\"Email\" value={props.userInfo?.email} />\n              <IonButton onClick={props.handleEdit} className=\"mt-4\">\n                <IonIcon slot=\"start\" icon={createOutline} />\n                Edit Info\n              </IonButton>\n            </div>\n          )}\n        </IonCardContent>\n      </IonCard>\n\n      <IonCard className=\"md:w-1/2 rounded-lg border shadow-sm\">\n        <IonCardHeader className=\"p-6\">\n          <IonCardTitle className=\"text-xl font-rye font-semibold text-primary\">\n            Account Stats\n          </IonCardTitle>\n        </IonCardHeader>\n        <IonCardContent className=\"p-6 pt-0\">\n          <div className=\"space-y-3\">\n            <InfoRow\n              label=\"Account Created\"\n              value={props.userInfo?.created_at}\n            />\n            <InfoRow\n              label=\"Login Streak\"\n              value={props.userInfo?.login_streak}\n            />\n            <InfoRow label=\"Classes Taken\" value={props.userInfo?.numClasses} />\n            <InfoRow\n              label=\"Cards Studied/Total Views\"\n              value={`${props.userInfo?.cardsStudied} / ${props.userInfo?.totalCardViews}`}\n            />\n            <InfoRow label=\"Total Score\" value={props.userInfo?.totalScore} />\n          </div>\n        </IonCardContent>\n      </IonCard>\n    </div>\n  );\n};\n\nexport default UserAccountFirstRow;\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nconst IMAGE_SIZE = 256; // Size of the image in pixels\n\nexport default function LoginStreakCard(props) {\n  const [frame, setFrame] = useState(0);\n  const { ref, inView } = useInView({\n    threshold: 0.7,\n    triggerOnce: true,\n  });\n\n  useEffect(() => {\n    let delay = 1000;\n    if (inView) {\n      const timer = setTimeout(() => setFrame(frame + 1), (delay *= 0.75));\n      if (frame == props.streak - 1) {\n        clearTimeout(timer);\n      }\n    }\n  }, [frame, props.streak, inView]);\n\n  return (\n    <IonCard className=\"md:w-1/2 rounded-lg border shadow-sm\">\n      <IonCardHeader className=\"p-6\">\n        <IonCardTitle className=\"text-xl font-rye font-semibold text-primary\">\n          Login Streak\n        </IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent\n        ref={ref}\n        className=\"py-6 px-0 flex flex-row items-center justify-center gap-8\"\n      >\n        <img\n          src={`/frame-${frame}.png`}\n          alt=\"bonsai tree\"\n          width={IMAGE_SIZE}\n          height={IMAGE_SIZE}\n        />\n        <span className=\"text-6xl px-4 font-rye font-extrabold text-[color:--ion-color-primary] tabular-nums -ml-[30%] me:ml-0\">\n          {frame + 1}\n        </span>\n      </IonCardContent>\n    </IonCard>\n  );\n}\n","import {\n  IonAlert,\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonSelect,\n  IonSelectOption,\n} from '@ionic/react';\nimport LoginStreakCard from './LoginStreakCard';\n\nconst UserAccountSecondRow = (props) => {\n  return (\n    <>\n      <div className=\"flex flex-col md:flex-row gap-6 py-6\">\n        <LoginStreakCard streak={props.streak} />\n        <IonCard className=\"md:w-1/2 rounded-lg border shadow-sm\">\n          <IonCardHeader className=\"p-6\">\n            <IonCardTitle className=\"text-xl font-rye font-semibold text-primary\">\n              Account Options\n            </IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent className=\"p-6 pt-0\">\n            <div className=\"space-y-4\">\n              <IonSelect\n                label=\"Theme\"\n                value={props.theme}\n                onIonChange={(e) =>\n                  props.setTheme(e.detail.value as 'light' | 'dark')\n                }\n                interface=\"popover\"\n                placeholder=\"Select Theme\"\n              >\n                <IonSelectOption value=\"light\">Light</IonSelectOption>\n                <IonSelectOption value=\"dark\">Dark</IonSelectOption>\n              </IonSelect>\n              <div className=\"flex justify-between items-center\">\n                <div className=\"mr-4\">\n                  <h4 className=\"text-sm font-medium text-black dark:text-white\">\n                    Change Your Password\n                  </h4>\n                  <p className=\"text-xs dark:text-gray-300\">\n                    Reset your account password.\n                  </p>\n                </div>\n                <IonButton\n                  color=\"primary\"\n                  onClick={() => props.setShowPasswordAlert(true)}\n                >\n                  Change Password\n                </IonButton>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <div className=\"mr-4\">\n                  <h4 className=\"text-sm font-medium text-black dark:text-white\">\n                    Delete Your Account\n                  </h4>\n                  <p className=\"text-xs dark:text-gray-300\">\n                    This will delete all account data and can't be undone.\n                  </p>\n                </div>\n                <IonButton\n                  color=\"danger\"\n                  onClick={() => props.setShowDeleteAlert(true)}\n                >\n                  Delete Account\n                </IonButton>\n              </div>\n            </div>\n          </IonCardContent>\n        </IonCard>\n      </div>\n\n      <IonAlert\n        isOpen={props.showPasswordAlert}\n        onDidDismiss={() => props.setShowPasswordAlert(false)}\n        header=\"Change Password\"\n        inputs={[\n          {\n            name: 'oldPassword',\n            type: 'password',\n            placeholder: 'Old Password',\n          },\n          {\n            name: 'newPassword',\n            type: 'password',\n            placeholder: 'New Password',\n          },\n          {\n            name: 'confirmPassword',\n            type: 'password',\n            placeholder: 'Confirm New Password',\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n            },\n          },\n          {\n            text: 'Save',\n            handler: (data) => {\n              if (data.newPassword !== data.confirmPassword) {\n                props.presentToast({\n                  message: 'Passwords do not match',\n                  duration: 2000,\n                  color: 'danger',\n                });\n                return true;\n              }\n\n              console.log('Password changed');\n              return true;\n            },\n          },\n        ]}\n      />\n\n      <IonAlert\n        isOpen={props.showDeleteAlert}\n        onDidDismiss={() => props.setShowDeleteAlert(false)}\n        header=\"Confirm Deletion\"\n        message=\"Are you sure you want to delete your account? This action cannot be undone.\"\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n            },\n          },\n          {\n            text: 'Delete',\n            handler: () => {\n              console.log('Account deleted');\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default UserAccountSecondRow;\n","import { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport type { User } from '@/types/globalTypes';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonContent,\n  IonIcon,\n  IonPage,\n  IonSpinner,\n  useIonToast,\n  useIonViewWillEnter,\n} from '@ionic/react';\nimport { arrowBackOutline } from 'ionicons/icons';\nimport { useCallback, useState } from 'react';\nimport UserAccountFirstRow from '../components/UserAccountFirstRow';\nimport UserAccountSecondRow from '../components/UserAccountSecondRow';\n\nconst UserAccount = () => {\n  const { theme, setTheme } = useTheme();\n  const [userInfo, setUserInfo] = useState<User>();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [expandedClass, setExpandedClass] = useState<number | null>(null);\n  const [showPasswordAlert, setShowPasswordAlert] = useState(false);\n  const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState(userInfo);\n\n  const toggleClassDetails = (classID: number) => {\n    setExpandedClass(expandedClass === classID ? null : classID);\n  };\n\n  const handleEdit = () => {\n    setUpdatedInfo(userInfo);\n    setIsEditing(true);\n  };\n\n  const handleSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const fieldsToUpdate = ['first_name', 'last_name', 'username', 'email'];\n\n    try {\n      const updatePromises = fieldsToUpdate\n        ?.filter((field) => updatedInfo[field] !== userInfo[field])\n        ?.map((field) =>\n          makeHttpCall<User>(`/api/users/${field}`, {\n            method: 'PUT',\n            headers: {\n              [field]: updatedInfo[field],\n            },\n          })\n        );\n\n      await Promise.all(updatePromises);\n      setUserInfo(updatedInfo);\n      setIsEditing(false);\n    } catch (error) {\n      console.error(error);\n      alert('Failed to update some fields. Please try again.');\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: {\n      first_name?: string;\n      last_name?: string;\n      email?: string;\n      username?: string;\n    } = {};\n    let isValid = true;\n\n    if (!updatedInfo.first_name) {\n      newErrors.first_name = 'First name is required';\n      isValid = false;\n    }\n\n    if (!updatedInfo.last_name) {\n      newErrors.last_name = 'Last name is required';\n      isValid = false;\n    }\n\n    if (!updatedInfo.email) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(updatedInfo.email)) {\n      newErrors.email = 'Email is invalid';\n      isValid = false;\n    }\n\n    if (!updatedInfo.username) {\n      newErrors.username = 'Username is required';\n      isValid = false;\n    }\n\n    updatedInfo.first_name = updatedInfo.first_name.trim();\n    updatedInfo.last_name = updatedInfo.last_name.trim();\n    updatedInfo.email = updatedInfo.email.trim();\n    updatedInfo.username = updatedInfo.username.trim();\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const [errors, setErrors] = useState<{\n    first_name?: string;\n    last_name?: string;\n    email?: string;\n    username?: string;\n    general?: string;\n  }>({});\n\n  const handleChange = (e: CustomEvent) => {\n    const { name } = e.target as HTMLIonInputElement;\n    const value = e.detail.value;\n    setUpdatedInfo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const fetchUserData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await makeHttpCall<User>(`/api/users/`, {\n        method: 'GET',\n        headers: {},\n      });\n      setUserInfo(data);\n      setUpdatedInfo(data);\n      console.log('data', data as User);\n    } catch (error) {\n      console.log(`Failed to fetch User Data: ${error.message}`);\n      setError(`Failed to fetch User Data: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useIonViewWillEnter(() => {\n    console.log('UserAccount will enter, fetching data...');\n    fetchUserData();\n  });\n\n  const [presentToast] = useIonToast();\n\n  return (\n    <IonPage>\n      <Navbar />\n      <IonContent>\n        <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n          <div className=\"mb-8\">\n            <p className=\"text-xl font-rye font-semibold text-primary\">\n              {loading\n                ? 'Loading...'\n                : `Welcome back, ${userInfo?.username || 'User'}!`}\n            </p>\n          </div>\n\n          <IonButton onClick={() => window.history.back()} className=\"mb-6\">\n            <IonIcon slot=\"start\" icon={arrowBackOutline} />\n            Back\n          </IonButton>\n\n          {loading && (\n            <div className=\"flex justify-center items-center p-8\">\n              <IonSpinner name=\"circular\" />\n              <span className=\"ml-2\">Loading account details...</span>\n            </div>\n          )}\n\n          {error && !loading && (\n            <div className=\"text-red-500 text-center p-4 border border-red-500 rounded-md\">\n              {error}\n            </div>\n          )}\n\n          {!loading && !error && userInfo && (\n            <>\n              <UserAccountFirstRow\n                isEditing={isEditing}\n                errors={errors}\n                handleChange={handleChange}\n                handleSave={handleSave}\n                updatedInfo={updatedInfo}\n                userInfo={userInfo}\n                handleEdit={handleEdit}\n              />\n              <UserAccountSecondRow\n                streak={userInfo?.login_streak ?? 0}\n                isEditing={isEditing}\n                errors={errors}\n                handleChange={handleChange}\n                handleSave={handleSave}\n                updatedInfo={updatedInfo}\n                userInfo={userInfo}\n                expandedClass={expandedClass}\n                toggleClassDetails={toggleClassDetails}\n                showPasswordAlert={showPasswordAlert}\n                setShowPasswordAlert={setShowPasswordAlert}\n                showDeleteAlert={showDeleteAlert}\n                setShowDeleteAlert={setShowDeleteAlert}\n                theme={theme}\n                setTheme={setTheme}\n                presentToast={presentToast}\n              />\n            </>\n          )}\n        </div>\n      </IonContent>\n      <Footer />\n    </IonPage>\n  );\n};\n\nexport default UserAccount;\n","import { AuthForm } from '@/components/auth/AuthForm';\nimport ConfirmResetPass from '@/components/auth/ConfirmResetPass';\nimport ResetPass from '@/components/auth/ResetPass';\nimport { Footer } from '@/components/Footer';\nimport { Navbar } from '@/components/Navbar';\nimport { Toaster as Sonner } from '@/components/ui/sonner';\nimport { Toaster } from '@/components/ui/toaster';\nimport { TooltipProvider } from '@/components/ui/tooltip';\nimport { IonApp, IonRouterOutlet, setupIonicReact } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport ClassDetail from './pages/ClassDetail';\nimport CreateClass from './pages/CreateClass';\nimport CreateSet from './pages/CreateSet';\nimport Flashcard from './pages/Flashcard';\nimport Home from './pages/Home';\nimport Index from './pages/Index';\nimport NotFound from './pages/NotFound';\nimport PublicCards from './pages/PublicCards';\nimport PublicClasses from './pages/PublicClasses';\nimport SetOverview from './pages/SetOverview';\nimport UserAccount from './pages/UserAccount';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/display.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\n\n/* Theme variables */\n// import './theme/variables.css'; Removed this import\n\nsetupIonicReact();\n\nconst queryClient = new QueryClient();\n\n// const Home = React.lazy(() => import('./pages/Home'));\n// const PublicCards = React.lazy(() => import('./pages/PublicCards'));\n// const PublicClasses = React.lazy(() => import('./pages/PublicClasses'));\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <TooltipProvider>\n          <IonApp>\n            {/* @ts-expect-error - unsolvable type error */}\n            <IonReactRouter>\n              <Suspense fallback={<div>Loading...</div>}>\n                <Navbar />\n                <IonRouterOutlet id=\"main-content\">\n                  <Route exact path=\"/\" component={Index} />\n                  <Route exact path=\"/home\" component={Home} />\n                  <Route exact path=\"/class/:id\" component={ClassDetail} />\n                  <Route exact path=\"/auth\" component={AuthForm} />\n                  <Route exact path=\"/reset-password\" component={ResetPass} />\n                  <Route\n                    exact\n                    path=\"/confirm-reset-password\"\n                    component={ConfirmResetPass}\n                  />\n                  <Route exact path=\"/public-cards\" component={PublicCards} />\n                  <Route exact path=\"/user-account\" component={UserAccount} />\n                  <Route exact path=\"/flashcards/:id\" component={Flashcard} />\n                  <Route exact path=\"/create-set\" component={CreateSet} />\n                  <Route exact path=\"/create-class\" component={CreateClass} />\n                  <Route\n                    exact\n                    path=\"/public-classes\"\n                    component={PublicClasses}\n                  />\n                  <Route\n                    exact\n                    path=\"/set-overview/:id\"\n                    component={SetOverview}\n                  />\n                  <Route component={NotFound} />\n                </IonRouterOutlet>\n              </Suspense>\n              <Footer />\n            </IonReactRouter>\n          </IonApp>\n          <Toaster />\n          <Sonner />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(<App />);\n"],"names":["cn","inputs","twMerge","clsx","alertVariants","cva","Alert","React.forwardRef","className","variant","props","ref","jsx","AlertTitle","AlertDescription","buttonVariants","Button","size","asChild","Comp","Slot","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Input","type","labelVariants","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","defaultOpts","API_BASE","makeHttpCall","url","options","finalOpts","response","msg","error","AuthForm","isLogin","setIsLogin","useState","isLoading","setIsLoading","email","setEmail","password","setPassword","username","setUsername","firstName","setFirstName","lastName","setLastName","errors","setErrors","ionRouter","useIonRouter","validateForm","newErrors","isValid","handleSubmit","e","data","resetForm","jsxs","AlertCircle","Fragment","Link","LogIn","ConfirmResetPass","_a","useLocation","confirmPassword","setConfirmPassword","token","setToken","history","useHistory","IonPage","IonContent","ResetPass","errorMessage","Footer","location","IonFooter","IonToolbar","IonButtons","IonButton","IonIcon","home","IonText","ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useEffect","useTheme","context","useContext","Navbar","popoverEvent","setPopoverEvent","openPopover","event","closePopover","handleMenuItemClick","route","toggleDarkMode","IonMenu","IonHeader","IonMenuToggle","close","IonList","IonItem","menu","add","IonPopover","sunny","moon","personCircle","Toaster","Sonner","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","toasts","title","description","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","useClassDetails","useQuery","useClassSets","useClassMembers","useClassLeaderboard","useUserSets","useUserClasses","useUpdateClass","queryClient","useQueryClient","useMutation","field","value","_","variables","useDeleteStudent","class_id","studentId","useAddSetToClass","classId","setId","AddSetToClassDialog","selectedSetId","setSelectedSetId","presentToast","useIonToast","userSets","isLoadingUserSets","userSetsError","addSetMutation","availableSets","set","handleAddSet","err","IonModal","IonTitle","IonSpinner","IonRadioGroup","IonRadio","IonLabel","ClassDetailControls","addOutline","createOutline","EditableField","IonInput","ClassDetailHeader","arrowBackOutline","ClassDetailTabs","IonSegment","IonSegmentButton","bookOutline","trophyOutline","peopleOutline","FlashcardCarousel","flashcards","setFlashcards","IonGrid","IonRow","_b","a","b","IonCol","IonCard","IonCardHeader","IonCardTitle","IonCardContent","Leaderboard","entry","motion","LeaderboardTab","StudentList","student","trashOutline","StudentTab","showDeleteAlert","setShowDeleteAlert","handleShowDeleteAlert","IonAlert","ClassDetail","useParams","currentCardIndex","setCurrentCardIndex","carouselApi","setCarouselApi","tab","setTab","isEditing","setIsEditing","updatedInfo","setUpdatedInfo","showAddSetDialog","setShowAddSetDialog","formErrors","setFormErrors","classData","isLoadingClass","classError","flashcardSets","isLoadingSets","setsError","classUsers","isLoadingUsers","usersError","leaderboardData","isLoadingLeaderboard","leaderboardError","updateClassMutation","deleteStudentMutation","isTeacher","handleEdit","handleSave","handleChange","name","prev","handleCancel","handleDeleteStudent","queryLoading","queryError","FlashcardSetList","CreateClass","loading","setLoading","setError","formData","setFormData","showSuccess","setShowSuccess","submitForm","IonTextarea","IonToast","CreateSet","setTitle","setDescription","saveSet","hasError","setResponse","useFlashcardSetDetails","useFlashcardCards","useUpdateCardStudyStatus","cardId","isCorrect","FlashCard","isFlipped","setIsFlipped","updateCardStatus","handleScoreUpdate","handleIncorrectClick","handleCorrectClick","Check","CarouselContext","React.createContext","useCarousel","React.useContext","Carousel","orientation","opts","setApi","plugins","carouselRef","api","useEmblaCarousel","canScrollPrev","setCanScrollPrev","canScrollNext","setCanScrollNext","onSelect","React.useCallback","scrollPrev","scrollNext","handleKeyDown","CarouselContent","CarouselItem","CarouselPrevious","ArrowLeft","CarouselNext","ArrowRight","Flashcard","flashcardSetData","isLoadingSet","cards","isLoadingCards","cardsError","message","handleAdvance","progressPercentage","card","Home","classes","setClasses","sets","setSets","classesLoading","setClassesLoading","setsLoading","setSetsLoading","fetchClassesOfUser","fetchSetsOfUser","useIonViewWillEnter","listOutline","cls","IonCardSubtitle","Index","NotFound","PublicFlashcards","setFlashcardSets","searchText","setSearchText","filteredFlashcardSets","fetchSets","res","isUserMember","userSet","IonSearchbar","PublicClasses","userClasses","isLoadingUserClasses","userClass","filteredClasses","x","classItem","SetCardList","hasCards","_c","_d","SetOverviewControls","SetOverviewHeader","useSetDetails","useSetCards","useUpdateSet","useUpdateCard","query","querySetId","setCards","useAddCard","front","back","useDeleteCard","useDeleteSet","SetOverview","fromClassId","updateSetMutation","updateCardMutation","addCardMutation","deleteCardMutation","deleteSetMutation","editedCards","setEditedCards","metadataErrors","setMetadataErrors","cardErrors","setCardErrors","isOwner","handleMetadataChange","handleCardChange","newValue","prevCards","i","handleAddCard","newCard","c","handleRemoveCard","validateMetadata","trimmedName","trimmedDescription","validateCards","newCardErrors","trimmedFront","trimmedBack","isMetadataValid","areCardsValid","originalCardMap","originalCard","editedCard","handleDeleteSet","handleBackClick","cardsToDisplay","InfoRow","UserAccountFirstRow","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","IMAGE_SIZE","LoginStreakCard","frame","setFrame","inView","useInView","delay","timer","UserAccountSecondRow","IonSelect","IonSelectOption","UserAccount","userInfo","setUserInfo","expandedClass","setExpandedClass","showPasswordAlert","setShowPasswordAlert","toggleClassDetails","classID","fieldsToUpdate","updatePromises","fetchUserData","useCallback","setupIonicReact","QueryClient","App","QueryClientProvider","IonApp","IonReactRouter","Suspense","IonRouterOutlet","Route","PublicCards","container","root","createRoot"],"mappings":"0oDAGO,SAASA,KAAMC,EAAsB,CACnC,OAAAC,GAAQC,GAAKF,CAAM,CAAC,CAC7B,CCAA,MAAMG,GAAgBC,GACpB,4JACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,gCACT,YACE,yFAAA,CAEN,EACA,gBAAiB,CACf,QAAS,SAAA,CACX,CAEJ,EAEMC,GAAQC,EAAAA,WAGZ,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAS,GAAGC,CAAM,EAAGC,IACnCC,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,KAAK,QACL,UAAWX,EAAGI,GAAc,CAAE,QAAAK,CAAS,CAAA,EAAGD,CAAS,EAClD,GAAGE,CAAA,CACN,CACD,EACDJ,GAAM,YAAc,QAEpB,MAAMO,GAAaN,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,KAAA,CACC,IAAAD,EACA,UAAWX,EAAG,+CAAgDQ,CAAS,EACtE,GAAGE,CAAA,CACN,CACD,EACDG,GAAW,YAAc,aAEzB,MAAMC,GAAmBP,EAGvB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWX,EAAG,gCAAiCQ,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDI,GAAiB,YAAc,mBClD/B,MAAMC,GAAiBV,GACrB,2VACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,yDACT,YACE,qEACF,QACE,iFACF,UACE,+DACF,MAAO,+CACP,KAAM,iDACR,EACA,KAAM,CACJ,QAAS,iBACT,GAAI,sBACJ,GAAI,uBACJ,KAAM,WAAA,CAEV,EACA,gBAAiB,CACf,QAAS,UACT,KAAM,SAAA,CACR,CAEJ,EAQMW,GAAST,EAAM,WACnB,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAS,KAAAQ,EAAM,QAAAC,EAAU,GAAO,GAAGR,CAAM,EAAGC,IAAQ,CAC1D,MAAAQ,EAAOD,EAAUE,GAAO,SAE5B,OAAAR,EAAA,IAACO,EAAA,CACC,UAAWnB,EAAGe,GAAe,CAAE,QAAAN,EAAS,KAAAQ,EAAM,UAAAT,CAAA,CAAW,CAAC,EAC1D,IAAAG,EACC,GAAGD,CAAA,CACN,CAAA,CAGN,EACAM,GAAO,YAAc,SCjDrB,MAAMK,GAAOd,EAGX,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWX,EACT,2DACAQ,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDW,GAAK,YAAc,OAEnB,MAAMC,GAAaf,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWX,EAAG,gCAAiCQ,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDY,GAAW,YAAc,aAEzB,MAAMC,GAAYhB,EAGhB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,KAAA,CACC,IAAAD,EACA,UAAWX,EACT,qDACAQ,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDa,GAAU,YAAc,YAExB,MAAMC,GAAkBjB,EAGtB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,IAAA,CACC,IAAAD,EACA,UAAWX,EAAG,gCAAiCQ,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDc,GAAgB,YAAc,kBAE9B,MAAMC,GAAclB,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAS,EAAAC,UACzB,MAAI,CAAA,IAAAA,EAAU,UAAWX,EAAG,WAAYQ,CAAS,EAAI,GAAGE,EAAO,CACjE,EACDe,GAAY,YAAc,cAE1B,MAAMC,GAAanB,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWX,EAAG,6BAA8BQ,CAAS,EACpD,GAAGE,CAAA,CACN,CACD,EACDgB,GAAW,YAAc,aCxEzB,MAAMC,EAAQpB,EAAM,WAClB,CAAC,CAAE,UAAAC,EAAW,KAAAoB,EAAM,GAAGlB,CAAA,EAASC,IAE5BC,EAAA,IAAC,QAAA,CACC,KAAAgB,EACA,UAAW5B,EACT,iYACAQ,CACF,EACA,IAAAG,EACC,GAAGD,CAAA,CACN,CAGN,EACAiB,EAAM,YAAc,QCbpB,MAAME,GAAgBxB,GACpB,4FACF,EAEMyB,EAAQvB,EAIZ,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAACmB,GAAA,CACC,IAAApB,EACA,UAAWX,EAAG6B,GAAc,EAAGrB,CAAS,EACvC,GAAGE,CAAA,CACN,CACD,EACDoB,EAAM,YAAcC,GAAoB,YCjBxC,MAAMC,GAAc,EACdC,GAAqB,IAgB3B,IAAIC,GAAQ,EAEZ,SAASC,IAAQ,CACN,OAAAD,IAAAA,GAAQ,GAAK,OAAO,iBACtBA,GAAM,SAAS,CACxB,CA0BA,MAAME,OAAoB,IAEpBC,GAAoBC,GAAoB,CACxC,GAAAF,GAAc,IAAIE,CAAO,EAC3B,OAGI,MAAAC,EAAU,WAAW,IAAM,CAC/BH,GAAc,OAAOE,CAAO,EACnBE,GAAA,CACP,KAAM,eACN,QAAAF,CAAA,CACD,GACAL,EAAkB,EAEPG,GAAA,IAAIE,EAASC,CAAO,CACpC,EAEaE,GAAU,CAACC,EAAcC,IAA0B,CAC9D,OAAQA,EAAO,KAAM,CACnB,IAAK,YACI,MAAA,CACL,GAAGD,EACH,OAAQ,CAACC,EAAO,MAAO,GAAGD,EAAM,MAAM,EAAE,MAAM,EAAGV,EAAW,CAC9D,EAEF,IAAK,eACI,MAAA,CACL,GAAGU,EACH,OAAQA,EAAM,OAAO,IAAK,GACxB,EAAE,KAAOC,EAAO,MAAM,GAAK,CAAE,GAAG,EAAG,GAAGA,EAAO,OAAU,CAAA,CAE3D,EAEF,IAAK,gBAAiB,CACd,KAAA,CAAE,QAAAL,GAAYK,EAIpB,OAAIL,EACFD,GAAiBC,CAAO,EAElBI,EAAA,OAAO,QAASE,GAAU,CAC9BP,GAAiBO,EAAM,EAAE,CAAA,CAC1B,EAGI,CACL,GAAGF,EACH,OAAQA,EAAM,OAAO,IAAKG,GACxBA,EAAE,KAAOP,GAAWA,IAAY,OAC5B,CACE,GAAGO,EACH,KAAM,EAAA,EAERA,CAAA,CAER,CAAA,CAEF,IAAK,eACC,OAAAF,EAAO,UAAY,OACd,CACL,GAAGD,EACH,OAAQ,CAAA,CACV,EAEK,CACL,GAAGA,EACH,OAAQA,EAAM,OAAO,OAAQ,GAAM,EAAE,KAAOC,EAAO,OAAO,CAC5D,CAAA,CAEN,EAEMG,GAA2C,CAAC,EAElD,IAAIC,GAAqB,CAAE,OAAQ,EAAG,EAEtC,SAASP,GAASG,EAAgB,CAClBI,GAAAN,GAAQM,GAAaJ,CAAM,EAC/BG,GAAA,QAASE,GAAa,CAC9BA,EAASD,EAAW,CAAA,CACrB,CACH,CAIA,SAASH,GAAM,CAAE,GAAGlC,GAAgB,CAClC,MAAMuC,EAAKd,GAAM,EAEXe,EAAUxC,GACd8B,GAAS,CACP,KAAM,eACN,MAAO,CAAE,GAAG9B,EAAO,GAAAuC,CAAG,CAAA,CACvB,EACGE,EAAU,IAAMX,GAAS,CAAE,KAAM,gBAAiB,QAASS,EAAI,EAE5D,OAAAT,GAAA,CACP,KAAM,YACN,MAAO,CACL,GAAG9B,EACH,GAAAuC,EACA,KAAM,GACN,aAAeG,GAAS,CACjBA,GAAcD,EAAA,CAAA,CACrB,CACF,CACD,EAEM,CACL,GAAAF,EACA,QAAAE,EACA,OAAAD,CACF,CACF,CAEA,SAASG,IAAW,CAClB,KAAM,CAACX,EAAOY,CAAQ,EAAIC,EAAAA,SAAsBR,EAAW,EAE3DS,OAAAA,EAAAA,UAAgB,KACdV,GAAU,KAAKQ,CAAQ,EAChB,IAAM,CACL,MAAAG,EAAQX,GAAU,QAAQQ,CAAQ,EACpCG,EAAQ,IACAX,GAAA,OAAOW,EAAO,CAAC,CAE7B,GACC,CAACf,CAAK,CAAC,EAEH,CACL,GAAGA,EACH,MAAAE,GACA,QAAUN,GAAqBE,GAAS,CAAE,KAAM,gBAAiB,QAAAF,CAAS,CAAA,CAC5E,CACF,CC9KA,MAAMoB,GAA4B,CAChC,OAAQ,MACR,QAAS,CAAC,EACV,YAAa,SACf,EAEMC,GAAW,kCAYjB,eAAsBC,EACpBC,EAAc,GACdC,EAAwBJ,GACZ,CACZ,MAAMK,EAAY,CAChB,GAAGL,GACH,GAAGI,CACL,EACI,GAAA,CAEF,MAAME,EAAW,MAAM,MAAML,GAAWE,EAAKE,CAAS,EAGlD,GAAA,CAACC,EAAS,GAAI,CACR,QAAA,IAAI,OAAQA,CAAQ,EAWtB,MAAAC,EAAM,MAAMD,EAAS,KAAK,EAEhC,MAAM,IAAI,MACR,uBAAuBA,EAAS,MAAM,cAAcC,CAAG,EACzD,CAAA,CAIE,OAAAD,EAAS,SAAW,IACf,KAII,MAAMA,EAAS,KAAK,QAE1BE,EAAO,CACN,cAAA,MAAM,sBAAuBA,CAAK,EACpCA,CAAA,CAEV,8mCCtDaC,GAAW,IAAM,CAC5B,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAG1C,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAS,EAAE,EAC/B,CAACK,EAAUC,CAAW,EAAIN,EAAAA,SAAS,EAAE,EAGrC,CAACO,EAAUC,CAAW,EAAIR,EAAAA,SAAS,EAAE,EACrC,CAACS,EAAWC,CAAY,EAAIV,EAAAA,SAAS,EAAE,EACvC,CAACW,EAAUC,CAAW,EAAIZ,EAAAA,SAAS,EAAE,EAGrC,CAACa,EAAQC,CAAS,EAAId,EAAAA,SAKzB,CAAA,CAAE,EAECe,EAAYC,GAAa,EACzB,CAAE,MAAA1C,CAAM,EAAIS,GAAS,EAGrBkC,EAAe,IAAM,CACzB,MAAMC,EAIF,CAAC,EACL,IAAIC,EAAU,GAGd,OAAKhB,EAGO,eAAe,KAAKA,CAAK,IACnCe,EAAU,MAAQ,mBACRC,EAAA,KAJVD,EAAU,MAAQ,oBACRC,EAAA,IAOPd,EAGMA,EAAS,OAAS,IAC3Ba,EAAU,SAAW,yCACXC,EAAA,KAJVD,EAAU,SAAW,uBACXC,EAAA,IAOR,CAACrB,GAAW,CAACS,IACfW,EAAU,SAAW,uBACXC,EAAA,IAGZL,EAAUI,CAAS,EACZC,CACT,EAEMC,EAAe,MAAOC,GAAuB,CAI7C,GAHJA,EAAE,eAAe,EAGb,EAACJ,IAIL,CAAAf,EAAa,EAAI,EACjBY,EAAU,CAAA,CAAE,EAER,GAAA,CACE,IAAAQ,EAEAxB,EAEKwB,EAAA,MAAMhC,EAAa,SAAU,CAClC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,YAAa,UACb,KAAM,KAAK,UAAU,CACnB,MAAAa,EACA,SAAAE,CACD,CAAA,CAAA,CACF,EAGMiB,EAAA,MAAMhC,EAAa,UAAW,CACnC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,YAAa,UACb,KAAM,KAAK,UAAU,CACnB,SAAAiB,EACA,MAAAJ,EACA,SAAAE,EACA,WAAYI,EACZ,UAAWE,CACZ,CAAA,CAAA,CACF,EAIGrC,EAAA,CACJ,SAAU,IACV,MAAOwB,EAAU,gBAAkB,kBACnC,YAAaA,EACT,wCACA,6CAAA,CACL,EAGDiB,EAAU,KAAK,OAAO,QACfnB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CkB,EAAUlB,CAAK,EAGX,OAAO,KAAKiB,CAAM,EAAE,SAAW,GACvBC,EAAA,CACR,QACElB,EAAM,SAAW,iDAAA,CACpB,EAGGtB,EAAA,CACJ,MAAO,wBACP,YACEsB,EAAM,SAAW,+CACnB,QAAS,aAAA,CACV,CAAA,QACD,CACAM,EAAa,EAAK,CAAA,EAEtB,EAEMqB,EAAY,IAAM,CACtBT,EAAU,CAAA,CAAE,EACRhB,GACFU,EAAY,EAAE,EACdE,EAAa,EAAE,EACfE,EAAY,EAAE,IAEdR,EAAS,EAAE,EACXE,EAAY,EAAE,EAElB,EAGE,OAAAkB,EAAA,KAACzE,GAAK,CAAA,UAAU,6BACd,SAAA,CAAAyE,OAACxE,GACC,CAAA,SAAA,CAAAV,MAACW,GAAU,CAAA,UAAU,+CAClB,SAAA6C,EAAU,eAAiB,iBAC9B,EACCxD,EAAA,IAAAY,GAAA,CACE,SACG4C,EAAA,qCACA,2BACN,CAAA,CAAA,EACF,EACA0B,EAAAA,KAAC,OAAK,CAAA,SAAUJ,EACd,SAAA,CAACI,EAAAA,KAAArE,GAAA,CAAY,UAAU,YACpB,SAAA,CAAA0D,EAAO,SACLW,EAAA,KAAAxF,GAAA,CAAM,QAAQ,cAAc,UAAU,OACrC,SAAA,CAACM,EAAAA,IAAAmF,GAAA,CAAY,UAAU,SAAU,CAAA,EACjCnF,EAAAA,IAACE,GAAkB,CAAA,SAAAqE,EAAO,OAAQ,CAAA,CAAA,EACpC,EAGD,CAACf,GAEE0B,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAACF,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,WACT,SAAA,UAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,WACH,KAAK,OACL,YAAY,UACZ,MAAOkD,EACP,SAAWc,GAAMb,EAAYa,EAAE,OAAO,KAAK,EAC3C,SAAQ,GACR,UAAWR,EAAO,SAAW,iBAAmB,EAAA,CAClD,EACCA,EAAO,UACNvE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAS,CAAA,CAAA,EAE9D,EACAkF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,YACT,SAAA,YAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,YACH,KAAK,OACL,YAAY,OACZ,MAAOoD,EACP,SAAWY,GAAMX,EAAaW,EAAE,OAAO,KAAK,EAC5C,SAAQ,EAAA,CAAA,CACV,EACF,EACAG,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,WACT,SAAA,WAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,WACH,KAAK,OACL,YAAY,MACZ,MAAOsD,EACP,SAAWU,GAAMT,EAAYS,EAAE,OAAO,KAAK,EAC3C,SAAQ,EAAA,CAAA,CACV,CACF,CAAA,CAAA,EACF,EAEFG,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,QACT,SAAA,OAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,QACH,KAAK,QACL,YAAY,mBACZ,MAAO8C,EACP,SAAWkB,GAAMjB,EAASiB,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,UAAWR,EAAO,MAAQ,iBAAmB,EAAA,CAC/C,EACCA,EAAO,OACNvE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAM,CAAA,CAAA,EAE3D,EACAkF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,WACT,SAAA,UAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,WACH,KAAK,WACL,MAAOgD,EACP,SAAWgB,GAAMf,EAAYe,EAAE,OAAO,KAAK,EAC3C,SAAQ,GACR,UAAWR,EAAO,SAAW,iBAAmB,EAAA,CAClD,EACCA,EAAO,UACNvE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,SAAS,EAE3D,CAACwD,GACAxD,EAAAA,IAAC,IAAE,CAAA,UAAU,6BAA6B,SAE1C,6CAAA,CAAA,CAAA,EAEJ,EACCwD,GACExD,EAAAA,IAAAqF,GAAA,CAAK,GAAG,kBAAkB,UAAU,uBAAuB,SAE5D,kBAAA,CAAA,CAAA,EAEJ,EACAH,EAAAA,KAACpE,GAAW,CAAA,UAAU,0BACpB,SAAA,CAAAoE,OAAC9E,IAAO,KAAK,SAAS,UAAU,SAAS,SAAUuD,EACjD,SAAA,CAAC3D,EAAAA,IAAAsF,GAAA,CAAM,UAAU,cAAe,CAAA,EAC/B3B,EACGH,EACE,gBACA,gBACFA,EACA,UACA,SAAA,EACN,EACAxD,EAAA,IAACI,GAAA,CACC,QAAQ,OACR,KAAK,SACL,QAAS,IAAM,CACbqD,EAAW,CAACD,CAAO,EACTyB,EAAA,CACZ,EACA,UAAU,UACV,SAAUtB,EAET,WACG,2BACA,kCAAA,CAAA,CACN,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECpTM4B,GAAmB,IAAM,OAEvB,MAAA1B,IAAQ2B,EADGC,GAA+B,EACzB,QAAT,YAAAD,EAAgB,QAAS,GAEjC,CAACzB,EAAUC,CAAW,EAAIN,EAAAA,SAAS,EAAE,EACrC,CAACgC,EAAiBC,CAAkB,EAAIjC,EAAAA,SAAS,EAAE,EACnD,CAACkC,EAAOC,CAAQ,EAAInC,EAAAA,SAAS,EAAE,EAC/B,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAC1C,CAACa,EAAQC,CAAS,EAAId,EAAAA,SAKzB,CAAA,CAAE,EAECoC,EAAUC,GAAW,EACrB,CAAE,MAAA/D,CAAM,EAAIS,GAAS,EAErBkC,EAAe,IAAM,CACzB,MAAMC,EAIF,CAAC,EACL,IAAIC,EAAU,GAGd,OAAKe,IACHhB,EAAU,MAAQ,0BACRC,EAAA,IAIPd,EAGMA,EAAS,OAAS,IAC3Ba,EAAU,SAAW,yCACXC,EAAA,KAJVD,EAAU,SAAW,uBACXC,EAAA,IAOPa,EAGM3B,IAAa2B,IACtBd,EAAU,gBAAkB,yBAClBC,EAAA,KAJVD,EAAU,gBAAkB,+BAClBC,EAAA,IAMZL,EAAU,CAAE,GAAGD,EAAQ,GAAGK,EAAW,EAC9BC,CACT,EAEMC,EAAe,MAAOC,GAAuB,CAI7C,GAHJA,EAAE,eAAe,EAGb,EAACJ,IAIL,CAAAf,EAAa,EAAI,EACjBY,EAAU,CAAA,CAAE,EAER,GAAA,CAEF,MAAMxB,EAAa,kBAAmB,CACpC,OAAQ,OACR,QAAS,CACP,SAAAe,EACA,MAAA6B,EACA,MAAA/B,CAAA,CACF,CACD,EAEK7B,EAAA,CACJ,MAAO,4BACP,YACE,0EAAA,CACH,EAGD8D,EAAQ,KAAK,GAAG,QACTxC,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAGxCA,EAAM,UAAY,gBACVkB,EAAA,CAAE,MAAO,2BAA4B,EAErCA,EAAA,CACR,QACElB,EAAM,SACN,4DAAA,CACH,EAGGtB,EAAA,CACJ,MAAO,wBACP,YAAasB,EAAM,SAAW,0CAC9B,QAAS,aAAA,CACV,CAAA,QACD,CACAM,EAAa,EAAK,CAAA,EAEtB,EAGE,OAAA5D,EAAA,IAACgG,EACC,CAAA,SAAAhG,EAAA,IAACiG,EACC,CAAA,SAAAjG,MAAC,MAAI,CAAA,UAAU,4DACb,SAAAkF,EAAA,KAACzE,GAAK,CAAA,UAAU,YACd,SAAA,CAAAyE,OAACxE,GACC,CAAA,SAAA,CAAAV,EAAAA,IAACW,IAAU,SAAmB,qBAAA,CAAA,EAC9BX,EAAAA,IAACY,IAAgB,SAEjB,gEAAA,CAAA,CAAA,EACF,EACAsE,EAAAA,KAAC,OAAK,CAAA,SAAUJ,EACd,SAAA,CAACI,EAAAA,KAAArE,GAAA,CAAY,UAAU,YACpB,SAAA,CAAA0D,EAAO,SACLW,EAAA,KAAAxF,GAAA,CAAM,QAAQ,cAAc,UAAU,OACrC,SAAA,CAACM,EAAAA,IAAAmF,GAAA,CAAY,UAAU,SAAU,CAAA,EACjCnF,EAAAA,IAACE,GAAkB,CAAA,SAAAqE,EAAO,OAAQ,CAAA,CAAA,EACpC,EAGFW,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAClF,EAAA,IAAAkB,EAAA,CAAM,QAAQ,QAAQ,SAAW,cAAA,EAClClB,EAAA,IAACe,EAAA,CACC,GAAG,QACH,KAAK,OACL,YAAY,kCACZ,MAAO6E,EACP,SAAWb,GAAMc,EAASd,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,UAAWR,EAAO,MAAQ,iBAAmB,EAAA,CAC/C,EACCA,EAAO,OACNvE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAM,CAAA,CAAA,EAE3D,EAEAkF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAClF,EAAA,IAAAkB,EAAA,CAAM,QAAQ,WAAW,SAAY,eAAA,EACtClB,EAAA,IAACe,EAAA,CACC,GAAG,WACH,KAAK,WACL,YAAY,0BACZ,MAAOgD,EACP,SAAWgB,GAAMf,EAAYe,EAAE,OAAO,KAAK,EAC3C,SAAQ,GACR,UAAWR,EAAO,SAAW,iBAAmB,EAAA,CAClD,EACCA,EAAO,UACNvE,EAAA,IAAC,KAAE,UAAU,4BACV,WAAO,SACV,EAEDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,6CAAA,CAAA,CAAA,EACF,EAEAkF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAClF,EAAA,IAAAkB,EAAA,CAAM,QAAQ,kBAAkB,SAAgB,mBAAA,EACjDlB,EAAA,IAACe,EAAA,CACC,GAAG,kBACH,KAAK,WACL,YAAY,4BACZ,MAAO2E,EACP,SAAWX,GAAMY,EAAmBZ,EAAE,OAAO,KAAK,EAClD,SAAQ,GACR,UAAWR,EAAO,gBAAkB,iBAAmB,EAAA,CACzD,EACCA,EAAO,iBACNvE,EAAA,IAAC,KAAE,UAAU,4BACV,WAAO,eACV,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EACCA,MAAAc,GAAA,CAAW,UAAU,0BACpB,eAACV,GAAO,CAAA,KAAK,SAAS,UAAU,SAAS,SAAUuD,EAChD,SAAYA,EAAA,gBAAkB,iBACjC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,EClMMuC,GAAY,IAAM,CACtB,KAAM,CAACrC,EAAOC,CAAQ,EAAIJ,EAAAA,SAAS,EAAE,EAC/B,CAACa,EAAQC,CAAS,EAAId,EAAA,SAC1B,CAAA,CACF,EACM,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAE1C,CAAE,MAAA1B,CAAM,EAAIS,GAAS,EACrBqD,EAAUC,GAAW,EAErBpB,EAAe,IAAM,CACzB,MAAMC,EAAgC,CAAC,EACvC,IAAIC,EAAU,GAEd,OAAKhB,EAGO,eAAe,KAAKA,CAAK,IACnCe,EAAU,MAAQ,mBACRC,EAAA,KAJVD,EAAU,MAAQ,oBACRC,EAAA,IAMZL,EAAUI,CAAS,EACZC,CACT,EAEMC,EAAe,MAAOC,GAAuB,CAG7C,GAFJA,EAAE,eAAe,EAEb,EAACJ,IAIL,CAAAf,EAAa,EAAI,EACjBY,EAAU,CAAA,CAAE,EAER,GAAA,CAEF,MAAMxB,EAAa,6BAA8B,CAC/C,OAAQ,OACR,QAAS,CACP,MAAAa,CAAA,CACF,CACD,EAEK7B,EAAA,CACJ,MAAO,mBACP,YACE,uEAAA,CACH,EAGD8D,EAAQ,KAAK,0BAA2B,CAAE,MAAAjC,CAAA,CAAO,QAC1CP,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EAGpD,IAAI6C,EAAe,kDAEf7C,EAAM,UACJA,EAAM,QAAQ,SAAS,eAAe,EACzB6C,EAAA,gDACN7C,EAAM,QAAQ,SAAS,2BAA2B,EAEzD6C,EAAA,2DAEFA,EAAe7C,EAAM,SAIfkB,EAAA,CACR,QAAS2B,CAAA,CACV,CAAA,QACD,CACAvC,EAAa,EAAK,CAAA,EAEtB,EAGE,OAAA5D,EAAA,IAACgG,EACC,CAAA,SAAAhG,EAAA,IAACiG,EACC,CAAA,SAAAjG,MAAC,MAAI,CAAA,UAAU,4DACb,SAAAkF,EAAA,KAACzE,GAAK,CAAA,UAAU,wBACd,SAAA,CAAAyE,OAACxE,GACC,CAAA,SAAA,CAACV,EAAA,IAAAW,GAAA,CAAU,UAAU,+CAA+C,SAEpE,iBAAA,EACAX,EAAAA,IAACY,IAAgB,SAEjB,yCAAA,CAAA,CAAA,EACF,EACAsE,EAAAA,KAAC,OAAK,CAAA,SAAUJ,EACd,SAAA,CAACI,EAAAA,KAAArE,GAAA,CAAY,UAAU,YACpB,SAAA,CAAA0D,EAAO,SACLW,EAAA,KAAAxF,GAAA,CAAM,QAAQ,cAAc,UAAU,OACrC,SAAA,CAACM,EAAAA,IAAAmF,GAAA,CAAY,UAAU,SAAU,CAAA,EACjCnF,EAAAA,IAACE,GAAkB,CAAA,SAAAqE,EAAO,OAAQ,CAAA,CAAA,EACpC,EAEFW,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACkB,EAAA,CACC,UAAU,+CACV,QAAQ,QACT,SAAA,OAAA,CAED,EACAlB,EAAA,IAACe,EAAA,CACC,GAAG,QACH,KAAK,QACL,YAAY,mBACZ,MAAO8C,EACP,SAAWkB,GAAMjB,EAASiB,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,UAAWR,EAAO,MAAQ,iBAAmB,EAAA,CAC/C,EACCA,EAAO,OACNvE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAM,CAAA,CAAA,CAE3D,CAAA,CAAA,EACF,EACCA,MAAAc,GAAA,CAAW,UAAU,0BACpB,eAACV,GAAO,CAAA,KAAK,SAAS,UAAU,SAAS,SAAUuD,EAChD,SAAYA,EAAA,aAAe,mBAC9B,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,EC3IMyC,EAAS,IAAM,CACnB,MAAMC,EAAWZ,GAAY,EAI3B,OAAAY,EAAS,WAAa,KACtBA,EAAS,WAAa,mBACtBA,EAAS,WAAa,0BAEf,KAINrG,EAAA,IAAAsG,GAAA,CAAU,UAAU,+BACnB,gBAACC,GACC,CAAA,SAAA,CAAAvG,EAAAA,IAACwG,GAAW,CAAA,KAAK,QACf,SAAAxG,EAAA,IAACyG,GACC,SAACzG,EAAAA,IAAAqF,GAAA,CAAK,GAAG,QACP,eAACqB,EAAQ,CAAA,KAAMC,GAAM,CAAA,CACvB,CACF,CAAA,EACF,EAgBC3G,EAAA,IAAA4G,GAAA,CAAQ,UAAU,8BAA8B,SAEjD,iDAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EC7CMC,GAAeC,gBAA4C,MAAS,EAE1D,SAAAC,GAAc,CAAE,SAAAC,GAA2C,CACzE,KAAM,CAACC,EAAOC,CAAQ,EAAIxD,WAAgB,IAErB,aAAa,QAAQ,OAAO,GAC1B,OACtB,EAEDyD,OAAAA,EAAAA,UAAU,IAAM,CAED,aAAA,QAAQ,QAASF,CAAK,EAG/BA,IAAU,QACH,SAAA,gBAAgB,UAAU,IAAI,MAAM,EACpC,SAAA,KAAK,UAAU,IAAI,MAAM,IAEzB,SAAA,gBAAgB,UAAU,OAAO,MAAM,EACvC,SAAA,KAAK,UAAU,OAAO,MAAM,EACvC,EACC,CAACA,CAAK,CAAC,EAGRjH,EAAA,IAAC6G,GAAa,SAAb,CAAsB,MAAO,CAAE,MAAAI,EAAO,SAAAC,GACpC,SAAAF,EACH,CAEJ,CAEO,SAASI,IAAW,CACnB,MAAAC,EAAUC,aAAWT,EAAY,EACvC,GAAIQ,IAAY,OACR,MAAA,IAAI,MAAM,8CAA8C,EAEzD,OAAAA,CACT,CC1BA,MAAME,EAAS,IAAM,CACnB,KAAM,CAACC,EAAcC,CAAe,EAAI/D,EAAAA,SAAS,IAAI,EAC/C2C,EAAWZ,GAAY,EACvBhB,EAAYC,GAAa,EACzB,CAAE,MAAAuC,EAAO,SAAAC,CAAS,EAAIE,GAAS,EAInC,GAAAf,EAAS,WAAa,KACtBA,EAAS,WAAa,mBACtBA,EAAS,WAAa,0BAEf,OAAA,KAGT,MAAMqB,EAAeC,GAAUF,EAAgBE,EAAM,WAAW,EAC1DC,EAAe,IAAMH,EAAgB,IAAI,EAEzCI,EAAuBC,GAAU,OACrCrD,EAAU,KAAKqD,CAAK,GACXtC,EAAA,SAAA,cAAc,UAAU,IAAxB,MAAAA,EAA2B,OACtC,EAEMuC,EAAiB,IAAM,CAClBb,EAAAD,IAAU,OAAS,QAAU,MAAM,CAC9C,EAEA,OAEI/B,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAAF,EAAA,KAAC8C,GAAQ,CAAA,KAAK,QAAQ,UAAU,eAC9B,SAAA,CAAAhI,EAAAA,IAACiI,IACC,SAACjI,EAAA,IAAAuG,GAAA,CACC,eAACC,GAAW,CAAA,KAAK,QACf,SAACxG,EAAA,IAAAkI,GAAA,CACC,eAACzB,EACC,CAAA,SAAAzG,EAAAA,IAAC0G,GAAQ,KAAMyB,EAAA,CAAO,EACxB,CACF,CAAA,CAAA,CACF,EACF,CACF,CAAA,EACAnI,EAAA,IAACiG,EACC,CAAA,SAAAf,EAAAA,KAACkD,GACC,CAAA,SAAA,CAACpI,EAAAA,IAAAqI,EAAA,CAAQ,OAAM,GAAC,QAAS,IAAMR,EAAoB,OAAO,EAAG,SAE7D,cAAA,CAAA,EACA7H,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAMR,EAAoB,eAAe,EACnD,SAAA,cAAA,CAED,EACA7H,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAMR,EAAoB,iBAAiB,EACrD,SAAA,gBAAA,CAED,EACA7H,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAMR,EAAoB,eAAe,EACnD,SAAA,YAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEA7H,EAAA,IAACiI,GACC,CAAA,SAAA/C,EAAAA,KAACqB,GACC,CAAA,SAAA,CAAAvG,MAACwG,GAAW,CAAA,KAAK,QACf,SAAAxG,MAACkI,GACC,CAAA,SAAAlI,EAAA,IAACyG,EACC,CAAA,SAAAzG,MAAC0G,EAAQ,CAAA,KAAM4B,GAAM,CAAA,CACvB,CACF,CAAA,EACF,EAEApD,EAAA,KAAC,MAAA,CACC,UAAU,iBACV,QAAS,IAAMT,EAAU,KAAK,OAAO,EAErC,SAAA,CAAAzE,EAAA,IAAC,MAAA,CACC,IAAI,kCACJ,IAAI,oBACJ,UAAU,4BAAA,CACZ,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,+IAA+I,SAE7J,cAAA,CAAA,CAAA,CAAA,CAOF,EAEAkF,EAAAA,KAACsB,GAAW,CAAA,KAAK,MACf,SAAA,CAACxG,EAAAA,IAAAyG,EAAA,CAAU,QAASiB,EAClB,SAAA1H,EAAA,IAAC0G,GAAQ,KAAM6B,GAAK,UAAU,wBAAA,CAAyB,CACzD,CAAA,EACAvI,EAAA,IAACwI,GAAA,CACC,MAAOhB,EACP,OAAQ,CAAC,CAACA,EACV,aAAcI,EAEd,SAAA5H,EAAA,IAACiG,EACC,CAAA,SAAAf,OAACkD,GACC,CAAA,SAAA,CAAApI,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAM,CACAT,EAAA,EACbnD,EAAU,KAAK,aAAa,CAC9B,EACD,SAAA,YAAA,CAED,EACAzE,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAM,CACAT,EAAA,EACbnD,EAAU,KAAK,eAAe,CAChC,EACD,SAAA,cAAA,CAED,EACAzE,EAAA,IAACqI,EAAA,CACC,OAAM,GACN,QAAS,IAAM,CACAT,EAAA,EACbnD,EAAU,KAAK,iBAAiB,CAClC,EACD,SAAA,YAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,CAAA,CACF,EACCzE,EAAA,IAAAyG,EAAA,CAAU,KAAK,QAAQ,QAASsB,EAC/B,SAAA/H,EAAA,IAAC0G,EAAA,CACC,KAAK,YACL,KAAMO,IAAU,OAASwB,GAAQC,EAAA,CAAA,CAErC,CAAA,CAAA,EACF,EAEC1I,MAAAwG,GAAA,CAAW,KAAK,MACf,eAACC,EAAU,CAAA,WAAW,gBACpB,SAAAzG,EAAA,IAAC0G,GAAQ,KAAMiC,GAAc,KAAK,QAAQ,EAC5C,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,EC1KMC,GAAU,CAAC,CAAE,GAAG9I,KAA0B,CAC9C,KAAM,CAAE,MAAAmH,EAAQ,QAAS,EAAIG,GAAS,EAGpC,OAAApH,EAAA,IAAC6I,GAAA,CACC,MAAA5B,EACA,UAAU,gBACV,aAAc,CACZ,WAAY,CACV,MACE,wIACF,YAAa,uCACb,aACE,mEACF,aACE,8DAAA,CAEN,EACC,GAAGnH,CAAA,CACN,CAEJ,ECnBMgJ,GAAgBC,GAEhBC,GAAgBrJ,EAGpB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAACiJ,GAAA,CACC,IAAAlJ,EACA,UAAWX,EACT,oIACAQ,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDkJ,GAAc,YAAcC,GAAyB,YAErD,MAAMC,GAAgBzJ,GACpB,4lBACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,uCACT,YACE,iFAAA,CAEN,EACA,gBAAiB,CACf,QAAS,SAAA,CACX,CAEJ,EAEM0J,GAAQxJ,EAAM,WAIlB,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAS,GAAGC,CAAM,EAAGC,IAEjCC,EAAA,IAACoJ,GAAA,CACC,IAAArJ,EACA,UAAWX,EAAG8J,GAAc,CAAE,QAAArJ,CAAS,CAAA,EAAGD,CAAS,EAClD,GAAGE,CAAA,CACN,CAEH,EACDqJ,GAAM,YAAcC,GAAqB,YAEzC,MAAMC,GAAc1J,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAACsJ,GAAA,CACC,IAAAvJ,EACA,UAAWX,EACT,qgBACAQ,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDuJ,GAAY,YAAcC,GAAuB,YAEjD,MAAMC,GAAa5J,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAACwJ,GAAA,CACC,IAAAzJ,EACA,UAAWX,EACT,wVACAQ,CACF,EACA,cAAY,GACX,GAAGE,EAEJ,SAAAE,EAAAA,IAACyJ,GAAE,CAAA,UAAU,SAAU,CAAA,CAAA,CACzB,CACD,EACDF,GAAW,YAAcC,GAAsB,YAE/C,MAAME,GAAa/J,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC2J,GAAA,CACC,IAAA5J,EACA,UAAWX,EAAG,wBAAyBQ,CAAS,EAC/C,GAAGE,CAAA,CACN,CACD,EACD4J,GAAW,YAAcC,GAAsB,YAE/C,MAAMC,GAAmBjK,EAGvB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1BC,EAAA,IAAC6J,GAAA,CACC,IAAA9J,EACA,UAAWX,EAAG,qBAAsBQ,CAAS,EAC5C,GAAGE,CAAA,CACN,CACD,EACD8J,GAAiB,YAAcC,GAA4B,YCpGpD,SAASjB,IAAU,CAClB,KAAA,CAAE,OAAAkB,CAAO,EAAIrH,GAAS,EAE5B,cACGqG,GACE,CAAA,SAAA,CAAOgB,EAAA,IAAI,SAAU,CAAE,GAAAzH,EAAI,MAAA0H,EAAO,YAAAC,EAAa,OAAAjI,EAAQ,GAAGjC,GAAS,CAEhE,OAAAoF,EAAA,KAACiE,GAAgB,CAAA,GAAGrJ,EAClB,SAAA,CAACoF,EAAAA,KAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAS6E,GAAA/J,EAAAA,IAAC0J,IAAY,SAAMK,CAAA,CAAA,EAC5BC,GACEhK,EAAAA,IAAA4J,GAAA,CAAkB,SAAYI,CAAA,CAAA,CAAA,EAEnC,EACCjI,QACAwH,GAAW,CAAA,CAAA,CAAA,CAAA,EARFlH,CASZ,CAAA,CAEH,QACA2G,GAAc,CAAA,CAAA,CAAA,EACjB,CAEJ,CC3BA,MAAMiB,GAAkBC,GAMlBC,GAAiBxK,EAAAA,WAGrB,CAAC,CAAE,UAAAC,EAAW,WAAAwK,EAAa,EAAG,GAAGtK,GAASC,IAC1CC,EAAA,IAACqK,GAAA,CACC,IAAAtK,EACA,WAAAqK,EACA,UAAWhL,EACT,qYACAQ,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDqK,GAAe,YAAcE,GAAyB,YCb/C,SAASC,GAAgBjI,EAAY,CAC1C,OAAOkI,EAAuB,CAC5B,SAAU,CAAC,QAASlI,CAAE,EACtB,QAAS,IACPW,EAAoB,gBAAiB,CACnC,OAAQ,MACR,QAAS,CAAE,GAAAX,CAAG,CAAA,CACf,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAASmI,GAAanI,EAAY,CACvC,OAAOkI,EAAgC,CACrC,SAAU,CAAC,YAAalI,CAAE,EAC1B,QAAS,IACPW,EAA6B,2BAA4B,CACvD,OAAQ,MACR,QAAS,CAAE,GAAAX,CAAG,CAAA,CACf,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAASoI,GAAgBpI,EAAY,CAC1C,OAAOkI,EAA0C,CAC/C,SAAU,CAAC,eAAgBlI,CAAE,EAC7B,QAAS,IACPW,EAAuC,0BAA2B,CAChE,OAAQ,MACR,QAAS,CAAE,SAAUX,CAAG,CAAA,CACzB,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAASqI,GAAoBrI,EAAY,CAC9C,OAAOkI,EAAqC,CAC1C,SAAU,CAAC,mBAAoBlI,CAAE,EACjC,QAAS,IACPW,EAAkC,2BAA4B,CAC5D,OAAQ,MACR,QAAS,CAAE,GAAAX,CAAG,CAAA,CACf,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAASsI,IAAc,CAC5B,OAAOJ,EAAsC,CAC3C,SAAU,CAAC,UAAU,EACrB,QAAS,IAAMvH,EAAmC,oBAAoB,EACtE,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAAS4H,IAAiB,CAC/B,OAAOL,EAAyC,CAC9C,SAAU,CAAC,aAAa,EACxB,QAAS,IACPvH,EAAsC,yBAAyB,EACjE,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAKO,SAAS6H,IAAiB,CAC/B,MAAMC,EAAcC,GAAe,EAEnC,OAAOC,GAA2C,CAChD,WAAY,CAAC,CAAE,GAAA3I,EAAI,MAAA4I,EAAO,MAAAC,KACxBlI,EAAoB,gBAAgBiI,CAAK,GAAI,CAC3C,OAAQ,MACR,QAAS,CAAE,GAAA5I,EAAI,CAAC4I,CAAK,EAAGC,CAAM,CAAA,CAC/B,EACH,UAAW,CAACC,EAAGC,IAAc,CACfN,EAAA,kBAAkB,CAAE,SAAU,CAAC,QAASM,EAAU,EAAE,EAAG,CAAA,CACrE,CACD,CACH,CAGO,SAASC,GAAiBC,EAAkB,CACjD,MAAMR,EAAcC,GAAe,EAEnC,OAAOC,GAAiC,CACtC,WAAaO,GACXvI,EAAa,mBAAoB,CAC/B,OAAQ,SACR,QAAS,CAAE,WAAYuI,EAAW,SAAAD,CAAS,CAAA,CAC5C,EACH,UAAW,IAAM,CACfR,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAgBQ,CAAQ,EAAG,CAAA,CACxE,CACD,CACH,CAKO,SAASE,IAAmB,CACjC,MAAMV,EAAcC,GAAe,EAEnC,OAAOC,GAA8C,CACnD,WAAY,CAAC,CAAE,QAAAS,EAAS,MAAAC,CAAM,IAC5B1I,EAAqB,kBAAmB,CACtC,OAAQ,OACR,QAAS,CACP,SAAUyI,EACV,OAAQC,EAAM,SAAS,CAAA,CACzB,CACD,EACH,UAAW,CAACP,EAAGC,IAAc,CAC3BN,EAAY,kBAAkB,CAC5B,SAAU,CAAC,YAAaM,EAAU,OAAO,CAAA,CAC1C,CAAA,CACH,CACD,CACH,CCrHA,MAAMO,GAAuB7L,GAAU,CACrC,KAAM,CAAC8L,EAAeC,CAAgB,EAAInI,EAAAA,SAAwB,IAAI,EAChE,CAACoI,CAAY,EAAIC,GAAY,EAG7B,CACJ,KAAMC,EAAW,CAAC,EAClB,UAAWC,EACX,MAAOC,GACLvB,GAAY,EAEVwB,EAAiBX,GAAiB,EAChC,QAAA,IAAI,WAAYQ,CAAQ,EACxB,QAAA,IAAI,iBAAkBG,EAAe,IAAI,EAGjD,MAAMC,EAAgB,MAAM,QAAQJ,CAAQ,EACxCA,EAAS,OAAQK,GACd,MAAM,QAAQvM,EAAM,cAAc,EAE/B,CAACA,EAAM,eAAe,SAASuM,EAAI,KAAK,EADxC,EACwC,EAE9C,CAAC,EAGLlF,EAAAA,UAAU,IAAM,CACTrH,EAAM,QACT+L,EAAiB,IAAI,CACvB,EACC,CAAC/L,EAAM,MAAM,CAAC,EAEjB,MAAMwM,EAAe,SAAY,CAC/B,GAAI,CAACV,GAAiB,CAAC9L,EAAM,QAAS,CACvBgM,EAAA,CACX,QAAS,8BACT,SAAU,IACV,MAAO,SAAA,CACR,EACD,MAAA,CAGE,GAAA,CACF,MAAMK,EAAe,YAAY,CAC/B,QAASrM,EAAM,QACf,MAAO8L,CAAA,CACR,EAEYE,EAAA,CACX,QAAS,0BACT,SAAU,IACV,MAAO,SAAA,CACR,EAEDhM,EAAM,aAAa,QACZyM,EAAK,CACZ,MAAMpG,EAAe,sBACnBoG,aAAe,MAAQA,EAAI,QAAU,eACvC,GAEaT,EAAA,CACX,QAAS3F,EACT,SAAU,IACV,MAAO,QAAA,CACR,CAAA,CAEL,EAEMxC,EAAYsI,GAAqBE,EAAe,UAChD7I,EAAQ4I,GAAiBC,EAAe,MACtC,eAAA,IAAI,gBAAiBC,CAAa,SAGvCI,GAAS,CAAA,OAAQ1M,EAAM,OAAQ,aAAcA,EAAM,aAClD,SAAA,CAACE,EAAA,IAAAiI,GAAA,CACC,gBAAC1B,GACC,CAAA,SAAA,CAAAvG,EAAAA,IAACyM,IAAS,SAAgB,kBAAA,CAAA,EACzBzM,EAAA,IAAAwG,GAAA,CAAW,KAAK,MACf,SAACxG,EAAAA,IAAAyG,EAAA,CAAU,QAAS3G,EAAM,aAAc,MAAM,SAAS,SAAA,QAAA,CAEvD,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,SACCmG,EACE,CAAA,SAAA,CAAAtC,GAAa,EAACyI,GAAA,MAAAA,EAAe,QAC3BlH,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,EAC3B1M,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAoB,sBAAA,CAAA,CAAA,CAC7C,CAAA,EACEsD,EACFtD,EAAAA,IAAC4G,GAAQ,CAAA,MAAM,SACb,SAAC5G,EAAA,IAAA,IAAA,CAAG,SAAiBsD,aAAA,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAAA,CAAE,CAC7D,CAAA,GACE8I,GAAA,YAAAA,EAAe,UAAW,EAC5BpM,EAAA,IAAC,IAAE,CAAA,UAAU,iCAAiC,SAAA,gHAG9C,CAAA,EAEAA,EAAA,IAAC2M,GAAA,CACC,MAAOf,EACP,YAAc7G,GAAM,CAClB8G,EAAiB,OAAO9G,EAAE,OAAO,KAAK,CAAC,CACzC,EAEA,eAACqD,GACE,CAAA,SAAAgE,GAAA,YAAAA,EAAe,IAAKC,UAClBhE,EACC,CAAA,SAAA,CAAArI,MAAC4M,IAAS,KAAK,QAAwB,MAAOP,EAAI,KAAA,EAAtBA,EAAI,KAAyB,SACxDQ,GACC,CAAA,SAAA,CAAC7M,EAAAA,IAAA,KAAA,CAAI,WAAI,OAAQ,CAAA,EAChBA,EAAA,IAAA,IAAA,CAAE,UAAU,wBACV,WAAI,cACP,CAAA,CAAA,CACF,CAAA,CAAA,GAPYqM,EAAI,KAQlB,EAEJ,CAAA,CAAA,CACF,EAGD/I,IAAS8I,GAAA,YAAAA,EAAe,QAAS,GAC/BpM,EAAA,IAAA4G,GAAA,CAAQ,MAAM,SAAS,UAAU,aAChC,SAAC5G,EAAA,IAAA,IAAA,CAAG,sBAAiB,MAAQsD,EAAM,QAAU,OAAOA,CAAK,EAAE,CAC7D,CAAA,CAAA,EAEJ,EACC,CAACK,IAAayI,GAAA,YAAAA,EAAe,QAAS,GACpCpM,EAAAA,IAAA,MAAA,CAAI,UAAU,cACb,SAAAA,EAAA,IAACyG,EAAA,CACC,OAAO,QACP,QAAS6F,EACT,SAAU,CAACV,GAAiBO,EAAe,UAC3C,UAAU,oBAET,WAAe,UACdnM,EAAA,IAAC0M,EAAW,CAAA,KAAK,OAAO,EAExB,kBAAA,CAAA,CAGN,CAAA,CAAA,EAEJ,CAEJ,EClKMI,GAAuBhN,GAEzBE,EAAA,IAAC,OAAI,UAAU,yCACZ,WAAM,WACLkF,EAAA,KAAC,MAAI,CAAA,UAAU,QACb,SAAA,CAAAA,EAAA,KAACuB,EAAA,CACC,UAAU,sCACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,QAAS3G,EAAM,cACf,MAAM,UACN,SAAU,CAACA,EAAM,QAEjB,SAAA,CAAAE,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAMqG,GAAY,EAAE,kBAAA,CAAA,CAE5C,EAEA7H,EAAA,KAACuB,EAAA,CACC,UAAU,sCACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,WAAY,uBAAuB3G,EAAM,OAAO,GAChD,MAAM,UACN,SAAU,CAACA,EAAM,QAEjB,SAAA,CAAAE,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAMsG,GAAe,EAAE,gBAAA,CAAA,CAAA,CAE/C,CAAA,CACF,CAEJ,CAAA,EC7BSC,GAAiBnN,UAEzB,MACC,CAAA,SAAA,CAAAE,MAACqI,EACC,CAAA,SAAArI,EAAA,IAACkN,GAAA,CACC,KAAMpN,EAAM,KACZ,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,MAAOA,EAAM,MACb,YAAaA,EAAM,QAAA,CAAA,EAEvB,EACCA,EAAM,OACLE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAM,KAAM,CAAA,CAAA,EAE1D,ECbEmN,GAAqBrN,GAEvBE,EAAA,IAAAoF,WAAA,CACG,SAAMtF,EAAA,UAEHoF,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAApF,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,aACN,KAAK,aACL,MAAOnN,EAAM,YAAY,WACzB,SAAUA,EAAM,aAChB,MAAOA,EAAM,WAAW,SAAA,CAC1B,EACAE,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,oBACN,KAAK,oBACL,MAAOnN,EAAM,YAAY,kBACzB,SAAUA,EAAM,aAChB,MAAOA,EAAM,WAAW,gBAAA,CAC1B,EACCA,EAAM,WAAW,SAChBE,EAAAA,IAAC,KAAE,UAAU,4BACV,SAAMF,EAAA,WAAW,OACpB,CAAA,EAEFoF,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAAClF,EAAAA,IAAAyG,EAAA,CAAU,QAAS3G,EAAM,WAAY,MAAM,UAAU,KAAK,QAAQ,SAEnE,MAAA,CAAA,EACAE,EAAAA,IAACyG,GAAU,QAAS3G,EAAM,aAAc,MAAM,SAAS,KAAK,QAAQ,SAEpE,QAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACEA,EAAM,QACRE,EAAAA,IAAC,MAAI,CAAA,SAAA,YAAA,CAAU,EACbF,EAAM,UACRE,EAAA,IAAAoF,WAAA,CACE,SAACF,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAClF,EAAAA,IAAA,KAAA,CAAG,UAAU,qBACX,SAAAF,EAAM,QAAU,aAAeA,EAAM,UAAU,SAClD,CAAA,EACCA,EAAM,WAAa,CAACA,EAAM,WACzBE,EAAA,IAAC0G,EAAA,CACC,KAAMsG,GACN,KAAK,QACL,MAAM,UACN,UAAU,qDACV,QAASlN,EAAM,UAAA,CAAA,CAChB,EAEL,EACAE,EAAAA,IAAC,KAAE,UAAU,mCACV,WAAM,QAAU,aAAeF,EAAM,UAAU,gBAClD,CAAA,EACAoF,EAAA,KAACuB,EAAA,CACC,UAAU,sCACV,MAAO,CACL,kBAAmB,SACnB,SAAU,aACZ,EACA,WAAW,QACX,MAAM,UAEN,SAAA,CAAAzG,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAM0G,GAAkB,EAAE,MAAA,CAAA,CAAA,CAElD,EACF,CACF,CAAA,EAECpN,MAAA,KAAA,CAAG,oCAAyB,CAAA,EAEjC,EC3EEqN,GAAmBvN,GAErBoF,EAAA,KAACoI,GAAA,CACC,MAAOxN,EAAM,YACb,YAAciF,GAAMjF,EAAM,YAAYiF,EAAE,OAAO,KAAe,EAC9D,UAAU,cAEV,SAAA,CAACG,EAAAA,KAAAqI,GAAA,CAAiB,MAAM,aACtB,SAAA,CAAAvN,EAAA,IAAC0G,EAAQ,CAAA,KAAM8G,GAAa,UAAU,OAAO,EAC7CxN,EAAAA,IAAC6M,IAAS,SAAc,gBAAA,CAAA,CAAA,EAC1B,EACA3H,EAAAA,KAACqI,GAAiB,CAAA,MAAM,cACtB,SAAA,CAAAvN,EAAA,IAAC0G,EAAQ,CAAA,KAAM+G,GAAe,UAAU,OAAO,EAC/CzN,EAAAA,IAAC6M,IAAS,SAAW,aAAA,CAAA,CAAA,EACvB,EACA3H,EAAAA,KAACqI,GAAiB,CAAA,MAAM,WACtB,SAAA,CAAAvN,EAAA,IAAC0G,EAAQ,CAAA,KAAMgH,GAAe,UAAU,OAAO,EAC/C1N,EAAAA,IAAC6M,IAAS,SAAQ,UAAA,CAAA,CAAA,CACpB,CAAA,CAAA,CAAA,CACF,ECTEc,GAAqB7N,GAAU,SACnC,MAAMgG,EAAUC,GAAW,EACrB,CAAC6H,EAAYC,CAAa,EAAInK,EAAAA,SAAsB,CAAA,CAAE,EAE5D,aACG,MAAI,CAAA,UAAU,OACZ,SAAA5D,EAAM,QACJE,EAAA,IAAA,MAAA,CAAI,SAAU,aAAA,GACbwF,EAAA1F,EAAM,gBAAN,MAAA0F,EAAqB,aACtBsI,GACC,CAAA,SAAA9N,EAAA,IAAC+N,IACE,UAAMC,EAAAlO,EAAA,cACJ,KAAK,CAACmO,EAAGC,IAAMD,EAAE,GAAKC,EAAE,EAAE,IADtB,YAAAF,EAEH,IAAK3B,SACJ8B,GAAO,CAAA,KAAK,KAAK,OAAO,IAAI,OAAO,IAClC,SAAAjJ,EAAA,KAACkJ,EAAA,CACC,UAAU,8GACV,QAAS,IACPtI,EAAQ,KAAK,iBAAiBuG,EAAI,EAAE,GAAI,CACtC,YAAavM,EAAM,OAAA,CACpB,EAGH,SAAA,CAAAE,EAAAA,IAACqO,GACC,SAACrO,EAAAA,IAAAsO,EAAA,CAAa,UAAU,wBACrB,SAAAjC,EAAI,QACP,CACF,CAAA,EACArM,EAAAA,IAACuO,GACC,SAACvO,EAAA,IAAA,IAAA,CAAE,UAAU,6BACV,SAAAqM,EAAI,cACP,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,EAnB2CA,EAAI,EAoBjD,EAEN,CAAA,CACF,CAAA,EAEArM,EAAA,IAAC,IAAE,CAAA,SAAA,+EAAA,CAGH,CAEJ,CAAA,CAEJ,ECjDMwO,GAAe1O,GAAU,OAE3B,OAAAoF,EAAA,KAACkJ,EAAQ,CAAA,UAAU,8BACjB,SAAA,CAAApO,EAAAA,IAACqO,GACC,SAACrO,EAAA,IAAAsO,EAAA,CAAa,UAAU,wBAAwB,6BAEhD,CACF,CAAA,EACAtO,EAAAA,IAACuO,GAEC,SAACvO,EAAAA,IAAAoI,GAAA,CAAQ,UAAU,qCAAqC,MAAM,OAC3D,SAAMtI,EAAA,cAAgB,KACpBE,EAAAA,IAAA,KAAA,CAAG,UAAU,4BAA4B,SAAA,sBAAmB,GAE7DwF,EAAA1F,EAAM,cAAN,YAAA0F,EAAmB,IAAI,CAACiJ,EAAO5L,IAE7B7C,EAAA,IAAC0O,GAAO,IAAP,CAEC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAO7L,EAAQ,EAAI,EAEhD,SAAAqC,EAAA,KAACmD,EAAQ,CAAA,UAAU,iBACjB,SAAA,CAACnD,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAArC,IAAU,GACT7C,EAAAA,IAAC,OAAK,CAAA,UAAU,0BAA0B,SAAE,KAAA,EAE7C6C,IAAU,GACT7C,EAAAA,IAAC,OAAK,CAAA,UAAU,wBAAwB,SAAE,KAAA,EAE3C6C,IAAU,GACT7C,EAAAA,IAAC,OAAK,CAAA,UAAU,0BAA0B,SAAE,KAAA,EAE7CA,EAAA,IAAA,OAAA,CAAK,UAAU,sBACb,WAAM,QACT,CAAA,CAAA,EACF,EACCkF,EAAA,KAAA,OAAA,CAAK,KAAK,MAAM,UAAU,6BACxB,SAAA,CAAMuJ,EAAA,WAAW,SAAA,CACpB,CAAA,CAAA,CACF,CAAA,CAAA,EAvBKA,EAAM,MAAA,EA2BnB,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECvDME,GAAkB7O,qBAGjB,SAAMA,EAAA,cACJoF,EAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,EAC3B1M,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAqB,uBAAA,CAAA,CAAA,EAC9C,EAECA,EAAA,IAAAwO,GAAA,CAAY,YAAa1O,EAAM,eAAiB,CAAA,EAErD,ECFE8O,GAAe9O,GAAU,OAE3B,OAAAoF,EAAA,KAACkJ,EAAQ,CAAA,UAAU,OACjB,SAAA,CAAApO,EAAAA,IAACqO,GACC,SAACrO,EAAA,IAAAsO,EAAA,CAAa,UAAU,wBAAwB,0BAEhD,CACF,CAAA,QACCC,EACC,CAAA,SAAAvO,EAAA,IAACoI,GAAQ,CAAA,UAAU,YAAY,MAAM,OAClC,UAAM5C,EAAA1F,EAAA,WAAA,YAAA0F,EAAU,IAAKqJ,GACnB3J,OAAAmD,EAAA,CAA6B,UAAU,iBACtC,SAAA,CAAArI,EAAA,IAAC,OAAK,CAAA,UAAU,cAAe,SAAA6O,EAAQ,SAAS,QAC/C,OAAK,CAAA,KAAK,MAAM,UAAU,wBACxB,WAAQ,MACX,EACC/O,EAAM,WACLE,EAAA,IAAC0G,EAAA,CACC,KAAK,MACL,KAAMoI,GACN,MAAM,SACN,UAAU,iBACV,QAAS,IAAMhP,EAAM,gBAAgB+O,EAAQ,MAAM,CAAA,CAAA,CACrD,CAAA,EAZUA,EAAQ,MActB,EAEJ,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECvCME,GAAcjP,GAAU,CAC5B,KAAM,CAACkP,EAAiBC,CAAkB,EAAIvL,WAAS,CACrD,OAAQ,GACR,UAAW,IAAA,CACZ,EAEKwL,EAAyB3D,GAAsB,CACnD0D,EAAmB,CAAE,OAAQ,GAAM,UAAA1D,CAAA,CAAsB,CAC3D,EAEA,OAEIrG,EAAA,KAAAE,WAAA,CAAA,SAAA,CAACpF,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAA,IAAC4O,GAAA,CACC,UAAW9O,EAAM,UACjB,SAAUA,EAAM,SAChB,gBAAiBoP,CAAA,CAAA,EAErB,EAEAlP,EAAA,IAACmP,GAAA,CACC,OAAQH,EAAgB,OACxB,aACE,IAAMC,EAAmB,CAAE,OAAQ,GAAO,UAAW,KAAM,EAE7D,OAAO,mBACP,QAAQ,6FACR,QAAS,CACP,CACE,KAAM,SACN,KAAM,SACN,QAAS,IAAM,CACb,QAAQ,IAAI,gBAAgB,CAAA,CAEhC,EACA,CACE,KAAM,SACN,QAAS,IAAM,CACTD,EAAgB,YAAc,OAC1BlP,EAAA,mBAAmBkP,EAAgB,SAAS,EAC1C,QAAA,IACN,sCAAsCA,EAAgB,SAAS,EACjE,EACF,CACF,CACF,CACF,CAAA,CACF,EACF,CAEJ,EChCMI,GAAc,IAAM,CAClB,KAAA,CAAE,GAAA/M,CAAG,EAAIgN,GAA0B,EACnC,CAACC,EAAkBC,CAAmB,EAAI7L,EAAAA,SAAS,CAAC,EACpD,CAAC8L,EAAaC,CAAc,EAAI/L,WAAsB,EACtD,CAACgM,EAAKC,CAAM,EAAIjM,EAAAA,SAAS,YAAY,EACrC,CAACkM,EAAWC,CAAY,EAAInM,EAAAA,SAAS,EAAK,EAC1C,CAACoM,EAAaC,CAAc,EAAIrM,WAAS,CAC7C,WAAY,GACZ,kBAAmB,EAAA,CACpB,EACK,CAACsM,EAAkBC,CAAmB,EAAIvM,EAAAA,SAAS,EAAK,EACxD,CAACwM,EAAYC,CAAa,EAAIzM,EAAAA,SAIjC,CAAA,CAAE,EAGC,CACJ,KAAM0M,EACN,UAAWC,EACX,MAAOC,CAAA,EACLhG,GAAgBjI,CAAG,EACjB,CACJ,KAAMkO,EAAgB,CAAC,EACvB,UAAWC,EACX,MAAOC,CAAA,EACLjG,GAAanI,CAAG,EACd,CACJ,KAAMqO,EAAa,CAAC,EACpB,UAAWC,EACX,MAAOC,EAAA,EACLnG,GAAgBpI,CAAG,EACjB,CACJ,KAAMwO,GAAkB,CAAC,EACzB,UAAWC,EACX,MAAOC,EAAA,EACLrG,GAAoBrI,CAAG,EAErB2O,EAAsBnG,GAAe,EACrCoG,EAAwB5F,GAAiBhJ,CAAG,EAE5C6O,GAAYd,GAAA,YAAAA,EAAW,QAAS,UAEhCe,EAAa,IAAM,CACRpB,EAAA,CACb,YAAYK,GAAA,YAAAA,EAAW,YAAa,GACpC,mBAAmBA,GAAA,YAAAA,EAAW,mBAAoB,EAAA,CACnD,EACDP,EAAa,EAAI,CACnB,EAEMlL,GAAe,IAAM,CACzB,MAAMC,EAA+D,CAAC,EACtE,IAAIC,GAAU,GACF,OAAAiL,EAAA,WAAaA,EAAY,WAAW,KAAK,EACzCA,EAAA,kBAAoBA,EAAY,kBAAkB,KAAK,EAC9DA,EAAY,aACflL,EAAU,UAAY,yBACZC,GAAA,IAEPiL,EAAY,oBACflL,EAAU,iBAAmB,gCACnBC,GAAA,IAEZsL,EAAcvL,CAAS,EAChBC,EACT,EAEMuM,GAAa,SAAY,CACzB,GAACzM,KACD,GAAA,CACF,MAAM,QAAQ,IAAI,CAChBqM,EAAoB,YAAY,CAC9B,GAAA3O,EACA,MAAO,aACP,MAAOyN,EAAY,UAAA,CACpB,EACDkB,EAAoB,YAAY,CAC9B,GAAA3O,EACA,MAAO,oBACP,MAAOyN,EAAY,iBACpB,CAAA,CAAA,CACF,EACDD,EAAa,EAAK,OACJ,CACd,MAAM,iDAAiD,CAAA,CAE3D,EAEMwB,GAAgBtM,GAAmB,CACjC,KAAA,CAAE,KAAAuM,IAASvM,EAAE,OACbmG,GAAQnG,EAAE,OAAO,MACRgL,EAACwB,KAAU,CAAE,GAAGA,GAAM,CAACD,EAAI,EAAGpG,EAAA,EAAQ,CACvD,EAEMsG,GAAe,IAAM,CACzB3B,EAAa,EAAK,CACpB,EAEM4B,GAAsB,MAAOlG,GAA6B,CAC9D,GAAIA,IAAc,KACd,GAAA,CACI,MAAA0F,EAAsB,YAAY1F,CAAS,OACnC,CACd,MAAM,wBAAwB,CAAA,CAElC,EAEApE,EAAAA,UAAU,IAAM,CACTqI,GACOA,EAAA,GAAG,SAAU,IAAM,CACTD,EAAAC,EAAY,oBAAoB,CAAA,CACrD,CAAA,EACA,CAACA,CAAW,CAAC,EAGV,MAAAkC,GACJrB,GAAkBG,GAAiBG,GAAkBG,EACjDa,GAAarB,GAAcG,GAAaG,IAAcG,GAE5D,cACG/K,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,EACRrC,EAAAA,KAACe,EAAW,CAAA,UAAU,cACpB,SAAA,CAACf,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACZ,SAAA,CAAAyM,IACE3R,EAAAA,IAAA,MAAA,CAAI,UAAU,eAAgB,YAAW,QAAQ,EAEpDkF,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAlF,EAAA,IAACmN,GAAA,CACC,UAAAiD,EACA,UAAAc,EACA,QAASQ,GACT,WAAAP,EACA,UAAAvB,EACA,YAAAE,EACA,WAAAI,EACA,aAAAmB,GACA,WAAAD,GACA,aAAAI,EAAA,CACF,EACAxR,EAAA,IAAC8M,GAAA,CACC,UAAAoE,EACA,QAAS7O,EACT,cAAe,IAAM4N,EAAoB,EAAI,CAAA,CAAA,CAC/C,EACF,EACCjQ,EAAA,IAAAqN,GAAA,CAAgB,YAAaqC,EAAK,YAAaC,EAAQ,EACvDD,IAAQ,eACP1P,EAAA,IAAC2O,GAAA,CACC,gBAAAkC,GACA,cAAeC,CAAA,CACjB,EAEDpB,IAAQ,cACP1P,EAAA,IAAC4R,GAAA,CACC,cAAArB,EACA,iBAAAjB,EACA,OAAQG,EACR,QAASiC,GACT,QAASrP,CAAA,CACX,EAEDqN,IAAQ,YACP1P,EAAA,IAAC+O,GAAA,CACC,UAAAmC,EACA,SAAUR,EACV,mBAAoBe,EAAA,CAAA,CACtB,EAEJ,EACAzR,EAAA,IAAC2L,GAAA,CACC,OAAQqE,EACR,aAAc,IAAMC,EAAoB,EAAK,EAC7C,QAAS5N,EACT,gBAAgBkO,GAAA,YAAAA,EAAe,IAAKlE,GAAQA,EAAI,MAAO,CAAA,CAAC,CAAA,CAC1D,EACF,QAECjG,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,EC9LMyL,GAAc,IAAM,CACxB,KAAM,CAACC,EAASC,CAAU,EAAIrO,EAAAA,SAAS,EAAK,EACtC,CAACJ,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAChD,CAACuO,EAAUC,CAAW,EAAIxO,WAAS,CACvC,UAAW,GACX,YAAa,EAAA,CACd,EACK,CAACyO,EAAaC,CAAc,EAAI1O,EAAAA,SAAS,EAAK,EAe9C2O,EAAa,SAAY,CAC7B,GAAI,CAAAP,EAEJ,CAAAC,EAAW,EAAI,EACfC,EAAS,IAAI,EAET,GAAA,CACI,MAAAhN,EAAO,MAAMhC,EAAuB,eAAgB,CACxD,OAAQ,OACR,QAAS,CACP,WAAYiP,EAAS,UACrB,kBAAmBA,EAAS,WAAA,CAC9B,CACD,EAEO,QAAA,IAAI,8BAA+BjN,CAAI,EAEnCkN,EAAA,CACV,UAAW,GACX,YAAa,EAAA,CACd,EAEDE,EAAe,EAAI,QACZ9O,EAAO,CACL0O,EAAA,2BAA2B1O,EAAM,OAAO,EAAE,CAAA,QACnD,CACAyO,EAAW,EAAK,CAAA,EAEpB,EAEA,cACG/L,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,EAAA,KAAC,MAAA,CACC,GAAG,eACH,UAAU,wCAET,SAAA,CAAW4M,GAAA9R,EAAAA,IAAC,OAAI,SAAU,YAAA,CAAA,EAC1BsD,GAAStD,EAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAMsD,EAAA,EACnDtD,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,mBAAA,SACC,OACC,CAAA,SAAA,CAAAA,MAACoO,EAAQ,CAAA,UAAU,mCACjB,SAAAlJ,EAAA,KAACqJ,EACC,CAAA,SAAA,CAAAvO,EAAA,IAACsS,GAAA,CACC,YAAY,mBACZ,MAAOL,EAAS,UAChB,YAAclN,GACZmN,EAAaX,IAAU,CACrB,GAAGA,EACH,UAAWxM,EAAE,OAAO,OAAS,EAAA,EAC7B,EAEJ,KAAM,EACN,SAAQ,GACR,UAAU,gCACV,MAAO,CAAE,OAAQ,MAAO,CAAA,CAC1B,EACA/E,EAAA,IAACsS,GAAA,CACC,YAAY,0BACZ,MAAOL,EAAS,YAChB,YAAclN,GACZmN,EAAaX,IAAU,CACrB,GAAGA,EACH,YAAaxM,EAAE,OAAO,OAAS,EAAA,EAC/B,EAEJ,KAAM,EACN,SAAQ,GACR,UAAU,wBACV,MAAO,CAAE,OAAQ,MAAO,CAAA,CAAA,CAC1B,CAAA,CACF,CA6BF,CAAA,EACA/E,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACyG,EAAA,CACC,MAAM,UACN,UAAU,wCACV,QAAS4L,EACT,SAAUP,EAET,WAAU,cAAgB,YAAA,CAAA,CAE/B,CAAA,CAAA,EAoBF,EACCK,GACCnS,EAAA,IAACuS,GAAA,CACC,OAAQJ,EACR,MAAM,UACN,aAAc,IAAMC,EAAe,EAAK,EACxC,QAAQ,8BACR,SAAU,GAAA,CAAA,CACZ,CAAA,CAAA,EAGN,QACChM,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,ECxKMoM,GAAY,IAAM,CACNzM,GAAW,EAC3B,KAAM,CAACgE,EAAO0I,CAAQ,EAAI/O,EAAAA,SAAS,EAAE,EAC/B,CAACsG,EAAa0I,CAAc,EAAIhP,EAAAA,SAAS,EAAE,EAC3C,CAACa,EAAQC,CAAS,EAAId,EAAA,SAAS,CAAE,MAAO,GAAI,YAAa,GAAI,EAC7D,CAACoO,EAASC,CAAU,EAAIrO,EAAAA,SAAS,EAAK,EACtC,CAACJ,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAChD,CAACyO,EAAaC,CAAc,EAAI1O,EAAAA,SAAS,EAAK,EAE9CiP,EAAU,SAAY,CAC1B,GAAIb,EAAS,OACbC,EAAW,EAAI,EACfC,EAAS,IAAI,EAEb,MAAMpN,EAAY,CAAE,MAAO,GAAI,YAAa,EAAG,EAC/C,IAAIgO,EAAW,GAcf,GAZK7I,EAAM,SACTnF,EAAU,MAAQ,oBACPgO,EAAA,IAGR5I,EAAY,SACfpF,EAAU,YAAc,0BACbgO,EAAA,IAGbpO,EAAUI,CAAS,EAEfgO,EAAU,CACZb,EAAW,EAAK,EAChB,MAAA,CAGE,GAAA,CACF,MAAMc,EAAc,MAAM7P,EACxB,uBACA,CACE,OAAQ,OACR,QAAS,CACP,SAAU+G,EACV,gBAAiBC,CAAA,CACnB,CAEJ,EAEAyI,EAAS,EAAE,EACXC,EAAe,EAAE,EAEjBN,EAAe,EAAI,QAGZ9O,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EACzC0O,EAAA,iCAAiC1O,EAAM,OAAO,EAAE,CAAA,QACzD,CACAyO,EAAW,EAAK,CAAA,CAEpB,EAEA,cACG/L,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,EAAA,KAAC,MAAA,CACC,GAAG,eACH,UAAU,wCAET,SAAA,CAAW4M,GAAA9R,EAAAA,IAAC,OAAI,SAAU,YAAA,CAAA,EAC1BsD,GAAStD,EAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAMsD,EAAA,EACnDtD,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,2BAAA,EAECA,MAAAoO,EAAA,CAAQ,UAAU,mCACjB,gBAACG,EACC,CAAA,SAAA,CAAAvO,EAAA,IAACsS,GAAA,CACC,YAAY,kBACZ,MAAOvI,EACP,YAAchF,GAAM0N,EAAS1N,EAAE,OAAO,KAAM,EAC5C,KAAM,EACN,SAAQ,GACR,UAAU,gCACV,MAAO,CAAE,OAAQ,MAAO,CAAA,CAC1B,EACCR,EAAO,OACLvE,MAAA4G,GAAA,CAAQ,MAAM,SACb,SAAC5G,EAAAA,IAAA,IAAA,CAAE,UAAU,eAAgB,SAAOuE,EAAA,KAAM,CAAA,EAC5C,EAGFvE,EAAA,IAACsS,GAAA,CACC,YAAY,wBACZ,MAAOtI,EACP,YAAcjF,GAAM2N,EAAe3N,EAAE,OAAO,KAAM,EAClD,KAAM,EACN,SAAQ,GACR,UAAU,wBACV,MAAO,CAAE,OAAQ,MAAO,CAAA,CAC1B,EACCR,EAAO,aACLvE,EAAA,IAAA4G,GAAA,CAAQ,MAAM,SACb,SAAC5G,EAAA,IAAA,IAAA,CAAE,UAAU,eAAgB,SAAOuE,EAAA,WAAA,CAAY,CAClD,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAEAvE,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACyG,EAAA,CACC,MAAM,UACN,UAAU,wCACV,QAASkM,EACT,SAAUb,EAET,WAAU,cAAgB,YAAA,CAAA,EAE/B,EAECK,GACCnS,EAAA,IAACuS,GAAA,CACC,OAAQJ,EACR,MAAM,UACN,aAAc,IAAMC,EAAe,EAAK,EACxC,QAAQ,4BACR,SAAU,GAAA,CAAA,CACZ,CAAA,CAAA,EAGN,QACChM,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,ECjJO,SAAS0M,GAAuBzQ,EAAY,CACjD,OAAOkI,EAA8B,CACnC,SAAU,CAAC,eAAgBlI,CAAE,EAC7B,QAAS,IACPW,EAA2B,wBAAyB,CAClD,OAAQ,MACR,QAAS,CAAE,GAAAX,CAAG,CAAA,CACf,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAAS0Q,GAAkB1Q,EAAY,CAC5C,OAAOkI,EAA6B,CAClC,SAAU,CAAC,iBAAkBlI,CAAE,EAC/B,QAAS,IACPW,EAA0B,uBAAwB,CAChD,OAAQ,MACR,QAAS,CAAE,OAAQX,CAAG,CAAA,CACvB,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAAS2Q,IAA2B,CACrB,OAAAjI,GAAe,EAE5BC,GAAiE,CACtE,WAAY,CAAC,CAAE,OAAAiI,EAAQ,UAAAC,KAKdlQ,EAJUkQ,EACb,4BACA,8BAE0B,CAC5B,OAAQ,OACR,QAAS,CACP,QAASD,EAAO,SAAS,CAAA,CAC3B,CACD,CACH,CAGD,CACH,CC5Ca,MAAAE,GAAarT,GAAU,CAClC,KAAM,CAACsT,EAAWC,CAAY,EAAI3P,EAAAA,SAAS,EAAK,EAC1C4P,EAAmBN,GAAyB,EAC5C,CAAC1P,EAAO0O,CAAQ,EAAItO,EAAAA,SAAuB,IAAI,EAC/C6P,EAAoB,MAAOL,GAAuB,OAClD,GAAA,CACF,MAAMI,EAAiB,YAAY,CACjC,OAAQxT,EAAM,OACd,UAAAoT,CAAA,CACD,EACD,QAAQ,IAAI,oCAAoCpT,EAAM,MAAM,EAAE,GAC9D0F,EAAA1F,EAAM,YAAN,MAAA0F,EAAA,KAAA1F,SACOwD,EAAO,CACd,QAAQ,MAAM,mCAAmCxD,EAAM,MAAM,IAAKwD,CAAK,EACvE0O,EAAS1O,CAAc,CAAA,CAE3B,EAEMkQ,EAAuB,IAAM,CACjCD,EAAkB,EAAK,CACzB,EAEME,EAAqB,IAAM,CAC/BF,EAAkB,EAAI,CACxB,EAGE,OAAArO,EAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAS5B,GAAA4B,EAAA,KAAC,MAAI,CAAA,UAAU,eAAe,SAAA,CAAA,UAAQ5B,EAAM,OAAA,EAAQ,EAC9D4B,EAAA,KAAC,MAAA,CACC,UAAW,4BAA4BkO,EAAY,UAAY,EAAE,GACjE,QAAS,IAAMC,EAAa,CAACD,CAAS,EAEtC,SAAA,CAACpT,EAAA,IAAAS,GAAA,CAAK,UAAU,iFACd,SAAAT,EAAAA,IAAC,KAAE,UAAU,UAAW,SAAMF,EAAA,KAAA,CAAM,CACtC,CAAA,EACAE,EAAAA,IAACS,GAAK,CAAA,UAAU,sGACd,SAAAT,EAAA,IAAC,KAAE,UAAU,UAAW,SAAMF,EAAA,IAAK,CAAA,CACrC,CAAA,CAAA,CAAA,CACF,EAEAoF,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAAC9E,GAAA,CACC,QAAQ,UACR,GAAG,gBACH,UAAU,OACV,QAASoT,EAET,SAAA,CAACxT,EAAAA,IAAAyJ,GAAA,CAAE,UAAU,cAAe,CAAA,EAAE,SAAA,CAAA,CAEhC,EACAvE,EAAA,KAAC9E,GAAA,CACC,GAAG,gBACH,UAAU,OACV,QAASqT,EAET,SAAA,CAACzT,EAAAA,IAAA0T,GAAA,CAAM,UAAU,cAAe,CAAA,EAAE,QAAA,CAAA,CAAA,CAEpC,CACF,CAAA,CAAA,EACF,CAEJ,ECtCMC,GAAkBC,EAAM,cAA2C,IAAI,EAE7E,SAASC,IAAc,CACf,MAAAxM,EAAUyM,EAAM,WAAWH,EAAe,EAEhD,GAAI,CAACtM,EACG,MAAA,IAAI,MAAM,gDAAgD,EAG3D,OAAAA,CACT,CAEA,MAAM0M,GAAWpU,EAAM,WAIrB,CACE,CACE,YAAAqU,EAAc,aACd,KAAAC,EACA,OAAAC,EACA,QAAAC,EACA,UAAAvU,EACA,SAAAoH,EACA,GAAGlH,GAELC,IACG,CACG,KAAA,CAACqU,EAAaC,CAAG,EAAIC,GACzB,CACE,GAAGL,EACH,KAAMD,IAAgB,aAAe,IAAM,GAC7C,EACAG,CACF,EACM,CAACI,EAAeC,CAAgB,EAAI7R,EAAAA,SAAe,EAAK,EACxD,CAAC8R,EAAeC,CAAgB,EAAI/R,EAAAA,SAAe,EAAK,EAExDgS,EAAWC,cAAmBP,GAAqB,CAClDA,IAIYA,EAAAA,EAAI,eAAe,EACnBA,EAAAA,EAAI,eAAe,EACtC,EAAG,EAAE,EAECQ,EAAaD,EAAAA,YAAkB,IAAM,CACzCP,GAAA,MAAAA,EAAK,YAAW,EACf,CAACA,CAAG,CAAC,EAEFS,EAAaF,EAAAA,YAAkB,IAAM,CACzCP,GAAA,MAAAA,EAAK,YAAW,EACf,CAACA,CAAG,CAAC,EAEFU,EAAgBH,EAAM,YACzBjN,GAA+C,CAC1CA,EAAM,MAAQ,aAChBA,EAAM,eAAe,EACVkN,EAAA,GACFlN,EAAM,MAAQ,eACvBA,EAAM,eAAe,EACVmN,EAAA,EAEf,EACA,CAACD,EAAYC,CAAU,CACzB,EAEAlS,OAAAA,EAAAA,UAAgB,IAAM,CAChB,CAACyR,GAAO,CAACH,GAIbA,EAAOG,CAAG,CAAA,EACT,CAACA,EAAKH,CAAM,CAAC,EAEhBtR,EAAAA,UAAgB,IAAM,CACpB,GAAKyR,EAIL,OAAAM,EAASN,CAAG,EACRA,EAAA,GAAG,SAAUM,CAAQ,EACrBN,EAAA,GAAG,SAAUM,CAAQ,EAElB,IAAM,CACNN,GAAA,MAAAA,EAAA,IAAI,SAAUM,EACrB,CAAA,EACC,CAACN,EAAKM,CAAQ,CAAC,EAGhB3U,EAAA,IAAC2T,GAAgB,SAAhB,CACC,MAAO,CACL,YAAAS,EACA,IAAAC,EACA,KAAAJ,EACA,YACED,KAAgBC,GAAA,YAAAA,EAAM,QAAS,IAAM,WAAa,cACpD,WAAAY,EACA,WAAAC,EACA,cAAAP,EACA,cAAAE,CACF,EAEA,SAAAzU,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,iBAAkBgV,EAClB,UAAW3V,EAAG,WAAYQ,CAAS,EACnC,KAAK,SACL,uBAAqB,WACpB,GAAGE,EAEH,SAAAkH,CAAA,CAAA,CACH,CACF,CAAA,CAGN,EACA+M,GAAS,YAAc,WAEvB,MAAMiB,GAAkBrV,EAGtB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAAQ,CAClC,KAAM,CAAE,YAAAqU,EAAa,YAAAJ,CAAY,EAAIH,GAAY,EAEjD,OACG7T,EAAA,IAAA,MAAA,CAAI,IAAKoU,EAAa,UAAU,kBAC/B,SAAApU,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWX,EACT,OACA4U,IAAgB,aAAe,QAAU,iBACzCpU,CACF,EACC,GAAGE,CAAA,CAAA,EAER,CAEJ,CAAC,EACDkV,GAAgB,YAAc,kBAE9B,MAAMC,GAAetV,EAGnB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAAQ,CAC5B,KAAA,CAAE,YAAAiU,CAAY,EAAIH,GAAY,EAGlC,OAAA7T,EAAA,IAAC,MAAA,CACC,IAAAD,EACA,KAAK,QACL,uBAAqB,QACrB,UAAWX,EACT,qCACA4U,IAAgB,aAAe,OAAS,OACxCpU,CACF,EACC,GAAGE,CAAA,CACN,CAEJ,CAAC,EACDmV,GAAa,YAAc,eAE3B,MAAMC,GAAmBvV,EAGvB,WAAA,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAU,UAAW,KAAAQ,EAAO,OAAQ,GAAGP,CAAA,EAASC,IAAQ,CACtE,KAAM,CAAE,YAAAiU,EAAa,WAAAa,EAAY,cAAAN,CAAA,EAAkBV,GAAY,EAG7D,OAAA3O,EAAA,KAAC9E,GAAA,CACC,IAAAL,EACA,QAAAF,EACA,KAAAQ,EACA,UAAWjB,EACT,iCACA4U,IAAgB,aACZ,oCACA,8CACJpU,CACF,EACA,SAAU,CAAC2U,EACX,QAASM,EACR,GAAG/U,EAEJ,SAAA,CAACE,EAAAA,IAAAmV,GAAA,CAAU,UAAU,SAAU,CAAA,EAC9BnV,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAc,gBAAA,CAAA,CAAA,CAAA,CAC1C,CAEJ,CAAC,EACDkV,GAAiB,YAAc,mBAE/B,MAAME,GAAezV,EAGnB,WAAA,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAU,UAAW,KAAAQ,EAAO,OAAQ,GAAGP,CAAA,EAASC,IAAQ,CACtE,KAAM,CAAE,YAAAiU,EAAa,WAAAc,EAAY,cAAAL,CAAA,EAAkBZ,GAAY,EAG7D,OAAA3O,EAAA,KAAC9E,GAAA,CACC,IAAAL,EACA,QAAAF,EACA,KAAAQ,EACA,UAAWjB,EACT,gCACA4U,IAAgB,aACZ,qCACA,iDACJpU,CACF,EACA,SAAU,CAAC6U,EACX,QAASK,EACR,GAAGhV,EAEJ,SAAA,CAACE,EAAAA,IAAAqV,GAAA,CAAW,UAAU,SAAU,CAAA,EAC/BrV,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAU,YAAA,CAAA,CAAA,CAAA,CACtC,CAEJ,CAAC,EACDoV,GAAa,YAAc,eChO3B,MAAME,GAAY,IAAM,CAChB,KAAA,CAAE,GAAAjT,CAAG,EAAIgN,GAA0B,EACnC,CAACvD,CAAY,EAAIC,GAAY,EAC7B,CAACyD,EAAaC,CAAc,EAAI/L,WAAsB,EACtD,CAAC4L,EAAkBC,CAAmB,EAAI7L,EAAAA,SAAS,CAAC,EAGpD,CACJ,KAAM6R,EACN,UAAWC,EACX,MAAOxD,CAAA,EACLc,GAAuBzQ,CAAE,EAEvB,CACJ,KAAMoT,EAAQ,CAAC,EACf,UAAWC,EACX,MAAOC,CAAA,EACL5C,GAAkB1Q,CAAE,EAGlBsB,EAAY6R,GAAgBE,EAG5BpS,EAAQ0O,GAAY2D,EAC1B,GAAIrS,EAAO,CACD,QAAA,MAAM,eAAgBA,CAAK,EACnC,IAAIsS,EAAU,gBACVtS,aAAiB,QAAOsS,EAAUtS,EAAM,SAC/BwI,EAAA,CACX,QAAS,uBAAuB8J,CAAO,GACvC,SAAU,IACV,MAAO,QAAA,CACR,CAAA,CAGHzO,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqI,EACH,OAGF,MAAMmF,EAAW,IAAM,CACDpF,EAAAC,EAAY,oBAAoB,CACtD,EAES,OAAAmF,EAAA,EAEGnF,EAAA,GAAG,SAAUmF,CAAQ,EACrBnF,EAAA,GAAG,SAAUmF,CAAQ,EAE1B,IAAM,CACCnF,EAAA,IAAI,SAAUmF,CAAQ,EACtBnF,EAAA,IAAI,SAAUmF,CAAQ,CACpC,CAAA,EACC,CAACnF,CAAW,CAAC,EAEhB,MAAMqG,EAAgB,IAAM,CAEtBrG,GAAeiG,EAAM,OAAS,IAE5BnG,IAAqBmG,EAAM,OAAS,EAEzB3J,EAAA,CACX,QAAS,+CACT,SAAU,IACV,MAAO,SAAA,CACR,EAID0D,EAAY,WAAW,EAG7B,EAGMsG,EAAqBL,EAAM,OAC7B,KAAK,OAAQnG,EAAmB,GAAKmG,EAAM,OAAU,GAAG,EACxD,EAEJ,cACGzP,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,EAAA,KAAC,MAAA,CACC,GAAG,eACH,UAAU,wCAGV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAA,EAAA,KAACuB,EAAA,CACC,UAAU,aACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,WAAY,iBAAiBpE,CAAE,GAE/B,SAAA,CAAArC,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAM0G,GAAkB,EAAE,MAAA,CAAA,CAElD,QACC,MACE,CAAA,SAAAzJ,EACEuB,OAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,MAAO,CAAA,EACxB1M,EAAAA,IAAC0M,EAAW,CAAA,KAAK,MAAO,CAAA,CAAA,CAAA,CAC1B,EAGExH,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAApF,EAAA,IAAC,KAAG,CAAA,UAAU,qBACX,SAAAuV,GAAA,YAAAA,EAAkB,QACrB,EACCvV,EAAA,IAAA,IAAA,CAAE,UAAU,gBACV,0BAAkB,cACrB,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,gGACZ,SACC2D,EAAA3D,EAAAA,IAAC0M,GAAW,KAAK,UAAW,CAAA,EAC1B+I,EAAM,SAAW,EAClBzV,EAAA,IAAA,MAAA,CAAI,UAAU,0CAA0C,SAAA,4BAEzD,CAAA,EAIEkF,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAACpF,EAAAA,IAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,4DACV,MAAO,CAAE,MAAO,GAAG8V,CAAkB,GAAI,CAAA,CAAA,EAE7C,EAGA5Q,EAAAA,KAAC,MAAI,CAAA,UAAU,6BAA6B,SAAA,CAAA,QACpCoK,EAAmB,EAAE,OAAKmG,EAAM,MAAA,EACxC,EAEAzV,EAAA,IAAC+T,GAAA,CACC,YAAY,WACZ,OAAQtE,EACR,UAAU,SAEV,SAAAzP,EAAA,IAACgV,GAAgB,CAAA,UAAU,kBACxB,SAAAS,GAAA,YAAAA,EAAO,IAAI,CAACM,EAAMlT,IACjB7C,EAAA,IAACiV,GACC,CAAA,SAAAjV,EAAA,IAACmT,GAAA,CACC,MAAO4C,EAAK,MACZ,KAAMA,EAAK,KACX,UAAWF,EACX,OAAQE,EAAK,EAAA,CAAA,CACf,EANiBlT,CAOnB,EAEJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CAAA,CAAA,CAAA,CAAA,EAEJ,QACCuD,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,ECnKM4P,GAAO,IAAM,CACjB,KAAM,CAACtG,EAAKC,CAAM,EAAIjM,EAAAA,SAAS,SAAS,EAClC,CAACuS,EAASC,CAAU,EAAIxS,EAAAA,SAAkC,CAAA,CAAE,EAC5D,CAACyS,EAAMC,CAAO,EAAI1S,EAAAA,SAA+B,CAAA,CAAE,EACnD,CAAC2S,EAAgBC,CAAiB,EAAI5S,EAAAA,SAAS,EAAK,EACpD,CAAC6S,EAAaC,CAAc,EAAI9S,EAAAA,SAAS,EAAK,EAC9C,CAACJ,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAEhD+S,EAAqB,SAAY,CACrCH,EAAkB,EAAI,EACtBtE,EAAS,IAAI,EACT,GAAA,CACF,MAAMhN,EAAO,MAAMhC,EACjB,yBACF,EACQ,QAAA,IAAI,YAAagC,CAAI,EAC7BkR,EAAWlR,CAAI,QACR1B,EAAO,CACL0O,EAAA,2BAA2B1O,EAAM,OAAO,EAAE,CAAA,QACnD,CACAgT,EAAkB,EAAK,CAAA,CAE3B,EAEMI,EAAkB,SAAY,CAClCF,EAAe,EAAI,EACf,GAAA,CACF,MAAMxR,EAAO,MAAMhC,EACjB,oBACF,EACQ,QAAA,IAAI,SAAUgC,CAAI,EAC1BoR,EAAQpR,CAAI,QACL1B,EAAO,CACL0O,EAAA,wBAAwB1O,EAAM,OAAO,EAAE,CAAA,QAChD,CACAkT,EAAe,EAAK,CAAA,CAExB,EAEArP,OAAAA,EAAAA,UAAU,IAAM,CACKsP,EAAA,EACHC,EAAA,CAClB,EAAG,EAAE,EAELC,GAAoB,IAAM,CACLF,EAAA,EACHC,EAAA,CAAA,CACjB,SAGE1Q,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,EAAA,KAAC,MAAA,CACC,GAAG,eACH,UAAU,wCAET,SAAA,CAAA5B,GAAUtD,EAAA,IAAA,MAAA,CAAI,UAAU,oBAAqB,SAAMsD,EAAA,EACpD4B,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAlF,MAAC,MAAG,UAAU,iCACX,SAAQ0P,IAAA,UAAY,aAAe,oBACtC,EACA1P,EAAAA,IAAC,MAAI,CAAA,UAAU,uCACb,SAAAkF,EAAA,KAACuB,EAAA,CACC,MAAM,UACN,UAAU,aACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,WACEiJ,IAAQ,UAAY,kBAAoB,gBAG1C,SAAA,CAAA1P,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAMqG,GAAY,EAAG,IAC1C2C,IAAQ,UAAY,aAAe,UAAA,CAAA,CAAA,CAExC,CAAA,CAAA,EACF,EAEA1P,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAkF,EAAA,KAACoI,GAAA,CACC,MAAOoC,EACP,YAAc3K,GACZ4K,EAAQ5K,EAAE,OAAO,OAAoB,SAAS,EAEhD,MAAO,CACL,eAAgB,wBAClB,EAEA,SAAA,CAACG,EAAAA,KAAAqI,GAAA,CAAiB,MAAM,UACtB,SAAA,CAAAvN,EAAA,IAAC0G,EAAQ,CAAA,KAAMkQ,GAAa,UAAU,OAAO,EAC7C5W,EAAAA,IAAC6M,IAAS,SAAU,YAAA,CAAA,CAAA,EACtB,EACA3H,EAAAA,KAACqI,GAAiB,CAAA,MAAM,aACtB,SAAA,CAAAvN,EAAA,IAAC0G,EAAQ,CAAA,KAAM8G,GAAa,UAAU,OAAO,EAC7CxN,EAAAA,IAAC6M,IAAS,SAAQ,UAAA,CAAA,CAAA,CACpB,CAAA,CAAA,CAAA,CAAA,EAEJ,EAEC6C,IAAQ,WACP1P,MAAAoF,EAAAA,SAAA,CACG,WACEF,EAAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,EAC3B1M,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAkB,oBAAA,CAAA,CAAA,CAC3C,CAAA,EACEiW,IAAY,KACbjW,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAE/C,+DAAA,CAAA,EAECA,MAAA,MAAA,CAAI,UAAU,2CACZ,SAASiW,GAAA,YAAAA,EAAA,IAAKY,GACZ7W,MAAAqF,GAAA,CAAuB,GAAI,UAAUwR,EAAI,OAAO,GAC/C,SAAA3R,OAACkJ,EAAQ,CAAA,UAAU,2HACjB,SAAA,CAAClJ,EAAAA,KAAAmJ,EAAA,CAAc,UAAU,gCACvB,SAAA,CAAArO,EAAA,IAACsO,EAAa,CAAA,UAAU,qDACrB,SAAAuI,EAAI,UACP,EACC7W,EAAA,IAAA8W,GAAA,CAAgB,UAAU,gCACxB,WAAI,gBACP,CAAA,CAAA,EACF,QACCvI,EAID,CAAA,CAAA,CAAA,CACF,CAAA,CAfS,EAAAsI,EAAI,OAgBf,GAEJ,CAEJ,CAAA,EAGDnH,IAAQ,cACP1P,MAAAoF,EAAAA,SAAA,CACG,WACEF,EAAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,EAC3B1M,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAe,iBAAA,CAAA,CAAA,CACxC,CAAA,EACEmW,IAAS,KACVnW,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAE/C,0DAAA,CAAA,EAECA,MAAA,MAAA,CAAI,UAAU,2CACZ,SAAMmW,GAAA,YAAAA,EAAA,IAAK9J,GACTrM,MAAAqF,GAAA,CAAqB,GAAI,iBAAiBgH,EAAI,KAAK,GAClD,SAAAnH,OAACkJ,EAAQ,CAAA,UAAU,2HACjB,SAAA,CAAClJ,EAAAA,KAAAmJ,EAAA,CAAc,UAAU,gCACvB,SAAA,CAAArO,EAAA,IAACsO,EAAa,CAAA,UAAU,qDACrB,SAAAjC,EAAI,QACP,EACCrM,EAAA,IAAA8W,GAAA,CAAgB,UAAU,gCACxB,WAAI,cACP,CAAA,CAAA,EACF,QACCvI,EAID,CAAA,CAAA,CAAA,CAAA,CACF,CAfS,EAAAlC,EAAI,KAgBf,EAEJ,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,EAGN,QACCjG,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,ECxMM2Q,GAAQ,UAET/Q,EACC,CAAA,SAAAhG,EAAA,IAACiG,GACC,SAACf,EAAA,KAAA,MAAA,CAAI,UAAU,+EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iEACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,gEAAgE,SAE9E,eAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,0CAA0C,SAEvD,0CAAA,CAAA,CAAA,EACF,QACCuD,GAAS,CAAA,CAAA,CAAA,CACZ,CAAA,CACF,CAAA,EACF,ECfEyT,GAAW,IAAM,CACrB,MAAM3Q,EAAWZ,GAAY,EAE7B0B,OAAAA,EAAAA,UAAU,IAAM,CACN,QAAA,MACN,0DACAd,EAAS,QACX,CAAA,EACC,CAACA,EAAS,QAAQ,CAAC,EAGpBrG,EAAA,IAACgG,EACC,CAAA,SAAAhG,EAAA,IAACiG,EACC,CAAA,SAAAjG,MAAC,MAAI,CAAA,UAAU,4DACb,SAAAkF,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAG,MAAA,EAC1CA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAoB,uBAAA,EAC9DA,EAAA,IAAC,IAAA,CACC,KAAK,QACL,UAAU,8CACX,SAAA,gBAAA,CAAA,CAED,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,ECbMiX,GAAmB,IAAM,CAC7B,KAAM,CAAC3T,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAChD,CAACoO,EAASC,CAAU,EAAIrO,EAAAA,SAAS,EAAK,EACtC,CAAC6M,EAAe2G,CAAgB,EAAIxT,EAAAA,SAAyB,CAAA,CAAE,EAC/D,CAACyT,EAAYC,CAAa,EAAI1T,EAAAA,SAAS,EAAE,EACzC,CAACoI,CAAY,EAAIC,GAAY,EAC7B,CAAE,KAAMC,EAAU,UAAWC,CAAA,EAAsBtB,GAAY,EAE/D0M,EAAwB9G,EAAc,OACzClE,GACCA,EAAI,QAAQ,cAAc,SAAS8K,EAAW,YAAa,CAAA,GAC1D9K,EAAI,gBACHA,EAAI,eAAe,YAAA,EAAc,SAAS8K,EAAW,YAAa,CAAA,CACxE,EAEAhQ,EAAAA,UAAU,IAAM,CACd,eAAemQ,GAAY,CACzBvF,EAAW,EAAI,EACfC,EAAS,IAAI,EACT,GAAA,CACF,MAAMuF,EAAM,MAAMvU,EAChB,2BACF,EACAkU,EAAiBK,CAAG,QACbjU,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EAC5C0O,EAAA,kCAAkC1O,EAAM,OAAO,EAAE,CAAA,QAC1D,CACAyO,EAAW,EAAK,CAAA,CAClB,CAGQuF,EAAA,CACZ,EAAG,EAAE,EAEC,MAAAE,EAAgB9L,GACfM,EACEA,EAAS,KAAMyL,GAAYA,EAAQ,QAAU/L,CAAK,EADnC,GAIxB,cACG1F,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,OAAC,OAAI,GAAG,eAAe,UAAU,oCAC/B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kDACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,wBAAA,EACC8R,GAAY7F,GAAsBjM,EAAA,IAAA,MAAA,CAAI,SAAU,aAAA,EAChDsD,GAAStD,EAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAMsD,EAAA,EACpDtD,EAAA,IAAC0X,GAAA,CACC,MAAOP,EACP,WAAapS,GAAWqS,EAAcrS,EAAE,OAAO,KAAK,EACpD,YAAY,wBACZ,UAAU,eAAA,CAAA,CACZ,EACF,EACC/E,EAAA,IAAA,MAAA,CAAI,UAAU,2CACZ,SAAuBqX,GAAA,YAAAA,EAAA,IACrBhL,GACC,CAACmL,EAAanL,EAAI,EAAE,SACjBhH,GAAkB,CAAA,GAAI,iBAAiBgH,EAAI,EAAE,GAC5C,SAACrM,EAAA,IAAAoO,EAAA,CAAQ,UAAU,2HACjB,SAAAlJ,EAAAA,KAACmJ,EAAc,CAAA,UAAU,gCACvB,SAAA,CAAArO,EAAA,IAACsO,EAAa,CAAA,UAAU,qDACrB,SAAAjC,EAAI,QACP,QACCyK,GAAgB,CAAA,UAAU,WACxB,SAAAzK,EAAI,gBAAkB,iBACzB,EACArM,EAAA,IAACyG,EAAA,CACC,OAAO,QACP,MAAM,UACN,UAAU,OACV,QAAS,MAAO1B,GAAM,CAChB,GAAA,CACF,MAAM3B,EAAW,MAAMJ,EACrB,gBACA,CACE,OAAQ,OACR,QAAS,CACP,OAAQqJ,EAAI,GACZ,KAAM,MAAA,CACR,CAEJ,EACQ,QAAA,IAAI,qBAAsBjJ,CAAQ,EAC7B0I,EAAA,CACX,QAAS,0BACT,SAAU,IACV,MAAO,SAAA,CACR,QACMxI,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAAA,CAE7C,EACD,SAAA,UAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,GAvCS+I,EAAI,EAwCf,EAGR,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACCjG,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,EC/GMuR,GAAgB,IAAM,CAC1B,KAAM,CAAC1B,EAASC,CAAU,EAAIxS,EAAAA,SAAkB,CAAA,CAAE,EAC5C,CAACoO,EAASC,CAAU,EAAIrO,EAAAA,SAAS,EAAK,EACtC,CAACJ,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAChD,CAACyT,EAAYC,CAAa,EAAI1T,EAAAA,SAAS,EAAE,EACzC,CAACoI,CAAY,EAAIC,GAAY,EAC7B,CAAE,KAAM6L,EAAa,UAAWC,CAAA,EACpCjN,GAAe,EAEX4M,EAAgB/L,GACfmM,EACEA,EAAY,KAAME,GAAcA,EAAU,UAAYrM,CAAO,EAD3C,GAIrBsM,EAAkB9B,EAAQ,OAC7B+B,GACCA,EAAE,UAAU,cAAc,SAASb,EAAW,YAAa,CAAA,GAC1Da,EAAE,kBACDA,EAAE,iBAAiB,YAAA,EAAc,SAASb,EAAW,YAAa,CAAA,CACxE,EAEAhQ,OAAAA,EAAAA,UAAU,IAAM,EACO,SAAY,CAC/B4K,EAAW,EAAI,EACfC,EAAS,IAAI,EACT,GAAA,CACI,MAAAuF,EAAM,MAAMvU,EAAsB,mBAAmB,EAC3DkT,EAAWqB,CAAG,QACPjU,EAAO,CACL0O,EAAA,2BAA2B1O,EAAM,OAAO,EAAE,CAAA,QACnD,CACAyO,EAAW,EAAK,CAAA,CAEpB,GAEa,CACf,EAAG,EAAE,SAGF/L,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,OAAC,OAAI,GAAG,eAAe,UAAU,oCAC/B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kDACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,iBAAA,GACE8R,GAAW+F,IAA0B7X,EAAA,IAAA,MAAA,CAAI,SAAU,aAAA,EACpDsD,GAAStD,EAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAMsD,EAAA,EACpDtD,EAAA,IAAC0X,GAAA,CACC,MAAOP,EACP,WAAapS,GAAWqS,EAAcrS,EAAE,OAAO,KAAK,EACpD,YAAY,iBACZ,UAAU,eAAA,CAAA,CACZ,EACF,EACC/E,EAAA,IAAA,MAAA,CAAI,UAAU,2CACZ,SAAiB+X,GAAA,YAAAA,EAAA,IACfE,GACC,CAACT,EAAaS,EAAU,EAAE,SACvB5S,GAAwB,CAAA,GAAI,UAAU4S,EAAU,EAAE,GACjD,SAACjY,EAAA,IAAAoO,EAAA,CAAQ,UAAU,2HACjB,SAAAlJ,EAAAA,KAACmJ,EAAc,CAAA,UAAU,gCACvB,SAAA,CAAArO,EAAA,IAACsO,EAAa,CAAA,UAAU,qDACrB,SAAA2J,EAAU,UACb,QACCnB,GAAgB,CAAA,UAAU,WACxB,SAAAmB,EAAU,kBAAoB,iBACjC,EACAjY,EAAA,IAACyG,EAAA,CACC,OAAO,QACP,MAAM,UACN,UAAU,OACV,QAAS,SAAY,CACf,GAAA,CACF,MAAMrD,EAAW,MAAMJ,EACrB,kBACA,CACE,OAAQ,OACR,QAAS,CACP,SAAUiV,EAAU,GACpB,KAAM,SAAA,CACR,CAEJ,EACQ,QAAA,IAAI,uBAAwB7U,CAAQ,EAC/B0I,EAAA,CACX,QAAS,4BACT,SAAU,IACV,MAAO,SAAA,CACR,QACMxI,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAE/C,EACD,SAAA,YAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,GAvCS2U,EAAU,EAwCrB,EAGR,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC7R,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,ECpHM8R,GAAepY,GAAU,OAEvB,MAAAqY,EACJ,MAAM,QAAQrY,EAAM,cAAc,GAAKA,EAAM,eAAe,OAAS,EAGrE,OAAAE,EAAA,IAAC,MAAI,CAAA,UAAU,qBACZ,SAAAF,EAAM,QACJE,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACb,SAACA,EAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,CAAA,CAC9B,EACE,CAACyL,GAAY,CAACrY,EAAM,UACtBoF,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAClF,EAAA,IAAA,IAAA,CAAE,UAAU,gDAAgD,SAE7D,6BAAA,EACCF,EAAM,SACLE,EAAA,IAACyG,EAAA,CACC,MAAM,UACN,UAAU,aACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,QAAS3G,EAAM,eAChB,SAAA,WAAA,CAAA,CAED,CAEJ,CAAA,EAEAoF,EAAAA,KAAC,MAAI,CAAA,UAAU,SACZ,SAAA,EAAAM,EAAA1F,EAAM,iBAAN,YAAA0F,EAAsB,IAAI,CAACuQ,EAAMlT,IAChC,aAAA,OAAA/C,EAAM,WAAaA,EAAM,QAEvBoF,EAAA,KAACkJ,EAAA,CAEC,UAAU,uCAEV,SAAA,CAAClJ,EAAAA,KAAAmD,EAAA,CAAQ,MAAM,OACb,SAAA,CAACnD,EAAAA,KAAA0B,GAAA,CAAQ,UAAU,iEAAiE,SAAA,CAAA,QAC5E/D,EAAQ,CAAA,EAChB,EACA7C,EAAA,IAACyG,EAAA,CACC,KAAK,QACL,MAAM,SACN,KAAK,QACL,QAAS,IAAM3G,EAAM,aAAa+C,CAAK,EAEvC,SAAC7C,EAAA,IAAA0G,EAAA,CAAQ,KAAK,YAAY,KAAMoI,EAAc,CAAA,CAAA,CAAA,CAChD,EACF,EACA5J,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAAAlF,EAAA,IAACsS,GAAA,CACC,MAAM,QACN,eAAe,UACf,MAAOyD,EAAK,MACZ,WAAahR,GACXjF,EAAM,aAAa+C,EAAO,QAASkC,EAAE,OAAO,KAAK,EAEnD,UAAW,iCACTS,EAAA1F,EAAM,WAAW+C,CAAK,IAAtB,MAAA2C,EAAyB,MACrB,iBACA,iBACN,GACA,SAAU,GACV,KAAM,CAAA,CACR,IACCwI,EAAAlO,EAAM,WAAW+C,CAAK,IAAtB,YAAAmL,EAAyB,QACxBhO,EAAAA,IAAC,IAAE,CAAA,UAAU,4BACV,SAAAF,EAAM,WAAW+C,CAAK,EAAE,KAC3B,CAAA,CAAA,EAEJ,EACAqC,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAlF,EAAA,IAACsS,GAAA,CACC,MAAM,OACN,eAAe,UACf,MAAOyD,EAAK,KACZ,WAAahR,GACXjF,EAAM,aAAa+C,EAAO,OAAQkC,EAAE,OAAO,KAAK,EAElD,UAAW,iCACTqT,EAAAtY,EAAM,WAAW+C,CAAK,IAAtB,MAAAuV,EAAyB,KACrB,iBACA,iBACN,GACA,SAAU,GACV,KAAM,CAAA,CACR,IACCC,EAAAvY,EAAM,WAAW+C,CAAK,IAAtB,YAAAwV,EAAyB,OACxBrY,EAAAA,IAAC,IAAE,CAAA,UAAU,4BACV,SAAAF,EAAM,WAAW+C,CAAK,EAAE,IAC3B,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EA7DKkT,EAAK,IAAM,EAAI,OAAOlT,CAAK,GAAKkT,EAAK,EAAA,EAiE5C/V,EAAA,IAACoO,EAAA,CAEC,UAAU,mCAEV,gBAACG,EACC,CAAA,SAAA,CAAAvO,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACkF,EAAA,KAAA0B,GAAA,CAAQ,UAAU,yDAAyD,SAAA,CAAA,QACpE/D,EAAQ,CAAA,CAAA,CAChB,CACF,CAAA,EACAqC,EAAAA,KAAC,MAAI,CAAA,UAAU,4CACb,SAAA,CAAClF,EAAA,IAAA,MAAA,CAAI,UAAU,2CACb,SAAAA,EAAAA,IAAC4G,IAAQ,UAAU,qEAChB,SAAKmP,EAAA,KAAA,CACR,CACF,CAAA,EACA/V,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAAC4G,IAAQ,UAAU,qEAChB,SAAKmP,EAAA,IACR,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EArBKA,EAAK,EAAA,IAyBfjW,EAAM,WAAaA,EAAM,SACxBoF,EAAA,KAACuB,EAAA,CACC,OAAO,QACP,QAAS3G,EAAM,UACf,UAAU,kBAEV,SAAA,CAAAE,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAMqG,GAAY,EAAE,cAAA,CAAA,CAAA,CAE5C,CAAA,CAEJ,CAEJ,CAAA,CAEJ,ECpJMuL,GAAuBxY,GAGvBoF,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAApF,EAAA,IAACyG,EAAA,CACC,UAAU,sCACV,MAAO,UACP,MAAO,CAAE,kBAAmB,QAAS,EACrC,WAAY3G,EAAM,UAClB,SAAUA,EAAM,UACjB,SAAA,WAAA,CAED,EACCA,EAAM,SAAW,CAACA,EAAM,WAErBoF,OAAAE,EAAAA,SAAA,CAAA,SAAA,CAAApF,EAAA,IAACyG,EAAA,CACC,UAAU,sCACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,QAAS3G,EAAM,YAChB,SAAA,kBAAA,CAED,EACAE,EAAA,IAACyG,EAAA,CACC,UAAU,sCACV,MAAO,SACP,MAAO,CAAE,kBAAmB,QAAS,EACrC,QAAS3G,EAAM,cAChB,SAAA,YAAA,CAAA,CAED,EACF,EAEDA,EAAM,SAAWA,EAAM,WAEpBoF,EAAAA,KAAAE,EAAAA,SAAA,CAAA,SAAA,CAAApF,EAAA,IAACyG,EAAA,CACC,UAAU,sCACV,MAAM,UACN,KAAK,QACL,QAAS3G,EAAM,YAChB,SAAA,kBAAA,CAED,EACAE,EAAA,IAACyG,EAAA,CACC,UAAU,sCACV,MAAM,SACN,KAAK,QACL,QAAS3G,EAAM,cAChB,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,EAEJ,ECjDEyY,GAAqBzY,GAEvBoF,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAlF,EAAAA,IAAC,OAAI,UAAU,gBACZ,SAAMF,EAAA,SAAW,CAACA,EAAM,iBACtBE,EAAA,IAAA0M,EAAA,CAAW,KAAK,OAAO,EACtB5M,EAAM,WAAaA,EAAM,QAEzBoF,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAApF,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,WACN,KAAK,WACL,MAAOnN,EAAM,YAAY,SACzB,SAAUA,EAAM,iBAChB,MAAOA,EAAM,eAAe,OAAA,CAC9B,EACAE,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,kBACN,KAAK,kBACL,MAAOnN,EAAM,YAAY,gBACzB,SAAUA,EAAM,iBAChB,MAAOA,EAAM,eAAe,cAAA,CAC9B,EACCA,EAAM,eAAe,SACpBE,EAAAA,IAAC,KAAE,UAAU,4BACV,SAAMF,EAAA,eAAe,OACxB,CAAA,CAAA,CAAA,CAEJ,EAGEoF,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAApF,MAAC,MAAG,UAAU,qBACX,SAAMF,EAAA,iBAAiB,SAAW,eACrC,QACC,IAAE,CAAA,UAAU,+BACV,SAAMA,EAAA,iBAAiB,gBACtB,0BACJ,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,EACAoF,EAAA,KAACuB,EAAA,CACC,UAAU,2CACV,MAAO,CAAE,kBAAmB,QAAS,EACrC,QAAS3G,EAAM,YACf,SAAUA,EAAM,UAEhB,SAAA,CAAAE,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAM0G,GAAkB,EAAE,MAAA,CAAA,CAAA,CAElD,EACF,EClDG,SAASoL,GAAcnW,EAAY,CACxC,OAAOkI,EAA8B,CACnC,SAAU,CAAC,MAAOlI,CAAE,EACpB,QAAS,IACPW,EAA2B,wBAAyB,CAClD,OAAQ,MACR,QAAS,CAAE,GAAAX,CAAG,CAAA,CACf,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CAGO,SAASoW,GAAYpW,EAAY,CACtC,OAAOkI,EAA6B,CAClC,SAAU,CAAC,WAAYlI,CAAE,EACzB,QAAS,IACPW,EAA0B,uBAAwB,CAChD,OAAQ,MACR,QAAS,CAAE,OAAQX,CAAG,CAAA,CACvB,EACH,UAAW,EAAI,GAAK,GAAA,CACrB,CACH,CASO,SAASqW,IAAe,CAC7B,MAAM5N,EAAcC,GAAe,EAEnC,OAAOC,GAAwC,CAC7C,WAAY,CAAC,CAAE,GAAA3I,EAAI,MAAA4I,EAAO,MAAAC,KACxBlI,EAAa,wBAAwBiI,CAAK,GAAI,CAC5C,OAAQ,MACR,QAAS,CAAE,GAAA5I,EAAI,CAAC4I,CAAK,EAAGC,CAAM,CAAA,CAC/B,EACH,UAAW,CAACC,EAAGC,IAAc,CACfN,EAAA,kBAAkB,CAAE,SAAU,CAAC,MAAOM,EAAU,EAAE,EAAG,CAAA,CACnE,CACD,CACH,CASO,SAASuN,IAAgB,CAC9B,MAAM7N,EAAcC,GAAe,EAEnC,OAAOC,GAAyC,CAC9C,WAAY,CAAC,CAAE,GAAA3I,EAAI,MAAA4I,EAAO,MAAAC,KACxBlI,EAAa,mBAAmBiI,CAAK,GAAI,CACvC,OAAQ,MACR,QAAS,CAAE,GAAA5I,EAAI,CAAC4I,CAAK,EAAGC,CAAM,CAAA,CAC/B,EACH,UAAW,CAACC,EAAGC,IAAc,CAO3B,MAAMM,EAJUZ,EACb,cACA,EAAA,QAAQ,CAAE,SAAU,CAAC,UAAU,EAAG,EAGlC,IAAK8N,GAAUA,EAAM,SAAS,CAAC,CAAC,EAChC,KAAMC,GAAe,CACd,MAAAC,EAAWhO,EAAY,aAA0B,CACrD,WACA+N,CAAA,CACD,EACD,OAAOC,GAAA,YAAAA,EAAU,KAAM/C,GAASA,EAAK,KAAO3K,EAAU,GAAE,CACzD,EAECM,GACFZ,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAYY,CAAK,EAAG,CACjE,CACF,CACD,CACH,CASO,SAASqN,IAAa,CAC3B,MAAMjO,EAAcC,GAAe,EAEnC,OAAOC,GAA2C,CAChD,WAAY,CAAC,CAAE,MAAAU,EAAO,MAAAsN,EAAO,KAAAC,CAAK,IAChCjW,EAAwB,kBAAmB,CACzC,OAAQ,OACR,QAAS,CACP,MAAAgW,EACA,KAAAC,EACA,OAAQvN,CAAA,CACV,CACD,EACH,UAAW,CAACP,EAAGC,IAAc,CAC3BN,EAAY,kBAAkB,CAC5B,SAAU,CAAC,WAAYM,EAAU,MAAM,SAAU,CAAA,CAAA,CAClD,CAAA,CACH,CACD,CACH,CAGO,SAAS8N,IAAgB,CAC9B,MAAMpO,EAAcC,GAAe,EAEnC,OAAOC,GAAiC,CACtC,WAAaiI,GACXjQ,EAAa,kBAAmB,CAC9B,OAAQ,SACR,QAAS,CAAE,GAAIiQ,CAAO,CAAA,CACvB,EACH,UAAW,CAAC9H,EAAG8H,IAAW,CAMxB,MAAMvH,EAJUZ,EACb,cACA,EAAA,QAAQ,CAAE,SAAU,CAAC,UAAU,EAAG,EAGlC,IAAK8N,GAAUA,EAAM,SAAS,CAAC,CAAC,EAChC,KAAMC,GAAe,CACd,MAAAC,EAAWhO,EAAY,aAA0B,CACrD,WACA+N,CAAA,CACD,EACD,OAAOC,GAAA,YAAAA,EAAU,KAAM/C,GAASA,EAAK,KAAO9C,EAAM,CACnD,EAECvH,GACFZ,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAYY,CAAK,EAAG,CACjE,CACF,CACD,CACH,CAGO,SAASyN,IAAe,CAC7B,MAAMrO,EAAcC,GAAe,EAEnC,OAAOC,GAAiC,CACtC,WAAaU,GACX1I,EAAmB,wBAAyB,CAC1C,OAAQ,SACR,QAAS,CAAE,GAAI0I,CAAM,CAAA,CACtB,EACH,UAAW,CAACP,EAAGO,IAAU,CAEvBZ,EAAY,kBAAkB,CAAE,SAAU,CAAC,MAAOY,CAAK,EAAG,EAC1DZ,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAYY,CAAK,EAAG,EAE/DZ,EAAY,kBAAkB,CAAE,SAAU,CAAC,UAAU,EAAG,CAAA,CAC1D,CACD,CACH,CClJA,MAAMsO,GAAc,IAAM,QAClB,KAAA,CAAE,GAAA/W,CAAG,EAAIgN,GAA0B,EACnCvJ,EAAUC,GAAW,EACrB,CAAC+F,CAAY,EAAIC,GAAY,EAE7BsN,GAAc7T,GADHC,GAAsC,EAC1B,QAAT,YAAAD,GAAgB,YAG9B,CACJ,KAAM+P,EACN,UAAWC,EACX,MAAOxD,CAAA,EACLwG,GAAcnW,CAAE,EAEd,CACJ,KAAMoT,EAAQ,CAAC,EACf,UAAWC,EACX,MAAOC,CAAA,EACL8C,GAAYpW,CAAE,EAGZiX,EAAoBZ,GAAa,EACjCa,EAAqBZ,GAAc,EACnCa,EAAkBT,GAAW,EAC7BU,EAAqBP,GAAc,EACnCQ,EAAoBP,GAAa,EAGjC,CAACnK,EAAiBC,CAAkB,EAAIvL,EAAAA,SAAS,EAAK,EACtD,CAACkM,EAAWC,CAAY,EAAInM,EAAAA,SAAS,EAAK,EAC1C,CAACiW,EAAaC,CAAc,EAAIlW,EAAAA,SAAsB,CAAA,CAAE,EACxD,CAACoM,EAAaC,EAAc,EAAIrM,WAAS,CAC7C,SAAU,GACV,gBAAiB,EAAA,CAClB,EACK,CAACmW,GAAgBC,CAAiB,EAAIpW,EAAAA,SAIzC,CAAA,CAAE,EACC,CAACqW,GAAYC,CAAa,EAAItW,EAAAA,SAEjC,CAAA,CAAE,EAGCuW,GAAU1E,GAAA,YAAAA,EAAkB,QAAS,QAGrC5R,EAAY6R,GAAgBE,EAG5BpS,EAAQ0O,GAAY2D,EAC1B,GAAIrS,EAAO,CACD,QAAA,MAAM,eAAgBA,CAAK,EACnC,IAAIsS,EAAU,gBACVtS,aAAiB,QAAOsS,EAAUtS,EAAM,SAC/BwI,EAAA,CACX,QAAS,uBAAuB8J,CAAO,GACvC,SAAU,IACV,MAAO,QAAA,CACR,CAAA,CAGH,MAAMzE,GAAa,IAAM,CAClBoE,IACUxF,GAAA,CACb,SAAUwF,EAAiB,SAAW,GACtC,gBAAiBA,EAAiB,gBAAkB,EAAA,CACrD,EACcqE,EAAAnE,GAAA,YAAAA,EAAO,IAAKM,IAAU,CAAE,GAAGA,IAAQ,EAClDlG,EAAa,EAAI,EACjBiK,EAAkB,CAAA,CAAE,EACpBE,EAAc,CAAA,CAAE,EAClB,EAEME,GAAwBnV,GAAmB,CACzC,KAAA,CAAE,KAAAuM,GAASvM,EAAE,OACbmG,EAAQnG,EAAE,OAAO,OAAS,GAChCgL,GAAgBwB,IAAU,CACxB,GAAGA,EACH,CAACD,CAAI,EAAGpG,CAAA,EACR,CACJ,EAEMiP,GAAmB,CACvBtX,EACAoI,EACAC,IACG,CACH,MAAMkP,EAAWlP,GAAS,GAC1B0O,EAAgBS,GACdA,GAAA,YAAAA,EAAW,IAAI,CAACtE,GAAMuE,KACpBA,KAAMzX,EAAQ,CAAE,GAAGkT,GAAM,CAAC9K,CAAK,EAAGmP,GAAarE,GAEnD,CACF,EAEMwE,GAAgB,IAAM,CAC1B,GAAI,CAAChF,EAAkB,OACvB,MAAMiF,EAAqB,CACzB,GAAI,GAAKb,GAAe,CAAI,GAAA,OAAQc,GAAMA,EAAE,IAAM,CAAC,EAAE,OAAS,EAC9D,MAAO,GACP,KAAM,GACN,MAAOlF,EAAiB,GACxB,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EACeqE,EAACS,GAAc,CAAC,GAAIA,GAAa,CAAA,EAAKG,CAAO,CAAC,CAC/D,EAEME,GAAoB7X,GAAkB,CAC3B+W,EAACS,GAAcA,EAAU,OAAO,CAAClP,EAAGmP,IAAMA,IAAMzX,CAAK,CAAC,CACvE,EAEM8X,GAAmB,IAAM,CAC7B,MAAM/V,EAA2D,CAAC,EAClE,IAAIC,EAAU,GAER,MAAA+V,EAAc9K,EAAY,SAAS,KAAK,EACxC+K,EAAqB/K,EAAY,gBAAgB,KAAK,EAE5D,OAAK8K,IACHhW,EAAU,QAAU,uBACVC,EAAA,IAEPgW,IACHjW,EAAU,eAAiB,8BACjBC,EAAA,IAGZiV,EAAkBlV,CAAS,EACZmL,GAAA,CACb,SAAU6K,EACV,gBAAiBC,CAAA,CAClB,EACMhW,CACT,EAEMiW,GAAgB,IAAM,CAC1B,MAAMC,EACJ,CAAC,EACH,IAAIlW,EAAU,GACF,OAAA8U,EAAA,QAAQ,CAAC5D,EAAMlT,IAAU,CACnC,MAAM0B,EAA4C,CAAC,EAC7CyW,GAAejF,EAAK,MAAM,KAAK,EAC/BkF,GAAclF,EAAK,KAAK,KAAK,EAE9BiF,KACHzW,EAAO,MAAQ,wBACLM,EAAA,IAEPoW,KACH1W,EAAO,KAAO,uBACJM,EAAA,IAER,OAAO,KAAKN,CAAM,EAAE,OAAS,IAC/BwW,EAAclY,CAAK,EAAI0B,IAErByW,KAAiBjF,EAAK,OAASkF,KAAgBlF,EAAK,OACtD6D,EAAgBrI,IACdA,IAAA,YAAAA,GAAM,IAAI,CAACkJ,GAAGH,KACZA,KAAMzX,EAAQ,CAAE,GAAG4X,GAAG,MAAOO,GAAc,KAAMC,EAAA,EAAgBR,GAErE,CACF,CACD,EACDT,EAAce,CAAa,EACpBlW,CACT,EAEMuM,EAAa,SAAY,CAC7B,MAAM8J,EAAkBP,GAAiB,EACnCQ,EAAgBL,GAAc,EAEpC,GAAI,CAACI,GAAmB,CAACC,GAAiB,CAAC5F,EAAkB,CACnD,QAAA,IAAI,0BAA2BsE,GAAgBE,EAAU,EACpDjO,EAAA,CACX,QAAS,8CACT,SAAU,IACV,MAAO,SAAA,CACR,EACD,MAAA,CAGE,GAAA,CAEEgE,EAAY,YAAcyF,EAAiB,SAAW,IAAI,QAC5D,MAAM+D,EAAkB,YAAY,CAClC,GAAAjX,EACA,MAAO,WACP,MAAOyN,EAAY,QAAA,CACpB,EAIDA,EAAY,mBACXyF,EAAiB,gBAAkB,IAAI,QAExC,MAAM+D,EAAkB,YAAY,CAClC,GAAAjX,EACA,MAAO,kBACP,MAAOyN,EAAY,eAAA,CACpB,EAIH,MAAMsL,EAAkB,IAAI,KACzB3F,GAAS,CAAC,GAAG,IAAKM,GAAS,CAACA,EAAK,GAAIA,CAAI,CAAC,CAC7C,EAGW,UAAAsF,KAAgB5F,GAAS,GAEhC,CAACkE,EAAY,KAAMc,GAAMA,EAAE,KAAOY,EAAa,EAAE,GACjDA,EAAa,GAAK,GAEZ,MAAA5B,EAAmB,YAAY4B,EAAa,EAAE,EAKxD,UAAWC,KAAc3B,EACnB,GAAA2B,EAAW,IAAM,EAEnB,MAAM9B,EAAgB,YAAY,CAChC,MAAOjE,EAAiB,GACxB,MAAO+F,EAAW,MAClB,KAAMA,EAAW,IAAA,CAClB,MACI,CAEL,MAAMD,EAAeD,EAAgB,IAAIE,EAAW,EAAE,EAClDD,IAEEC,EAAW,SAAWD,EAAa,OAAS,IAAI,QAClD,MAAM9B,EAAmB,YAAY,CACnC,GAAI+B,EAAW,GACf,MAAO,QACP,MAAOA,EAAW,KAAA,CACnB,EAICA,EAAW,QAAUD,EAAa,MAAQ,IAAI,QAChD,MAAM9B,EAAmB,YAAY,CACnC,GAAI+B,EAAW,GACf,MAAO,OACP,MAAOA,EAAW,IAAA,CACnB,EAEL,CAISxP,EAAA,CACX,QAAS,8CACT,SAAU,IACV,MAAO,SAAA,CACR,EAED+D,EAAa,EAAK,EAClBiK,EAAkB,CAAA,CAAE,EACpBE,EAAc,CAAA,CAAE,QACT1W,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5C,IAAIsS,EAAU,4BACVtS,aAAiB,QAAOsS,EAAUtS,EAAM,SAC5CwW,EAAmBvI,IAAU,CAC3B,GAAGA,EACH,QAAS,mBAAmBqE,CAAO,EAAA,EACnC,EACW9J,EAAA,CACX,QAAS,2BAA2B8J,CAAO,GAC3C,SAAU,IACV,MAAO,QAAA,CACR,CAAA,CAEL,EAEMpE,GAAe,IAAM,CACzB3B,EAAa,EAAK,EAClBiK,EAAkB,CAAA,CAAE,EACpBE,EAAc,CAAA,CAAE,CAClB,EAEMuB,GAAkB,SAAY,CAClC,GAAI,CAAClZ,EAAI,CACP,QAAQ,MAAM,mCAAmC,EACpCyJ,EAAA,CACX,QAAS,iCACT,SAAU,IACV,MAAO,QAAA,CACR,EACD,MAAA,CAGE,GAAA,CACI,MAAA4N,EAAkB,YAAYrX,CAAE,EACzByJ,EAAA,CACX,QAAS,4BACT,SAAU,IACV,MAAO,SAAA,CACR,EACDhG,EAAQ,KAAK,oBAAoB,QAC1BxC,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5C,IAAIsS,EAAU,gCACVtS,aAAiB,QAAOsS,EAAUtS,EAAM,SAC/BwI,EAAA,CACX,QAAS,yBAAyB8J,CAAO,GACzC,SAAU,IACV,MAAO,QAAA,CACR,CAAA,CAEL,EAEM4F,GAAkB,IAAM,CACvB5L,IACCyJ,EACMvT,EAAA,KAAK,UAAUuT,CAAW,EAAE,EAEpCvT,EAAQ,KAAK,OAAO,EAG1B,EAEM2V,GAAiB7L,EAAY+J,EAAclE,EAE7C,OAAA9R,GAAa,CAACiM,SAEb5J,EACC,CAAA,SAAA,CAACd,EAAAA,KAAAe,EAAA,CAAW,UAAU,GACpB,SAAA,CAAAjG,EAAA,IAACuH,EAAO,EAAA,EACRvH,EAAAA,IAAC,OAAI,UAAU,wCACb,eAAC0M,EAAW,CAAA,KAAK,UAAW,CAAA,CAC9B,CAAA,CAAA,EACF,QACCtG,EAAO,CAAA,CAAA,CAAA,EACV,SAKDJ,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,SACPtB,EACC,CAAA,SAAA,CAACf,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAlF,EAAA,IAACuY,GAAA,CACC,QAAS5U,EACT,iBAAA4R,EACA,UAAA3F,EACA,QAAAqK,EACA,YAAAnK,EACA,eAAA+J,GACA,iBAAkBK,GAClB,YAAasB,EAAA,CACf,EAEAxb,EAAA,IAACsY,GAAA,CACC,QAAA2B,EACA,UAAArK,EACA,YAAa4L,GACb,YAAarK,GACb,YAAaC,EACb,cAAeI,GACf,cAAe,IAAMvC,EAAmB,EAAI,EAC5C,UAAW,eAAe5M,CAAE,EAAA,CAAA,CAC9B,EACF,EAEArC,EAAA,IAACkY,GAAA,CACC,QAASvU,EACT,eAAA8X,GACA,UAAA7L,EACA,QAAAqK,EACA,WAAAF,GACA,aAAcI,GACd,UAAWI,GACX,aAAcG,GACd,eAAgBvJ,EAAA,CAAA,CAClB,EACF,EAEAnR,EAAA,IAACmP,GAAA,CACC,OAAQH,EACR,aAAc,IAAMC,EAAmB,EAAK,EAC5C,OAAQ,mBACR,QACE,0EAEF,QAAS,CACP,CACE,KAAM,SACN,KAAM,SACN,SAAU,WACZ,EACA,CACE,KAAM,SACN,KAAM,cACN,QAASsM,EAAA,CACX,CACF,CAAA,CACF,EACF,QACCnV,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,EC/aMsV,GAAW5b,GAEboF,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,cAAe,SAAA,CAAMpF,EAAA,MAAM,GAAA,EAAC,EAC5CE,EAAAA,IAAC,OAAM,CAAA,SAAAF,EAAM,KAAM,CAAA,CAAA,EACrB,ECKE6b,GAAuB7b,GAAU,iCAEnC,OAAAoF,EAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACA,EAAAA,KAAAkJ,EAAA,CAAQ,UAAU,uCACjB,SAAA,CAACpO,EAAAA,IAAAqO,EAAA,CAAc,UAAU,MACvB,SAAArO,EAAA,IAACsO,GAAa,UAAU,8CAA8C,+BAEtE,CACF,CAAA,EACAtO,EAAAA,IAACuO,GAAe,UAAU,WACvB,WAAM,UACLrJ,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,aACN,KAAK,aACL,QAAOzH,EAAA1F,EAAM,cAAN,YAAA0F,EAAmB,aAAc,GACxC,MAAO1F,EAAM,OAAO,WACpB,SAAUA,EAAM,YAAA,CAClB,EACAE,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,YACN,KAAK,YACL,QAAOe,EAAAlO,EAAM,cAAN,YAAAkO,EAAmB,YAAa,GACvC,MAAOlO,EAAM,OAAO,UACpB,SAAUA,EAAM,YAAA,CAClB,EACAE,EAAA,IAACiN,GAAA,CACC,KAAK,OACL,MAAM,WACN,KAAK,WACL,QAAOmL,EAAAtY,EAAM,cAAN,YAAAsY,EAAmB,WAAY,GACtC,MAAOtY,EAAM,OAAO,SACpB,SAAUA,EAAM,YAAA,CAClB,EACAE,EAAA,IAACiN,GAAA,CACC,KAAK,QACL,MAAM,QACN,KAAK,QACL,QAAOoL,EAAAvY,EAAM,cAAN,YAAAuY,EAAmB,QAAS,GACnC,MAAOvY,EAAM,OAAO,MACpB,SAAUA,EAAM,YAAA,CAClB,EACAE,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAACyG,GAAU,QAAS3G,EAAM,WAAY,SAAA,cAAY,CAAA,CACpD,CAAA,CAAA,CACF,CAAA,EAEAoF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAlF,MAAC0b,IAAQ,MAAM,aAAa,OAAOE,EAAA9b,EAAM,WAAN,YAAA8b,EAAgB,WAAY,QAC9DF,GAAQ,CAAA,MAAM,YAAY,OAAOG,EAAA/b,EAAM,WAAN,YAAA+b,EAAgB,UAAW,QAC5DH,GAAQ,CAAA,MAAM,WAAW,OAAOI,EAAAhc,EAAM,WAAN,YAAAgc,EAAgB,SAAU,QAC1DJ,GAAQ,CAAA,MAAM,QAAQ,OAAOK,EAAAjc,EAAM,WAAN,YAAAic,EAAgB,MAAO,SACpDtV,EAAU,CAAA,QAAS3G,EAAM,WAAY,UAAU,OAC9C,SAAA,CAAAE,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAMsG,GAAe,EAAE,WAAA,CAE/C,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EAEA9H,EAAAA,KAACkJ,EAAQ,CAAA,UAAU,uCACjB,SAAA,CAACpO,EAAAA,IAAAqO,EAAA,CAAc,UAAU,MACvB,SAAArO,EAAA,IAACsO,GAAa,UAAU,8CAA8C,yBAEtE,CACF,CAAA,QACCC,EAAe,CAAA,UAAU,WACxB,SAACrJ,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAlF,EAAA,IAAC0b,GAAA,CACC,MAAM,kBACN,OAAOM,EAAAlc,EAAM,WAAN,YAAAkc,EAAgB,UAAA,CACzB,EACAhc,EAAA,IAAC0b,GAAA,CACC,MAAM,eACN,OAAOO,EAAAnc,EAAM,WAAN,YAAAmc,EAAgB,YAAA,CACzB,QACCP,GAAQ,CAAA,MAAM,gBAAgB,OAAOQ,EAAApc,EAAM,WAAN,YAAAoc,EAAgB,WAAY,EAClElc,EAAA,IAAC0b,GAAA,CACC,MAAM,4BACN,MAAO,IAAGS,EAAArc,EAAM,WAAN,YAAAqc,EAAgB,YAAY,OAAMC,EAAAtc,EAAM,WAAN,YAAAsc,EAAgB,cAAc,EAAA,CAC5E,QACCV,GAAQ,CAAA,MAAM,cAAc,OAAOW,EAAAvc,EAAM,WAAN,YAAAuc,EAAgB,UAAY,CAAA,CAAA,CAAA,CAClE,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC7FMC,GAAa,IAEnB,SAAwBC,GAAgBzc,EAAO,CAC7C,KAAM,CAAC0c,EAAOC,CAAQ,EAAI/Y,EAAAA,SAAS,CAAC,EAC9B,CAAE,IAAA3D,EAAK,OAAA2c,CAAO,EAAIC,GAAU,CAChC,UAAW,GACX,YAAa,EAAA,CACd,EAEDxV,OAAAA,EAAAA,UAAU,IAAM,CACd,IAAIyV,EAAQ,IACZ,GAAIF,EAAQ,CACJ,MAAAG,EAAQ,WAAW,IAAMJ,EAASD,EAAQ,CAAC,EAAII,GAAS,GAAK,EAC/DJ,GAAS1c,EAAM,OAAS,GAC1B,aAAa+c,CAAK,CACpB,GAED,CAACL,EAAO1c,EAAM,OAAQ4c,CAAM,CAAC,EAG9BxX,EAAA,KAACkJ,EAAQ,CAAA,UAAU,uCACjB,SAAA,CAACpO,EAAAA,IAAAqO,EAAA,CAAc,UAAU,MACvB,SAAArO,EAAA,IAACsO,GAAa,UAAU,8CAA8C,wBAEtE,CACF,CAAA,EACApJ,EAAA,KAACqJ,EAAA,CACC,IAAAxO,EACA,UAAU,4DAEV,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,IAAK,UAAUwc,CAAK,OACpB,IAAI,cACJ,MAAOF,GACP,OAAQA,EAAA,CACV,EACCtc,EAAA,IAAA,OAAA,CAAK,UAAU,wGACb,WAAQ,CACX,CAAA,CAAA,CAAA,CAAA,CACF,EACF,CAEJ,CCvCA,MAAM8c,GAAwBhd,GAGxBoF,EAAA,KAAAE,WAAA,CAAA,SAAA,CAACF,EAAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAClF,EAAAA,IAAAuc,GAAA,CAAgB,OAAQzc,EAAM,MAAQ,CAAA,EACvCoF,EAAAA,KAACkJ,EAAQ,CAAA,UAAU,uCACjB,SAAA,CAACpO,EAAAA,IAAAqO,EAAA,CAAc,UAAU,MACvB,SAAArO,EAAA,IAACsO,GAAa,UAAU,8CAA8C,2BAEtE,CACF,CAAA,QACCC,EAAe,CAAA,UAAU,WACxB,SAACrJ,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAA,KAAC6X,GAAA,CACC,MAAM,QACN,MAAOjd,EAAM,MACb,YAAciF,GACZjF,EAAM,SAASiF,EAAE,OAAO,KAAyB,EAEnD,UAAU,UACV,YAAY,eAEZ,SAAA,CAAC/E,EAAA,IAAAgd,GAAA,CAAgB,MAAM,QAAQ,SAAK,QAAA,EACnChd,EAAA,IAAAgd,GAAA,CAAgB,MAAM,OAAO,SAAI,MAAA,CAAA,CAAA,CAAA,CACpC,EACA9X,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,iDAAiD,SAE/D,uBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,8BAAA,CAAA,CAAA,EACF,EACAA,EAAA,IAACyG,EAAA,CACC,MAAM,UACN,QAAS,IAAM3G,EAAM,qBAAqB,EAAI,EAC/C,SAAA,iBAAA,CAAA,CAED,EACF,EACAoF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAClF,EAAA,IAAA,KAAA,CAAG,UAAU,iDAAiD,SAE/D,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,wDAAA,CAAA,CAAA,EACF,EACAA,EAAA,IAACyG,EAAA,CACC,MAAM,SACN,QAAS,IAAM3G,EAAM,mBAAmB,EAAI,EAC7C,SAAA,gBAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAE,EAAA,IAACmP,GAAA,CACC,OAAQrP,EAAM,kBACd,aAAc,IAAMA,EAAM,qBAAqB,EAAK,EACpD,OAAO,kBACP,OAAQ,CACN,CACE,KAAM,cACN,KAAM,WACN,YAAa,cACf,EACA,CACE,KAAM,cACN,KAAM,WACN,YAAa,cACf,EACA,CACE,KAAM,kBACN,KAAM,WACN,YAAa,sBAAA,CAEjB,EACA,QAAS,CACP,CACE,KAAM,SACN,KAAM,SACN,QAAS,IAAM,CACb,QAAQ,IAAI,gBAAgB,CAAA,CAEhC,EACA,CACE,KAAM,OACN,QAAUkF,GACJA,EAAK,cAAgBA,EAAK,iBAC5BlF,EAAM,aAAa,CACjB,QAAS,yBACT,SAAU,IACV,MAAO,QAAA,CACR,EACM,KAGT,QAAQ,IAAI,kBAAkB,EACvB,GACT,CACF,CACF,CACF,EAEAE,EAAA,IAACmP,GAAA,CACC,OAAQrP,EAAM,gBACd,aAAc,IAAMA,EAAM,mBAAmB,EAAK,EAClD,OAAO,mBACP,QAAQ,8EACR,QAAS,CACP,CACE,KAAM,SACN,KAAM,SACN,QAAS,IAAM,CACb,QAAQ,IAAI,gBAAgB,CAAA,CAEhC,EACA,CACE,KAAM,SACN,QAAS,IAAM,CACb,QAAQ,IAAI,iBAAiB,CAAA,CAC/B,CACF,CACF,CAAA,CACF,EACF,EC5HEmd,GAAc,IAAM,CACxB,KAAM,CAAE,MAAAhW,EAAO,SAAAC,CAAS,EAAIE,GAAS,EAC/B,CAAC8V,EAAUC,CAAW,EAAIzZ,WAAe,EACzC,CAACoO,EAASC,CAAU,EAAIrO,EAAAA,SAAS,EAAI,EACrC,CAACJ,EAAO0O,CAAQ,EAAItO,EAAAA,SAAwB,IAAI,EAChD,CAAC0Z,EAAeC,CAAgB,EAAI3Z,EAAAA,SAAwB,IAAI,EAChE,CAAC4Z,EAAmBC,CAAoB,EAAI7Z,EAAAA,SAAS,EAAK,EAC1D,CAACsL,EAAiBC,CAAkB,EAAIvL,EAAAA,SAAS,EAAK,EACtD,CAACkM,EAAWC,CAAY,EAAInM,EAAAA,SAAS,EAAK,EAC1C,CAACoM,EAAaC,CAAc,EAAIrM,EAAAA,SAASwZ,CAAQ,EAEjDM,EAAsBC,GAAoB,CAC7BJ,EAAAD,IAAkBK,EAAU,KAAOA,CAAO,CAC7D,EAEMtM,EAAa,IAAM,CACvBpB,EAAemN,CAAQ,EACvBrN,EAAa,EAAI,CACnB,EAEMuB,EAAa,SAAY,OACzB,GAAA,CAACzM,IACH,OAGF,MAAM+Y,EAAiB,CAAC,aAAc,YAAa,WAAY,OAAO,EAElE,GAAA,CACI,MAAAC,GAAiBnY,EAAAkY,GAAA,YAAAA,EACnB,OAAQzS,GAAU6E,EAAY7E,CAAK,IAAMiS,EAASjS,CAAK,KADpC,YAAAzF,EAEnB,IAAKyF,GACLjI,EAAmB,cAAciI,CAAK,GAAI,CACxC,OAAQ,MACR,QAAS,CACP,CAACA,CAAK,EAAG6E,EAAY7E,CAAK,CAAA,CAE7B,CAAA,GAGC,MAAA,QAAQ,IAAI0S,CAAc,EAChCR,EAAYrN,CAAW,EACvBD,EAAa,EAAK,QACXvM,EAAO,CACd,QAAQ,MAAMA,CAAK,EACnB,MAAM,iDAAiD,CAAA,CAE3D,EAEMqB,EAAe,IAAM,CACzB,MAAMC,EAKF,CAAC,EACL,IAAIC,EAAU,GAEV,OAACiL,EAAY,aACflL,EAAU,WAAa,yBACbC,EAAA,IAGPiL,EAAY,YACflL,EAAU,UAAY,wBACZC,EAAA,IAGPiL,EAAY,MAGL,eAAe,KAAKA,EAAY,KAAK,IAC/ClL,EAAU,MAAQ,mBACRC,EAAA,KAJVD,EAAU,MAAQ,oBACRC,EAAA,IAMPiL,EAAY,WACflL,EAAU,SAAW,uBACXC,EAAA,IAGAiL,EAAA,WAAaA,EAAY,WAAW,KAAK,EACzCA,EAAA,UAAYA,EAAY,UAAU,KAAK,EACvCA,EAAA,MAAQA,EAAY,MAAM,KAAK,EAC/BA,EAAA,SAAWA,EAAY,SAAS,KAAK,EAEjDtL,GAAUI,CAAS,EACZC,CACT,EAEM,CAACN,EAAQC,EAAS,EAAId,EAAAA,SAMzB,CAAA,CAAE,EAEC2N,GAAgBtM,GAAmB,CACjC,KAAA,CAAE,KAAAuM,GAASvM,EAAE,OACbmG,EAAQnG,EAAE,OAAO,MACvBgL,EAAgBwB,IAAU,CACxB,GAAGA,EACH,CAACD,CAAI,EAAGpG,CAAA,EACR,CACJ,EAEM0S,EAAgBC,EAAAA,YAAY,SAAY,CAC5C9L,EAAW,EAAI,EACfC,EAAS,IAAI,EACT,GAAA,CACI,MAAAhN,EAAO,MAAMhC,EAAmB,cAAe,CACnD,OAAQ,MACR,QAAS,CAAA,CAAC,CACX,EACDma,EAAYnY,CAAI,EAChB+K,EAAe/K,CAAI,EACX,QAAA,IAAI,OAAQA,CAAY,QACzB1B,EAAO,CACd,QAAQ,IAAI,8BAA8BA,EAAM,OAAO,EAAE,EAChD0O,EAAA,8BAA8B1O,EAAM,OAAO,EAAE,CAAA,QACtD,CACAyO,EAAW,EAAK,CAAA,CAEpB,EAAG,EAAE,EAEL4E,GAAoB,IAAM,CACxB,QAAQ,IAAI,0CAA0C,EACxCiH,EAAA,CAAA,CACf,EAEK,KAAA,CAAC9R,EAAY,EAAIC,GAAY,EAEnC,cACG/F,EACC,CAAA,SAAA,CAAAhG,EAAA,IAACuH,EAAO,EAAA,QACPtB,EACC,CAAA,SAAAf,OAAC,OAAI,GAAG,eAAe,UAAU,8BAC/B,SAAA,CAAAlF,MAAC,MAAI,CAAA,UAAU,OACb,SAAAA,MAAC,KAAE,UAAU,8CACV,SACG8R,EAAA,aACA,kBAAiBoL,GAAA,YAAAA,EAAU,WAAY,MAAM,GACnD,CAAA,EACF,EAEAhY,EAAAA,KAACuB,GAAU,QAAS,IAAM,OAAO,QAAQ,OAAQ,UAAU,OACzD,SAAA,CAAAzG,EAAA,IAAC0G,EAAQ,CAAA,KAAK,QAAQ,KAAM0G,GAAkB,EAAE,MAAA,EAElD,EAEC0E,GACC5M,EAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAClF,EAAAA,IAAA0M,EAAA,CAAW,KAAK,UAAW,CAAA,EAC3B1M,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAA0B,4BAAA,CAAA,CAAA,EACnD,EAGDsD,GAAS,CAACwO,SACR,MAAI,CAAA,UAAU,gEACZ,SACHxO,EAAA,EAGD,CAACwO,GAAW,CAACxO,GAAS4Z,GAEnBhY,EAAAA,KAAAE,EAAAA,SAAA,CAAA,SAAA,CAAApF,EAAA,IAAC2b,GAAA,CACC,UAAA/L,EACA,OAAArL,EACA,aAAA8M,GACA,WAAAD,EACA,YAAAtB,EACA,SAAAoN,EACA,WAAA/L,CAAA,CACF,EACAnR,EAAA,IAAC8c,GAAA,CACC,QAAQI,GAAA,YAAAA,EAAU,eAAgB,EAClC,UAAAtN,EACA,OAAArL,EACA,aAAA8M,GACA,WAAAD,EACA,YAAAtB,EACA,SAAAoN,EACA,cAAAE,EACA,mBAAAI,EACA,kBAAAF,EACA,qBAAAC,EACA,gBAAAvO,EACA,mBAAAC,EACA,MAAAhI,EACA,SAAAC,EACA,aAAA4E,EAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,QACC1F,EAAO,CAAA,CAAA,CAAA,EACV,CAEJ,EC7KA0X,GAAgB,EAEhB,MAAMhT,GAAc,IAAIiT,GAMxB,SAASC,IAAM,CACb,aACGC,GAAoB,CAAA,OAAQnT,GAC3B,SAAC9K,MAAA+G,GAAA,CACC,gBAACkD,GACC,CAAA,SAAA,CAACjK,EAAA,IAAAke,GAAA,CAEC,gBAACC,GACC,CAAA,SAAA,CAAAjZ,OAACkZ,EAAAA,SAAS,CAAA,SAAWpe,EAAA,IAAA,MAAA,CAAI,sBAAU,EACjC,SAAA,CAAAA,EAAA,IAACuH,EAAO,EAAA,EACRrC,EAAAA,KAACmZ,GAAgB,CAAA,GAAG,eAClB,SAAA,CAAAre,MAACse,GAAM,MAAK,GAAC,KAAK,IAAI,UAAWvH,GAAO,QACvCuH,EAAM,CAAA,MAAK,GAAC,KAAK,QAAQ,UAAWtI,GAAM,QAC1CsI,EAAM,CAAA,MAAK,GAAC,KAAK,aAAa,UAAWlP,GAAa,QACtDkP,EAAM,CAAA,MAAK,GAAC,KAAK,QAAQ,UAAW/a,GAAU,QAC9C+a,EAAM,CAAA,MAAK,GAAC,KAAK,kBAAkB,UAAWpY,GAAW,EAC1DlG,EAAA,IAACse,EAAA,CACC,MAAK,GACL,KAAK,0BACL,UAAW/Y,EAAA,CACb,QACC+Y,EAAM,CAAA,MAAK,GAAC,KAAK,gBAAgB,UAAWC,GAAa,QACzDD,EAAM,CAAA,MAAK,GAAC,KAAK,gBAAgB,UAAWrB,GAAa,QACzDqB,EAAM,CAAA,MAAK,GAAC,KAAK,kBAAkB,UAAWhJ,GAAW,QACzDgJ,EAAM,CAAA,MAAK,GAAC,KAAK,cAAc,UAAW9L,GAAW,QACrD8L,EAAM,CAAA,MAAK,GAAC,KAAK,gBAAgB,UAAWzM,GAAa,EAC1D7R,EAAA,IAACse,EAAA,CACC,MAAK,GACL,KAAK,kBACL,UAAW3G,EAAA,CACb,EACA3X,EAAA,IAACse,EAAA,CACC,MAAK,GACL,KAAK,oBACL,UAAWlF,EAAA,CACb,EACApZ,EAAAA,IAACse,EAAM,CAAA,UAAWtH,EAAU,CAAA,CAAA,CAC9B,CAAA,CAAA,EACF,QACC5Q,EAAO,CAAA,CAAA,CAAA,CAAA,CACV,CACF,CAAA,QACCwC,GAAQ,EAAA,QACRC,GAAO,CAAA,CAAA,CAAA,CACV,CAAA,CACF,CAAA,EACF,CAEJ,CCjGA,MAAM2V,GAAY,SAAS,eAAe,MAAM,EAC1CC,GAAOC,GAAWF,EAAU,EAClCC,GAAK,OAAQze,EAAAA,IAAAge,GAAA,CAAI,CAAA,CAAE"}