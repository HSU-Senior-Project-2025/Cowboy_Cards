{"version":3,"file":"index-Bo5EiLIW.js","sources":["../../src/lib/utils.ts","../../src/components/ui/card.tsx","../../src/components/ui/input.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/components/auth/AuthForm.tsx","../../src/components/auth/ResetPass.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/tooltip.tsx","../../src/contexts/ThemeContext.tsx","../../src/utils/makeHttpCall.ts","../../src/components/flashcards/FlashCard.tsx","../../src/components/flashcards/FlashcardCarousel.tsx","../../src/components/footer.tsx","../../src/components/navbar.tsx","../../src/components/ui/Leaderboard.tsx","../../src/components/ui/StudentList.tsx","../../src/pages/ClassDetail.tsx","../../src/pages/CreateClass.tsx","../../src/pages/CreateSet.tsx","../../src/pages/Flashcard.tsx","../../src/pages/Home.tsx","../../src/pages/Index.tsx","../../src/pages/NotFound.tsx","../../src/pages/PublicCards.tsx","../../src/pages/PublicClasses.tsx","../../src/pages/SetOverview.tsx","../../src/pages/TeacherDashboard.tsx","../../src/components/EditableField.tsx","../../src/components/InfoRow.tsx","../../src/components/UserAccountFirstRow.tsx","../../src/components/UserAccountSecondRow.tsx","../../src/pages/UserAccount.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from 'react';\n\nimport type { ToastActionElement, ToastProps } from '@/components/ui/toast';\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: 'ADD_TOAST',\n  UPDATE_TOAST: 'UPDATE_TOAST',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  REMOVE_TOAST: 'REMOVE_TOAST',\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType['ADD_TOAST'];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType['UPDATE_TOAST'];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType['DISMISS_TOAST'];\n      toastId?: ToasterToast['id'];\n    }\n  | {\n      type: ActionType['REMOVE_TOAST'];\n      toastId?: ToasterToast['id'];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: 'REMOVE_TOAST',\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case 'UPDATE_TOAST':\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case 'DISMISS_TOAST': {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case 'REMOVE_TOAST':\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, 'id'>;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: 'UPDATE_TOAST',\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });\n\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\n  };\n}\n\nexport { toast, useToast };\n","import { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/components/ui/use-toast';\nimport { IonButton, IonIcon, useIonRouter } from '@ionic/react';\nimport { AlertCircle, LogIn } from 'lucide-react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nexport const AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Login form fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Additional signup form fields\n  const [username, setUsername] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  // Form validation\n  const [errors, setErrors] = useState<{\n    email?: string;\n    username?: string;\n    password?: string;\n    general?: string;\n  }>({});\n\n  const ionRouter = useIonRouter();\n  const { toast } = useToast();\n\n  // Basic validation before submitting\n  const validateForm = () => {\n    const newErrors: {\n      email?: string;\n      username?: string;\n      password?: string;\n    } = {};\n    let isValid = true;\n\n    // Email validation\n    if (!email) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Email is invalid';\n      isValid = false;\n    }\n\n    // Password validation\n    if (!password) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n\n    // Username validation (only for signup)\n    if (!isLogin && !username) {\n      newErrors.username = 'Username is required';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      let response;\n\n      if (isLogin) {\n        // Login request\n        response = await fetch(`${API_BASE}/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        });\n      } else {\n        // Signup request\n        response = await fetch(`${API_BASE}/signup`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            username,\n            email,\n            password,\n            first_name: firstName,\n            last_name: lastName,\n          }),\n        });\n      }\n\n      if (!response.ok) {\n        const errorData = await response.json();\n\n        // Handle specific error types\n        if (errorData.code === 'duplicate_email') {\n          setErrors({ email: 'This email is already registered' });\n          throw new Error('This email is already registered');\n        } else if (errorData.code === 'duplicate_username') {\n          setErrors({ username: 'This username is already taken' });\n          throw new Error('This username is already taken');\n        } else if (errorData.code === 'invalid_credentials') {\n          setErrors({ general: 'Invalid email or password' });\n          throw new Error('Invalid email or password');\n        } else {\n          throw new Error(errorData.message || 'Authentication failed');\n        }\n      }\n\n      const data = await response.json();\n\n      // Show success message\n      toast({\n        title: isLogin ? 'Welcome back!' : 'Account created',\n        description: isLogin\n          ? 'You have been successfully logged in.'\n          : 'Your account has been created successfully.',\n      });\n\n      // Navigate to the home page using Ionic's router\n      ionRouter.push('/home');\n    } catch (error) {\n      console.error('Authentication error:', error);\n\n      // If no specific error was set, set a general error\n      if (Object.keys(errors).length === 0) {\n        setErrors({\n          general:\n            error.message || 'An unexpected error occurred. Please try again.',\n        });\n      }\n\n      toast({\n        title: 'Authentication failed',\n        description:\n          error.message || 'Please check your credentials and try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setErrors({});\n    if (isLogin) {\n      setUsername('');\n      setFirstName('');\n      setLastName('');\n    } else {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>{isLogin ? 'Welcome back' : 'Create account'}</CardTitle>\n        <CardDescription>\n          {isLogin\n            ? 'Enter your credentials to continue'\n            : 'Sign up for a new account'}\n        </CardDescription>\n      </CardHeader>\n      <form onSubmit={handleSubmit}>\n        <CardContent className=\"space-y-4\">\n          {errors.general && (\n            <Alert variant=\"destructive\" className=\"mb-4\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{errors.general}</AlertDescription>\n            </Alert>\n          )}\n\n          {!isLogin && (\n            <>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  id=\"username\"\n                  type=\"text\"\n                  placeholder=\"johndoe\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                  className={errors.username ? 'border-red-500' : ''}\n                />\n                {errors.username && (\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.username}</p>\n                )}\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <Input\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"John\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <Input\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Doe\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </div>\n            </>\n          )}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"name@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className={errors.email ? 'border-red-500' : ''}\n            />\n            {errors.email && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>\n            )}\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className={errors.password ? 'border-red-500' : ''}\n            />\n            {errors.password && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>\n            )}\n            {!isLogin && (\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Password must be at least 8 characters long\n              </p>\n            )}\n          </div>\n          {isLogin && (\n            <Link to=\"/reset-password\" className=\"text-sm text-purple-500\">\n              Forgot password?\n            </Link>\n          )}\n        </CardContent>\n        <CardFooter className=\"flex flex-col space-y-4\">\n          <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n            <LogIn className=\"mr-2 h-4 w-4\" />\n            {isLoading\n              ? isLogin\n                ? 'Signing in...'\n                : 'Signing up...'\n              : isLogin\n              ? 'Sign in'\n              : 'Sign up'}\n          </Button>\n          <Button\n            variant=\"link\"\n            type=\"button\"\n            onClick={() => {\n              setIsLogin(!isLogin);\n              resetForm();\n            }}\n            className=\"text-sm\"\n            disabled={isLoading}\n          >\n            {isLogin\n              ? 'Need an account? Sign up'\n              : 'Already have an account? Sign in'}\n          </Button>\n          <IonButton\n            expand=\"block\"\n            fill=\"outline\"\n            className=\"flex items-center justify-center space-x-2\"\n            onClick={() => {\n              // Add your Google sign-in logic here\n              console.log('Sign in with Google clicked');\n            }}\n          >\n            <IonIcon\n              slot=\"start\"\n              src=\"https://www.gstatic.com/marketing-cms/assets/images/d5/dc/cfe9ce8b4425b410b49b7f2dd3f3/g.webp=s96-fcrop64=1,00000000ffffffff-rw\"\n              className=\"h-5 w-5\"\n            />\n            <p></p>\n            Sign in with Google\n            <img\n              slot=\"start\"\n              src=\"https://www.gstatic.com/marketing-cms/assets/images/d5/dc/cfe9ce8b4425b410b49b7f2dd3f3/g.webp=s96-fcrop64=1,00000000ffffffff-rw\"\n              className=\"h-10 w-10\"\n            />\n          </IonButton>\n        </CardFooter>\n      </form>\n    </Card>\n  );\n};\n","import { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { AlertCircle } from 'lucide-react';\nimport { useState } from 'react';\n\nconst ResetPass = () => {\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState<{ email?: string; general?: string }>(\n    {}\n  );\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Placeholder for form submission logic\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <Card className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>Reset Password</CardTitle>\n          <CardDescription>\n            Enter your email to reset your password\n          </CardDescription>\n        </CardHeader>\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-4\">\n            {errors.general && (\n              <Alert variant=\"destructive\" className=\"mb-4\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertDescription>{errors.general}</AlertDescription>\n              </Alert>\n            )}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"name@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                className={errors.email ? 'border-red-500' : ''}\n              />\n              {errors.email && (\n                <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <Button type=\"submit\" className=\"w-full\">\n              Send Reset Link\n            </Button>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default ResetPass;\n","import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    // Check localStorage first\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) return savedTheme;\n\n    // Fall back to system preference\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n  });\n\n  useEffect(() => {\n    // Update localStorage\n    localStorage.setItem('theme', theme);\n\n    // Update DOM\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n      document.body.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      document.body.classList.remove('dark');\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\ntype CredentialOptions = 'include' | 'omit' | 'same-origin';\n\n// Interface defining the structure of options that can be passed to fetch requests\ninterface FetchOptions {\n  method: HttpMethod;\n  headers: any;\n  credentials?: CredentialOptions;\n}\n\nconst defaultOpts: FetchOptions = {\n  method: 'GET',\n  headers: {},\n  credentials: 'include', //dev only\n};\n\n/**\n * Universal fetch utility for making HTTP requests\n * This is a wrapper around the native fetch API that provides consistent error handling\n * and response parsing\n * Can return any type of data\n *\n * @param url The URL to fetch from\n * @param options Request options including method, headers, and body\n * @returns Promise with the parsed response data\n */\nexport async function makeHttpCall<T>(\n  url: string = '',\n  options: FetchOptions = defaultOpts\n): Promise<T> {\n  const finalOpts = {\n    ...defaultOpts,\n    ...options,\n  };\n  try {\n    // Make the actual HTTP request\n    const response = await fetch(url, finalOpts);\n\n    // Check if the response was successful (status 200-299)\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    // all responses should be json now\n    const data = await response.json();\n    return data as T;\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n}\n","import { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport { Check, X } from 'lucide-react';\nimport { useState } from 'react';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\ninterface FlashCardProps {\n  front: string;\n  back: string;\n  onAdvance?: () => void;\n  cardId: number;\n  userId: number;\n}\n\nexport const FlashCard = ({\n  front,\n  back,\n  onAdvance,\n  cardId,\n  userId,\n}: FlashCardProps) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleScoreUpdate = async (endpoint: string) => {\n    try {\n      const result = await makeHttpCall(`${API_BASE}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          user_id: userId.toString(),\n          card_id: cardId.toString(),\n        },\n      });\n      console.log(`Score update successful for card ${cardId}:`, result);\n      onAdvance?.(); // Advance card after successful API call\n    } catch (error) {\n      console.error(`Failed to update score for card ${cardId}:`, error);\n      // Optionally handle the error, e.g., show a notification\n      // Decide if you still want to advance the card on error\n      // onAdvance?.();\n    }\n  };\n\n  const handleLearningClick = () => {\n    handleScoreUpdate('/api/card_history/incorrect');\n  };\n\n  const handleMasteredClick = () => {\n    handleScoreUpdate('/api/card_history/correct');\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      <div\n        className={`flip-card cursor-pointer ${isFlipped ? 'flipped' : ''}`}\n        onClick={() => setIsFlipped(!isFlipped)}\n      >\n        <Card className=\"flip-card-front p-8 min-h-[300px] flex items-center justify-center text-center\">\n          <p className=\"text-xl\">{front}</p>\n        </Card>\n        <Card className=\"flip-card-back p-8 min-h-[300px] flex items-center justify-center text-center absolute top-0 w-full\">\n          <p className=\"text-xl\">{back}</p>\n        </Card>\n      </div>\n\n      <div className=\"flex justify-center gap-4 mt-6\">\n        <Button\n          variant=\"outline\"\n          className=\"w-32\"\n          onClick={handleLearningClick}\n        >\n          <X className=\"mr-2 h-4 w-4\" />\n          Learning\n        </Button>\n        <Button className=\"w-32\" onClick={handleMasteredClick}>\n          <Check className=\"mr-2 h-4 w-4\" />\n          Mastered\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonCol,\n  IonGrid,\n  IonIcon,\n  IonRow,\n} from '@ionic/react';\nimport { arrowBackOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from '../ui/carousel';\nimport { FlashCard } from './FlashCard';\nimport { useHistory } from 'react-router-dom';\n\ntype Flashcards = {\n  ID: number;\n  Front: string;\n  Back: string;\n  SetID: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\n// We probably should make the flashcards have an independent page, so we can show loading states and errors\nconst FlashcardCarousel = (props) => {\n  const history = useHistory();\n  const [flashcards, setFlashcards] = useState<Flashcards[]>([]);\n  const [selectedSet, setSelectedSet] = useState<number | null>(null);\n\n  useEffect(() => {\n    async function fetchFlashcards() {\n      console.log('selectedSet', selectedSet);\n      const cards = await makeHttpCall<Flashcards[]>(\n        `${API_BASE}/api/flashcards/list`,\n        {\n          method: 'GET',\n          headers: {\n            set_id: selectedSet,\n          },\n        }\n      );\n      console.log('cards', cards);\n      setFlashcards(cards);\n    }\n    if (selectedSet) {\n      fetchFlashcards();\n    }\n  }, [selectedSet]);\n\n  return (\n    <div className='mt-6'>\n      {selectedSet === null ? (\n        <IonGrid>\n          <IonRow>\n            {props.flashcardSets\n              .sort((a, b) => a.ID - b.ID)\n              .map((set) => (\n                <IonCol size='12' sizeMd='6' sizeLg='4' key={set.ID}>\n                  <IonCard\n                    className='cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-all duration-200 rounded-lg border shadow-sm'\n                    onClick={() => history.push(`/set-overview/${set.ID}`)}\n                  >\n                    <IonCardHeader>\n                      <IonCardTitle className='text-lg font-semibold'>\n                        {set.SetName}\n                      </IonCardTitle>\n                    </IonCardHeader>\n                    <IonCardContent>\n                      <p className='text-muted-foreground mb-2'>\n                        {set.SetDescription}\n                      </p>\n                      {/* <p className=\"text-muted-foreground\">\n                                            {set.cards.length} cards\n                                        </p> */}\n                    </IonCardContent>\n                  </IonCard>\n                </IonCol>\n              ))}\n          </IonRow>\n        </IonGrid>\n      ) : (\n        <>\n          <IonButton\n            fill='outline'\n            onClick={() => setSelectedSet(null)}\n            className='mb-6'\n          >\n            <IonIcon slot='start' icon={arrowBackOutline} />\n            Back to Sets\n          </IonButton>\n          <div className='w-full max-w-2xl mx-auto relative'>\n            <Carousel\n              orientation='vertical'\n              className='w-full'\n              setApi={props.setApi}\n            >\n              <CarouselContent className='-mt-1 h-[400px]'>\n                {flashcards.map((card) => (\n                  <CarouselItem key={card.ID}>\n                    <FlashCard\n                      front={card.Front}\n                      back={card.Back}\n                      cardId={card.ID}\n                      userId={1}\n                    />\n                  </CarouselItem>\n                ))}\n              </CarouselContent>\n              <CarouselPrevious />\n              <CarouselNext />\n            </Carousel>\n\n            <div className='absolute right-[-50px] top-1/2 transform -translate-y-1/2 flex flex-col gap-2'>\n              {flashcards.map((_, index) => (\n                <div\n                  key={index}\n                  className={`w-2 h-2 rounded-full transition-colors ${\n                    index === props.currentCardIndex\n                      ? 'bg-primary'\n                      : 'bg-gray-300'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FlashcardCarousel;\n","import React from 'react';\nimport { home, settings, addCircle } from 'ionicons/icons';\nimport {\n    IonFooter,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonIcon,\n    IonText,\n} from '@ionic/react';\n\nconst Footer = () => {\n    return (\n        <IonFooter>\n            <IonToolbar>\n                {/* Home Button */}\n                <IonButtons slot=\"start\">\n                    <IonButton routerLink=\"/home\">\n                        <IonIcon icon={home} />\n                    </IonButton>\n                </IonButtons>\n\n                {/*/!* Add Button *!/*/}\n                {/*<IonButtons slot=\"primary\">*/}\n                {/*    <IonButton expand=\"full\" routerLink=\"/create\">*/}\n                {/*        <IonIcon icon={addCircle} />*/}\n                {/*    </IonButton>*/}\n                {/*</IonButtons>*/}\n\n                {/*/!* Settings Button *!/*/}\n                {/*<IonButtons slot=\"end\">*/}\n                {/*    <IonButton routerLink=\"/settings\">*/}\n                {/*        <IonIcon icon={settings} />*/}\n                {/*    </IonButton>*/}\n                {/*</IonButtons>*/}\n\n                {/* About Section */}\n                <IonText className=\"mx-auto text-center text-sm text-gray-500\">\n                    Cowboy Cards 2025. Built for learning and fun.\n                </IonText>\n            </IonToolbar>\n        </IonFooter>\n    );\n};\n\nexport { Footer };\n","import { useTheme } from '@/contexts/ThemeContext';\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonList,\n  IonMenu,\n  IonMenuToggle,\n  IonPopover,\n  IonTitle,\n  IonToolbar,\n  useIonRouter,\n} from '@ionic/react';\nimport { add, close, menu, moon, personCircle, sunny } from 'ionicons/icons';\nimport { useState } from 'react';\n\nconst Navbar = () => {\n  const [popoverEvent, setPopoverEvent] = useState(null);\n\n  const openPopover = (event) => setPopoverEvent(event.nativeEvent);\n  const closePopover = () => setPopoverEvent(null);\n\n  const handleMenuItemClick = (route) => {\n    router.push(route);\n    document.querySelector('ion-menu')?.close();\n  };\n\n  const router = useIonRouter();\n  const { theme, setTheme } = useTheme();\n\n  // Function to toggle dark mode\n  const toggleDarkMode = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  return (\n    <>\n      {/* Sidebar Navigation (IonMenu) */}\n      <IonMenu side=\"start\" contentId=\"main-content\">\n        <IonHeader>\n          <IonToolbar>\n            {/* Close icon will automatically show when the menu is open */}\n            <IonButtons slot=\"start\">\n              <IonMenuToggle>\n                <IonButton>\n                  <IonIcon icon={close} />\n                </IonButton>\n              </IonMenuToggle>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonList>\n            <IonItem button onClick={() => handleMenuItemClick('/home')}>\n              My Dashboard\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/public-cards')}\n            >\n              Public Cards\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/public-classes')}\n            >\n              Public Classes\n            </IonItem>\n            <IonItem\n              button\n              onClick={() => handleMenuItemClick('/user-account')}\n            >\n              My Account\n            </IonItem>\n          </IonList>\n        </IonContent>\n      </IonMenu>\n\n      {/* Navbar */}\n      <IonHeader>\n        <IonToolbar>\n          {/* Left Side (Menu Button) */}\n          <IonButtons slot=\"start\">\n            {/* Left Side (Menu Button - FIXED) */}\n            <IonMenuToggle>\n              <IonButton>\n                <IonIcon icon={menu} />\n              </IonButton>\n            </IonMenuToggle>\n          </IonButtons>\n\n          {/* Middle Section (Title / Children) */}\n          <IonTitle\n            color=\"primary\"\n            className=\"text-lg md:text-xl lg:text-2xl font-bold hover:translate-x-1 transition-all duration-300 cursor-pointer\"\n            onClick={() => router.push('/home')}\n          >\n            Cowboy Cards\n          </IonTitle>\n\n          {/* Theme Toggle Button */}\n          <IonButtons slot=\"end\">\n            <IonButton onClick={openPopover}>\n              <IonIcon icon={add} className=\"text-[32px] stroke-[2]\" />\n            </IonButton>\n            {/* Popover for Create Options */}\n            <IonPopover\n              event={popoverEvent}\n              isOpen={!!popoverEvent}\n              onDidDismiss={closePopover}\n            >\n              <IonContent className=\"p-2\">\n                <IonList>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      router.push('/create-set');\n                    }}\n                  >\n                    Create Set\n                  </IonItem>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      router.push('/class/create');\n                    }}\n                  >\n                    Create Class\n                  </IonItem>\n                  <IonItem\n                    button\n                    onClick={() => {\n                      closePopover();\n                      router.push('/public-classes');\n                    }}\n                  >\n                    Join Class\n                  </IonItem>\n                </IonList>\n              </IonContent>\n            </IonPopover>\n            <IonButton fill=\"clear\" onClick={toggleDarkMode}>\n              <IonIcon\n                slot=\"icon-only\"\n                icon={theme === 'dark' ? sunny : moon}\n              />\n            </IonButton>\n          </IonButtons>\n\n          {/* Profile Icon */}\n          <IonButtons slot=\"end\">\n            <IonButton routerLink=\"/user-account\">\n              <IonIcon icon={personCircle} size=\"large\" />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n    </>\n  );\n};\n\nexport { Navbar };\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonItem,\n  IonList,\n} from '@ionic/react';\n\ntype LeaderboardEntry = {\n  name: string;\n  totalScore: number;\n};\n\ntype LeaderboardProps = {\n  leaderboard: LeaderboardEntry[];\n  classUsers: any[];\n};\n\nconst Leaderboard = ({ leaderboard, classUsers }: LeaderboardProps) => {\n  return (\n    <IonCard className='rounded-lg border shadow-sm'>\n      <IonCardHeader>\n        <IonCardTitle className='text-xl font-semibold'>\n          Class Leaderboard\n        </IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList className='space-y-3' lines='none'>\n          {leaderboard.map((entry, index) => (\n            <IonItem key={index} className='muted-item p-3'>\n              <div className='flex items-center gap-3'>\n                <span className='font-medium text-lg'>{index + 1}</span>\n                <span className='font-medium'>{entry.name}</span>\n              </div>\n              <span slot='end' className='text-primary font-semibold'>\n                {entry.totalScore} points\n              </span>\n            </IonItem>\n          ))}\n        </IonList>\n      </IonCardContent>\n    </IonCard>\n  );\n};\n\nexport default Leaderboard;\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonIcon,\n  IonItem,\n  IonList,\n} from '@ionic/react';\n\nimport { trashOutline } from 'ionicons/icons';\n\nconst StudentList = ({ students, isTeacher, onDeleteStudent }) => {\n  return (\n    <IonCard className=\"mt-6\">\n      <IonCardHeader>\n        <IonCardTitle className=\"text-xl font-semibold\">\n          Class Students\n        </IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList className=\"space-y-3\" lines=\"none\">\n          {students.map((student) => (\n            <IonItem key={student.id} className=\"muted-item p-3\">\n              <span className=\"font-medium\">{student.FirstName} {student.LastName}</span>\n              <span slot=\"end\" className=\"text-muted-foreground\">\n                {student.email}\n              </span>\n              {isTeacher && (\n                <IonIcon\n                  slot=\"end\"\n                  icon={trashOutline}\n                  color=\"danger\"\n                  className=\"cursor-pointer\"\n                  onClick={() => onDeleteStudent(student.id)}\n                />\n              )}\n            </IonItem>\n          ))}\n        </IonList>\n      </IonCardContent>\n    </IonCard>\n  );\n};\n\nexport default StudentList;\n","import FlashcardCarousel from '@/components/flashcards/FlashcardCarousel';\nimport { Footer } from '@/components/footer';\nimport { Navbar } from '@/components/navbar';\nimport { type CarouselApi } from '@/components/ui/carousel';\nimport Leaderboard from '@/components/ui/Leaderboard';\nimport StudentList from '@/components/ui/StudentList';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonAlert,\n  IonButton,\n  IonCardContent,\n  IonContent,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonSegment,\n  IonSegmentButton,\n  IonSpinner,\n} from '@ionic/react';\nimport {\n  arrowBackOutline,\n  bookOutline,\n  createOutline,\n  peopleOutline,\n  trophyOutline,\n} from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\ntype Class = {\n  ID: number;\n  ClassName: string;\n  ClassDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n  Role: string;\n};\n\ntype FlashcardSet = {\n  ID: number;\n  SetName: string;\n  SetDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\ntype ClassUser = {\n  UserID: number;\n  ClassID: number;\n  Role: string;\n  FirstName: string;\n  LastName: string;\n};\n\ntype SetScore = {\n  SetName: string;\n  Correct: number;\n  Incorrect: number;\n  NetScore: number;\n  TimesAttempted: number;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nconst ClassDetail = () => {\n  const { id } = useParams();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [carouselApi, setCarouselApi] = useState<CarouselApi>();\n  const [tab, setTab] = useState('flashcards');\n  const [isTeacher, setIsTeacher] = useState(true);\n  const [classData, setClassData] = useState<Class>();\n  const [flashcardSets, setFlashcardSets] = useState<FlashcardSet[]>([]);\n  const [classUsers, setClassUsers] = useState<ClassUser[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [leaderboardData, setLeaderboardData] = useState<\n    Array<{ name: string; totalScore: number }>\n  >([]);\n  const [loadingScores, setLoadingScores] = useState(false);\n\n  // Update Class Name and Description Form\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState({\n    class_name: '',\n    class_description: '',\n  });\n\n  const handleEdit = () => {\n    console.log('Handling Edit');\n    setUpdatedInfo({\n      class_name: classData?.ClassName || '',\n      class_description: classData?.ClassDescription || '',\n    });\n    setIsEditing(true);\n  };\n\n  // Form validation\n  const [errors, setErrors] = useState<{\n    className?: string;\n    classDescription?: string;\n    general?: string;\n  }>({});\n\n  // Basic validation before submitting\n  const validateForm = () => {\n    const newErrors: {\n      className?: string;\n      classDescription?: string;\n    } = {};\n    let isValid = true;\n\n    // Trim whitespace from the input values\n    updatedInfo.class_name = updatedInfo.class_name.trim();\n    updatedInfo.class_description = updatedInfo.class_description.trim();\n\n    if (!updatedInfo.class_name) {\n      newErrors.className = 'Class name is required';\n      isValid = false;\n    }\n\n    if (!updatedInfo.class_description) {\n      newErrors.classDescription = 'Class description is required';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSave = async () => {\n    // Validate form before submission\n    if (!validateForm()) {\n      console.log('Form validation failed:', errors);\n      return;\n    }\n    // Define the fields to be updated\n    const fieldsToUpdate = ['class_name', 'class_description'];\n\n    // NOT WORKING YET\n\n    try {\n      // Identify which fields have changed and create API call promises\n      const updatePromises = fieldsToUpdate\n        // .filter((field) => updatedInfo[field] !== classData[field]) // Only include modified fields\n        .map((field) =>\n          makeHttpCall<Class>(`${API_BASE}/api/classes/${field}`, {\n            method: 'PUT',\n            headers: {\n              id: id, // User ID as a string\n              [field]: updatedInfo[field], // New value for the field\n            },\n          })\n        );\n\n      // Wait for all API calls to complete successfully\n      await Promise.all(updatePromises);\n      // If all updates succeed, update the local state and exit editing mode\n      setClassData((prev) => ({\n        ...prev,\n        ClassName: updatedInfo.class_name,\n        ClassDescription: updatedInfo.class_description,\n      }));\n      setIsEditing(false);\n    } catch (error) {\n      // Log the error and notify the user if any update fails\n      console.error(error);\n      alert('Failed to update some fields. Please try again.');\n    }\n  };\n\n  const handleChange = (e: any) => {\n    const { name } = e.target;\n    const value = e.detail.value;\n    setUpdatedInfo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    async function fetchClass() {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await makeHttpCall<Class>(`${API_BASE}/api/classes/`, {\n          method: 'GET',\n          headers: {\n            id: id,\n          },\n        });\n        console.log('data', data);\n        setClassData(data);\n      } catch (error) {\n        setError(`Error fetching class: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    async function fetchFlashcardSets() {\n      const sets = await makeHttpCall<FlashcardSet[]>(\n        `${API_BASE}/api/class_set/list_sets`,\n        {\n          method: 'GET',\n          headers: {\n            class_id: id,\n          },\n        }\n      );\n      console.log('sets', sets);\n      setFlashcardSets(sets);\n    }\n\n    async function fetchClassUsers() {\n      const users = await makeHttpCall<ClassUser[]>(\n        `${API_BASE}/api/class_user/members`,\n        {\n          method: 'GET',\n          headers: {\n            class_id: id,\n          },\n        }\n      );\n      console.log('users', users);\n      setClassUsers(users);\n    }\n    fetchClass();\n    fetchFlashcardSets();\n    fetchClassUsers();\n  }, [id]);\n\n  // New useEffect for score calculation\n  useEffect(() => {\n    async function calculateLeaderboardScores() {\n      if (!classUsers.length || !flashcardSets.length) return;\n\n      setLoadingScores(true);\n      setError(null);\n      const userScores = new Map<number, number>();\n\n      try {\n        // Process all users concurrently\n        await Promise.all(\n          classUsers.map(async (user) => {\n            try {\n              // Fetch scores for all sets concurrently for this user\n              const setScores = await Promise.all(\n                flashcardSets.map(async (set) => {\n                  try {\n                    const setScoresResponse = await makeHttpCall<SetScore[]>(\n                      `${API_BASE}/api/card_history/set`,\n                      {\n                        method: 'GET',\n                        headers: {\n                          user_id: user.UserID.toString(),\n                          set_id: set.ID.toString(),\n                        },\n                      }\n                    );\n\n                    // Calculate total NetScore for this set\n                    if (Array.isArray(setScoresResponse)) {\n                      return setScoresResponse.reduce(\n                        (sum, score) => sum + (score.NetScore || 0),\n                        0\n                      );\n                    }\n                    return 0;\n                  } catch (error) {\n                    console.error(\n                      `Error fetching scores for set ${set.ID}:`,\n                      error\n                    );\n                    return 0;\n                  }\n                })\n              );\n\n              // Sum up all set scores for this user\n              const totalUserScore = setScores.reduce(\n                (sum, score) => sum + score,\n                0\n              );\n              userScores.set(user.UserID, totalUserScore);\n            } catch (error) {\n              console.error(`Error processing user ${user.UserID}:`, error);\n              userScores.set(user.UserID, 0);\n            }\n          })\n        );\n\n        // Create and sort final leaderboard data\n        const finalLeaderboard = classUsers\n          .map((user) => ({\n            name: `${user.FirstName} ${user.LastName}`,\n            totalScore: userScores.get(user.UserID) || 0,\n          }))\n          .sort((a, b) => b.totalScore - a.totalScore);\n\n        setLeaderboardData(finalLeaderboard);\n      } catch (error) {\n        setError('Error calculating leaderboard scores');\n        console.error('Leaderboard calculation error:', error);\n      } finally {\n        setLoadingScores(false);\n      }\n    }\n\n    calculateLeaderboardScores();\n  }, [classUsers, flashcardSets]);\n\n  // TODO: get the user role from the backend, this code is currently not functional\n  // need a way to get the user role from the backend, maybe through auth, RLS, or a query\n  // useEffect(() => {\n  //   async function fetchUser() {\n  //     const user = await api.get<User>(\n  //       `${API_BASE}/api/class_user/`,\n  //       {\n  //         headers: {\n  //           user_id: id,\n  //         },\n  //       }\n  //     );\n  //     if (user.role === 'teacher') {\n  //       setIsTeacher(true);\n  //     }\n  //   }\n  //   fetchUser();\n  // }, []);\n\n  // Should hold the id of the student to be deleted and the state of the alert\n  const [showDeleteAlert, setShowDeleteAlert] = useState({\n    isOpen: false,\n    studentId: null,\n  });\n\n  const showDeleteStudentAlert = (studentId) => {\n    setShowDeleteAlert((prev) => ({\n      ...prev,\n      isOpen: true,\n      studentId: studentId,\n    }));\n  };\n\n  // Handler to delete a student\n  const handleDeleteStudent = (studentId) => {\n    try {\n      makeHttpCall(`${API_BASE}/api/class_user/`, {\n        method: 'DELETE',\n        headers: {\n          class_id: id,\n          user_id: studentId,\n        },\n      });\n    } catch (error) {\n      console.error('Error deleting student:', error);\n      setError('Error deleting student');\n    }\n  };\n\n  useEffect(() => {\n    if (!carouselApi) {\n      return;\n    }\n\n    carouselApi.on('select', () => {\n      setCurrentCardIndex(carouselApi.selectedScrollSnap());\n    });\n  }, [carouselApi]);\n\n  return (\n    <IonContent className=\"ion-padding\">\n      <Navbar />\n\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n\n        {isEditing ? (\n          <IonCardContent className=\"p-6 pt-0\">\n            <h1 className=\"text-3xl font-bold mb-2\">\n              Update Class Information\n            </h1>\n            <div className=\"space-y-4\">\n              <IonItem>\n                <IonLabel position=\"stacked\">Class Name</IonLabel>\n                <IonInput\n                  type=\"text\"\n                  name=\"class_name\"\n                  placeholder=\"Enter class name\"\n                  value={updatedInfo?.class_name}\n                  onIonChange={handleChange}\n                />\n              </IonItem>\n              {errors.className && (\n                <p className=\"text-red-500 text-xs mt-1\">{errors.className}</p>\n              )}\n              <IonItem>\n                <IonLabel position=\"stacked\">Class Description</IonLabel>\n                <IonInput\n                  type=\"text\"\n                  name=\"class_description\"\n                  placeholder=\"Enter class description\"\n                  value={updatedInfo?.class_description}\n                  onIonChange={handleChange}\n                />\n              </IonItem>\n              {errors.classDescription && (\n                <p className=\"text-red-500 text-xs mt-1\">\n                  {errors.classDescription}\n                </p>\n              )}\n              <div className=\"flex justify-end\">\n                <IonButton\n                  onClick={handleCancel}\n                  fill=\"outline\"\n                  className=\"mr-2\"\n                >\n                  Cancel\n                </IonButton>\n                <IonButton onClick={handleSave} fill=\"solid\" color=\"primary\">\n                  Save\n                </IonButton>\n              </div>\n            </div>\n          </IonCardContent>\n        ) : (\n          <div className=\"flex justify-between items-center\">\n            <div className=\"mb-8\">\n              <h1 className=\"text-3xl font-bold mb-2\">\n                {loading ? 'Loading...' : classData?.ClassName}\n              </h1>\n              <p className=\"text-gray-600\">\n                {loading ? 'Loading...' : classData?.ClassDescription}\n              </p>\n              {isTeacher && (\n                <IonIcon\n                  icon={createOutline}\n                  size=\"large\"\n                  color=\"primary\"\n                  className=\"hover:transform hover:scale-110 cursor-pointer p-2\"\n                  onClick={handleEdit}\n                ></IonIcon>\n              )}\n            </div>\n            {isTeacher && (\n              //  TODO: create-set isn't accepting the class ID right now, will be necessary for making a set for a specific class\n              <div className=\"mb-8\">\n                <IonButton\n                  routerLink={`/create-set`}\n                  fill=\"solid\"\n                  color=\"primary\"\n                >\n                  Create Flashcard Set\n                </IonButton>\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"flex flex-row justify-between mb-6\">\n          <IonButton onClick={() => window.history.back()} fill=\"outline\">\n            <IonIcon slot=\"start\" icon={arrowBackOutline} />\n            Back\n          </IonButton>\n          {/* TODO: should only show for teachers */}\n        </div>\n\n        <IonSegment\n          value={tab}\n          onIonChange={(e) => setTab(e.detail.value as string)}\n          className=\"w-full mb-6\"\n        >\n          <IonSegmentButton value=\"flashcards\">\n            <IonIcon icon={bookOutline} className=\"mr-2\" />\n            <IonLabel>Flashcard Sets</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"leaderboard\">\n            <IonIcon icon={trophyOutline} className=\"mr-2\" />\n            <IonLabel>Leaderboard</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"students\">\n            <IonIcon icon={peopleOutline} className=\"mr-2\" />\n            <IonLabel>Students</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {tab === 'leaderboard' && (\n          <>\n            {loadingScores ? (\n              <div className=\"flex justify-center items-center p-8\">\n                <IonSpinner name=\"circular\" />\n                <span className=\"ml-2\">Calculating scores...</span>\n              </div>\n            ) : (\n              <Leaderboard\n                leaderboard={leaderboardData}\n                classUsers={classUsers}\n              />\n            )}\n          </>\n        )}\n\n        {tab === 'flashcards' && (\n          <FlashcardCarousel\n            flashcardSets={flashcardSets}\n            currentCardIndex={currentCardIndex}\n            setApi={setCarouselApi}\n          />\n        )}\n\n        {tab === 'students' && (\n          <div className=\"flex flex-col\">\n            <StudentList\n              isTeacher={isTeacher}\n              students={classUsers}\n              onDeleteStudent={showDeleteStudentAlert}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Delete Account Alert */}\n      <IonAlert\n        isOpen={showDeleteAlert.isOpen}\n        onDidDismiss={() =>\n          setShowDeleteAlert((prev) => ({\n            ...prev,\n            isOpen: false,\n            studentId: null,\n          }))\n        }\n        header=\"Confirm Deletion\"\n        message=\"Are you sure you want to delete this Student? This action cannot be undone.\"\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n              setShowDeleteAlert((prev) => ({\n                ...prev,\n                isOpen: false,\n                studentId: null,\n              }));\n            },\n          },\n          {\n            text: 'Delete',\n            handler: () => {\n              // Add your delete account logic here\n              handleDeleteStudent(showDeleteAlert.studentId);\n              setShowDeleteAlert((prev) => ({\n                ...prev,\n                isOpen: false,\n                studentId: null,\n              }));\n              console.log('Account deleted');\n            },\n          },\n        ]}\n      />\n      <Footer />\n    </IonContent>\n  );\n};\n\nexport default ClassDetail;\n","import { Navbar } from '@/components/navbar';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonText,\n  IonTextarea,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\n\ntype Class = {\n  ID: number;\n  ClassName: string;\n  ClassDescription: string;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nconst CreateClass = () => {\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [formData, setFormData] = useState({\n    className: '',\n    description: '',\n  });\n  const [showSuccess, setShowSuccess] = useState(false);\n  // const [isPrivate, setIsPrivate] = useState(false);\n  // const [textToCopy, setTextToCopy] = useState('This is the text to be copied');\n  // const [showToast, setShowToast] = useState(false);\n  // const [showSuccess, setShowSuccess] = useState(false);\n\n  // const copyToClipboard = async () => {\n  //   try {\n  //     await navigator.clipboard.writeText(textToCopy);\n  //     setShowToast(true);\n  //   } catch (err) {\n  //     console.error('Failed to copy text', err);\n  //   }\n  // };\n\n  useEffect(() => {\n    async function submitForm() {\n      if (!buttonClicked) return;\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const data = await makeHttpCall<Class>(`${API_BASE}/api/classes`, {\n          method: 'POST',\n          headers: {\n            class_name: formData.className,\n            class_description: formData.description,\n          },\n        });\n\n        console.log('Class created successfully:', data);\n\n        setButtonClicked(false);\n\n        setFormData({\n          className: '',\n          description: '',\n        });\n\n        setShowSuccess(true);\n        setLoading(false);\n      } catch (error) {\n        setError(`Failed to create class: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    if (buttonClicked) {\n      submitForm();\n    }\n  }, [buttonClicked, formData]);\n\n  return (\n    <IonContent>\n      <Navbar />\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        {/*<IonText color=\"warning\">\n          <p>\n            Database only accepts a teacher ID of 12. <br />\n            So I have not included an input for that, it will automatically be\n            passed\n          </p>\n        </IonText>*/}\n        {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n        <form>\n          <IonCard className=\"mb-6 rounded-lg border shadow-sm\">\n            <IonCardContent>\n              <IonTextarea\n                placeholder=\"Enter Class Name\"\n                value={formData.className}\n                onIonChange={(e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    className: e.detail.value || '',\n                  }))\n                }\n                rows={1}\n                autoGrow\n                className=\"w-full text-xl font-bold mb-2\"\n                style={{ resize: 'none' }}\n              />\n              <IonTextarea\n                placeholder=\"Enter Class Description\"\n                value={formData.description}\n                onIonChange={(e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    description: e.detail.value || '',\n                  }))\n                }\n                rows={1}\n                autoGrow\n                className=\"w-full text-base mt-4\"\n                style={{ resize: 'none' }}\n              />\n            </IonCardContent>\n            {/* <IonItem>\n              \n              Public/Private will not be in MVP\n\n              <IonCheckbox\n                labelPlacement=\"start\"\n                justify=\"start\"\n                checked={isPrivate}\n                onIonChange={(e) => {\n                  setIsPrivate(e.detail.checked);\n                }}\n              >\n                Private\n              </IonCheckbox>\n              <IonRadioGroup\n                onIonChange={(e) => {\n                  const value = e.detail.value;\n                  setIsPrivate(value === 'private');\n                  setFormData((prev) => ({\n                    ...prev,\n                    joinCode: value === 'private' ? crypto.randomUUID() : '',\n                  }));\n                }}\n              >\n                <IonRadio value=\"public\">Public</IonRadio>\n                <IonRadio value=\"private\">Private</IonRadio>\n              </IonRadioGroup>\n            </IonItem> */}\n          </IonCard>\n          <div className=\"flex flex-col md:flex-row justify-center md:justify-end gap-4 mt-8\">\n            <IonButton\n              color=\"success\"\n              disabled={loading}\n              onClick={() => setButtonClicked(true)}\n            >\n              {loading ? 'Creating...' : 'Create Class'}\n            </IonButton>\n          </div>\n          {/* \n          {showSuccess && (\n            <IonText>\n              {isPrivate && (\n                <p>\n                  Class created successfully! Please save this join code: <br />\n                  <b>{lastJoinCode}</b>\n                </p>\n              )}\n              {!isPrivate && <p>Class created successfully!</p>}\n              <IonButton onClick={copyToClipboard}>Copy to Clipboard</IonButton>\n              <IonToast\n                isOpen={showToast}\n                onDidDismiss={() => setShowToast(false)}\n                message=\"Text copied to clipboard!\"\n                duration={2000}\n              />\n            </IonText>\n          )} */}\n        </form>\n        {showSuccess && (\n          <IonText>\n            <p>Class created successfully!</p>\n          </IonText>\n        )}\n      </div>\n    </IonContent>\n  );\n};\n\nexport default CreateClass;\n","import { Navbar } from '@/components/navbar';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonAlert,\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonIcon,\n  IonText,\n  IonTextarea,\n} from '@ionic/react';\nimport { addOutline, trashOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\ntype FlashcardSet = {\n  ID: number;\n  SetName: string;\n  SetDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\nconst CreateSet = () => {\n  const { id } = useParams<{ id?: string }>();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cards, setCards] = useState<\n    { id?: number; front: string; back: string }[]\n  >([{ front: '', back: '' }]);\n  const [errors, setErrors] = useState({ title: '', description: '' });\n  const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (id) {\n      const fetchCards = async () => {\n        try {\n          const res = await fetch(`${API_BASE}/api/flashcards/list`, {\n            method: 'GET',\n            headers: {\n              set_id: id,\n            },\n          });\n          if (!res.ok) throw new Error('Failed to fetch flashcards');\n          const data = await res.json();\n          console.log(data);\n          const cardsData = Array.isArray(data) ? data : [];\n          if (cardsData.length === 0) {\n            setCards([{ front: '', back: '' }]); // ensure at least one blank card\n          } else {\n            setCards(\n              cardsData.map((card: any) => ({\n                id: card.ID, // Map the ID from API to the state\n                front: card.Front, // Map the Front from API to the state\n                back: card.Back, // Map the Back from API to the state\n              }))\n            );\n          }\n        } catch (error) {\n          console.error('Error fetching flashcards:', error);\n        }\n      };\n      fetchCards();\n\n      const fetchSet = async () => {\n        try {\n          const res = await fetch(`${API_BASE}/api/flashcards/sets/`, {\n            method: 'GET',\n            headers: {\n              id: id,\n            },\n          });\n          if (!res.ok) {\n            history.push('/create-set');\n            return;\n          }\n          const data = await res.json();\n          console.log(data);\n          setTitle(data.SetName);\n          setDescription(data.SetDescription);\n        } catch (error) {\n          console.error('Error fetching flashcard set', error);\n        }\n      };\n\n      fetchSet();\n    }\n  }, [id, history]);\n\n  const addCard = () => {\n    setCards([...cards, { front: '', back: '' }]);\n  };\n\n  const removeCard = (index: number) => {\n    setCards(cards.filter((_, i) => i !== index));\n  };\n\n  const updateCard = (index: number, field: string, value: string) => {\n    setCards(\n      cards.map((card, i) => (i === index ? { ...card, [field]: value } : card))\n    );\n    setCards(\n      cards.map((card, i) => (i === index ? { ...card, [field]: value } : card))\n    );\n  };\n\n  const saveSet = async () => {\n    setLoading(true);\n    setError(null);\n    const newErrors = { title: '', description: '' };\n    let hasError = false;\n\n    if (!title.trim()) {\n      newErrors.title = 'Title is required';\n      hasError = true;\n    }\n\n    if (!description.trim()) {\n      newErrors.description = 'Description is required';\n      hasError = true;\n    }\n\n    setErrors(newErrors);\n\n    if (hasError) {\n      setLoading(false);\n      return;\n    }\n\n    const cleanedCards = cards.filter(\n      (card) => card.front.trim() !== '' || card.back.trim() !== ''\n    );\n\n    // If ID is provided, update the set\n    if (id) {\n      try {\n        // Update the set name\n        await makeHttpCall(`${API_BASE}/api/flashcards/sets/set_name`, {\n          method: 'PUT',\n          headers: {\n            id: id,\n            set_name: title,\n          },\n        });\n\n        // Update the set description\n        await makeHttpCall(`${API_BASE}/api/flashcards/sets/set_description`, {\n          method: 'PUT',\n          headers: {\n            id: id,\n            set_description: description,\n          },\n        });\n\n        // Get existing cards\n        const existingCards = await makeHttpCall<any[]>(\n          `${API_BASE}/api/flashcards/list`,\n          {\n            method: 'GET',\n            headers: {\n              set_id: id,\n            },\n          }\n        );\n\n        for (const card of cleanedCards) {\n          if (card.id) {\n            // Update the front of the card\n            await makeHttpCall(`${API_BASE}/api/flashcards/front`, {\n              method: 'PUT',\n              headers: {\n                id: card.id.toString(),\n                front: card.front,\n              },\n            });\n            // Update the back of the card\n            await makeHttpCall(`${API_BASE}/api/flashcards/back`, {\n              method: 'PUT',\n              headers: {\n                id: card.id.toString(),\n                back: card.back,\n              },\n            });\n          } else {\n            // Create a new card\n            await makeHttpCall(`${API_BASE}/api/flashcards`, {\n              method: 'POST',\n              headers: {\n                front: card.front.trim(),\n                back: card.back.trim(),\n                set_id: id.toString(),\n              },\n            });\n          }\n        }\n\n        history.push(`/flashcards/${id}`);\n      } catch (error) {\n        console.error('Error saving flashcard set:', error);\n        setError(`Failed to save flashcard set: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      // If ID is not provided, create a new set\n      try {\n        // 1. Create the set\n        const setResponse = await fetch(`${API_BASE}/flashcards/sets/`, {\n          method: 'POST',\n          headers: {\n            set_name: title,\n            set_description: description,\n          },\n        });\n\n        if (!setResponse.ok)\n          throw new Error(`HTTP error! Status: ${setResponse.status}`);\n        const setData = await setResponse.json();\n        const setId = setData.ID;\n\n        // 2. Create flashcards\n        for (const card of cleanedCards) {\n          await fetch(`${API_BASE}/flashcards`, {\n            method: 'POST',\n            headers: {\n              front: card.front,\n              back: card.back,\n              set_id: setId.toString(),\n            },\n          });\n        }\n        setLoading(false);\n        // ✅ Navigate instead of alert\n        history.push(`/flashcards/${setId}`);\n      } catch (error) {\n        console.error('Error saving flashcard set:', error);\n        setError(`Failed to save flashcard set: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const deleteSet = () => {\n    setTitle('');\n    setDescription('');\n    setCards([{ front: '', back: '' }]);\n    setErrors({ title: '', description: '' });\n    console.log('Flashcard set deleted');\n  };\n\n  return (\n    <IonContent className=\"ion-padding\">\n      <Navbar />\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        {loading && <div>Loading...</div>}\n        {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n        <h1 className=\"text-3xl font-bold mb-6\">Create New Flashcard Set</h1>\n\n        {/* Title & Description inputs */}\n        <IonCard className=\"mb-6 rounded-lg border shadow-sm\">\n          <IonCardContent>\n            <IonTextarea\n              placeholder=\"Enter set title\"\n              value={title}\n              onIonChange={(e) => setTitle(e.detail.value!)}\n              rows={1}\n              autoGrow\n              className=\"w-full text-xl font-bold mb-2\"\n              style={{ resize: 'none' }}\n            />\n            {errors.title && (\n              <IonText color=\"danger\">\n                <p className=\"text-sm mt-1\">{errors.title}</p>\n              </IonText>\n            )}\n\n            <IonTextarea\n              placeholder=\"Enter set description\"\n              value={description}\n              onIonChange={(e) => setDescription(e.detail.value!)}\n              rows={1}\n              autoGrow\n              className=\"w-full text-base mt-4\"\n              style={{ resize: 'none' }}\n            />\n            {errors.description && (\n              <IonText color=\"danger\">\n                <p className=\"text-sm mt-1\">{errors.description}</p>\n              </IonText>\n            )}\n          </IonCardContent>\n        </IonCard>\n\n        {/* Flashcard Inputs */}\n        {cards.map((card, index) => (\n          <IonCard key={index} className=\"mb-6 rounded-lg border shadow-sm\">\n            <IonCardContent>\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-base font-semibold\">\n                  Card {index + 1}\n                </span>\n                <IonButton\n                  fill=\"clear\"\n                  color=\"danger\"\n                  onClick={() => removeCard(index)}\n                >\n                  <IonIcon icon={trashOutline} />\n                </IonButton>\n              </div>\n              <IonTextarea\n                placeholder=\"Front of card\"\n                value={card.front}\n                onIonChange={(e) => updateCard(index, 'front', e.detail.value!)}\n                rows={1}\n                autoGrow\n                className=\"mb-4\"\n                style={{ resize: 'none' }}\n              />\n              <IonTextarea\n                placeholder=\"Back of card\"\n                value={card.back}\n                onIonChange={(e) => updateCard(index, 'back', e.detail.value!)}\n                rows={1}\n                autoGrow\n                style={{ resize: 'none' }}\n              />\n            </IonCardContent>\n          </IonCard>\n        ))}\n\n        {/* Add card button */}\n        <div className=\"flex justify-center mb-6\">\n          <IonButton\n            color=\"primary\"\n            className=\"rounded-lg shadow-sm\"\n            onClick={addCard}\n          >\n            <IonIcon slot=\"start\" icon={addOutline} /> Add Card\n          </IonButton>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row justify-center md:justify-end gap-4 mt-8\">\n          {/* Delete Set Button */}\n          <IonButton color=\"danger\" onClick={() => setShowDeleteAlert(true)}>\n            Delete Set\n          </IonButton>\n\n          {/* Create button */}\n          <IonButton\n            color=\"success\"\n            className=\"rounded-lg shadow-sm w-full md:w-auto\"\n            onClick={saveSet}\n          >\n            {id ? 'Update Set' : 'Create Set'}\n          </IonButton>\n        </div>\n\n        {/* Delete Set Alert */}\n        <IonAlert\n          isOpen={showDeleteAlert}\n          onDidDismiss={() => setShowDeleteAlert(false)}\n          header=\"Confirm Set Deletion\"\n          message=\"Are you sure you want to delete this flashcard set? This action cannot be undone.\"\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              handler: () => {\n                console.log('Cancel clicked');\n              },\n            },\n            {\n              text: 'Delete',\n              handler: () => {\n                // Add your delete account logic here\n                deleteSet();\n              },\n            },\n          ]}\n        />\n      </div>\n    </IonContent>\n  );\n};\n\nexport default CreateSet;\n","import { FlashCard } from '@/components/flashcards/FlashCard';\nimport { Navbar } from '@/components/navbar';\nimport {\n  Carousel,\n  type CarouselApi,\n  CarouselContent,\n  CarouselItem,\n} from '@/components/ui/carousel';\nimport { IonButton, IonContent, IonSpinner } from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\n// Define card type including ID\ntype Card = {\n  id: number;\n  front: string;\n  back: string;\n};\n\nconst Flashcard = () => {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  // Use the Card type for state\n  const [cards, setCards] = useState<Card[]>([]);\n  const [carouselApi, setCarouselApi] = useState<CarouselApi>();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSetDetails = async () => {\n      try {\n        const setRes = await fetch(`${API_BASE}/api/flashcards/sets/`, {\n          method: 'GET',\n          headers: { id },\n        });\n        const setData = await setRes.json();\n        setTitle(setData.SetName);\n        setDescription(setData.SetDescription);\n      } catch (error) {\n        console.error('Failed to fetch set info', error);\n      }\n    };\n\n    const fetchCards = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(`${API_BASE}/api/flashcards/list`, {\n          method: 'GET',\n          headers: { set_id: id },\n        });\n        const data = await res.json();\n        setCards(\n          Array.isArray(data)\n            ? data.map((card: any) => ({\n                // Map the ID from the response\n                id: card.ID,\n                front: card.Front,\n                back: card.Back,\n              }))\n            : []\n        );\n      } catch (error) {\n        console.error('Failed to fetch cards', error);\n        setCards([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (id) {\n      fetchSetDetails();\n      fetchCards();\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (!carouselApi) {\n      return;\n    }\n\n    const onSelect = () => {\n      setCurrentCardIndex(carouselApi.selectedScrollSnap());\n    };\n\n    onSelect();\n\n    carouselApi.on('select', onSelect);\n    carouselApi.on('reInit', onSelect);\n\n    return () => {\n      carouselApi.off('select', onSelect);\n      carouselApi.off('reInit', onSelect);\n    };\n  }, [carouselApi]);\n\n  const handleAdvance = () => {\n    if (carouselApi) {\n      carouselApi.scrollNext();\n    }\n  };\n\n  return (\n    <IonContent className='ion-padding'>\n      <Navbar />\n\n      <div id='main-content' className='container mx-auto px-4 py-8 max-w-4xl'>\n        {/* Flashcards */}\n        <div className='flex items-center gap-4 mb-6'>\n          <IonButton\n            className='rounded-lg'\n            fill='outline'\n            style={{ '--border-radius': '0.5rem' }}\n            routerLink={`/set-overview/${id}`}\n          >\n            Back\n          </IonButton>\n          <div>\n            <h1 className='text-2xl font-bold'>{title}</h1>\n            <p className='text-gray-500'>{description}</p>\n          </div>\n        </div>\n\n        <div className='w-full max-w-xl mx-auto relative py-8 min-h-[400px] flex items-center justify-center'>\n          {loading ? (\n            <IonSpinner name='circular' />\n          ) : cards.length === 0 ? (\n            <div className='text-center text-gray-500 text-lg py-20'>\n              This set has no cards yet.\n            </div>\n          ) : (\n            <>\n              <Carousel\n                orientation='vertical'\n                setApi={setCarouselApi}\n                className='w-full'\n              >\n                <CarouselContent className='-mt-1 h-[400px]'>\n                  {cards.map((card, index) => (\n                    <CarouselItem key={index}>\n                      <FlashCard\n                        front={card.front}\n                        back={card.back}\n                        onAdvance={handleAdvance}\n                        // Pass cardId and a placeholder userId\n                        cardId={card.id}\n                        userId={1} // Placeholder user ID\n                      />\n                    </CarouselItem>\n                  ))}\n                </CarouselContent>\n              </Carousel>\n\n              <div className='absolute right-[-50px] top-1/2 transform -translate-y-1/2 flex flex-col gap-2'>\n                {cards.map((_, index) => (\n                  <div\n                    key={index}\n                    className={`w-2 h-2 rounded-full transition-colors ${\n                      index === currentCardIndex ? 'bg-primary' : 'bg-gray-300'\n                    }`}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default Flashcard;\n","import { Footer } from '@/components/footer';\nimport { Navbar } from '@/components/navbar';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonIcon,\n  IonLabel,\n  IonSegment,\n  IonSegmentButton,\n  IonSpinner,\n} from '@ionic/react';\nimport { addOutline, bookOutline, listOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\ntype Class = {\n  ID: number;\n  ClassName: string;\n  ClassDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\ntype Set = {\n  ID: number;\n  SetName: string;\n  SetDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\nconst Home = () => {\n  const [tab, setTab] = useState('classes');\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [sets, setSets] = useState<Set[]>([]);\n  const [classesLoading, setClassesLoading] = useState(false);\n  const [setsLoading, setSetsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Currently getting all classes, but should be getting only the classes the user is in. waiting on backend to implement this.\n  useEffect(() => {\n    const fetchClassesOfUser = async () => {\n      setClassesLoading(true);\n      setError(null);\n      try {\n        const data = await makeHttpCall<Class[]>(\n          `${API_BASE}/api/class_user/classes`\n        );\n        console.log(data);\n        setClasses(data);\n      } catch (error) {\n        setError(`Error fetching classes: ${error.message}`);\n      } finally {\n        setClassesLoading(false);\n      }\n    };\n\n    const fetchSetsOfUser = async () => {\n      setSetsLoading(true);\n      try {\n        const data = await makeHttpCall<Set[]>(\n          `${API_BASE}/api/flashcards/sets/list`\n        );\n        setSets(data);\n      } catch (error) {\n        setError(`Error fetching sets: ${error.message}`);\n      } finally {\n        setSetsLoading(false);\n      }\n    };\n\n    fetchClassesOfUser();\n    fetchSetsOfUser();\n  }, []);\n\n  // const suggestedFlashcardSets = [\n  //   { id: 1, name: 'Physics Essentials', cards: 18 },\n  //   { id: 2, name: 'Spanish Phrases', cards: 22 },\n  //   { id: 3, name: 'World Capitals', cards: 12 },\n  //   { id: 4, name: 'Algebraic Equations', cards: 20 },\n  //   { id: 5, name: 'Shakespearean Plays', cards: 14 },\n  //   { id: 6, name: 'Ancient Civilizations', cards: 9 },\n  // ];\n\n  return (\n    <IonContent className=\"ion-padding\">\n      <Navbar />\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n        <div className=\"flex flex-col md:flex-row md:justify-between md:items-center mb-8\">\n          <h1 className=\"text-3xl font-bold\">\n            {tab === 'classes' ? 'My Classes' : 'Personal Flashcard Sets'}\n          </h1>\n          <div className=\"flex items-center gap-2 mt-4 md:mt-0\">\n            <IonButton\n              color=\"primary\"\n              className=\"rounded-lg\"\n              style={{ '--border-radius': '0.5rem' }}\n              href={tab === 'classes' ? '/class/create' : '/set/create'}\n            >\n              <IonIcon slot=\"start\" icon={addOutline} />{' '}\n              {tab === 'classes' ? 'Add Class' : 'Add Set'}\n            </IonButton>\n          </div>\n        </div>\n\n        <div className=\"mb-8\">\n          <IonSegment\n            value={tab}\n            onIonChange={(e) => setTab((e.detail.value as string) || 'classes')}\n            style={{\n              '--background': 'var(--ion-color-light)',\n            }}\n          >\n            <IonSegmentButton value=\"classes\">\n              <IonIcon icon={listOutline} className=\"mr-2\" />\n              <IonLabel>My Classes</IonLabel>\n            </IonSegmentButton>\n            <IonSegmentButton value=\"flashcards\">\n              <IonIcon icon={bookOutline} className=\"mr-2\" />\n              <IonLabel>My Cards</IonLabel>\n            </IonSegmentButton>\n          </IonSegment>\n        </div>\n\n        {tab === 'classes' && (\n          <>\n            {classesLoading ? (\n              <div className=\"flex justify-center items-center p-8\">\n                <IonSpinner name=\"circular\" />\n                <span className=\"ml-2\">Loading classes...</span>\n              </div>\n            ) : classes === null ? (\n              <div className=\"text-center p-8 text-gray-600\">\n                You are not part of any classes. Join a class to get started.\n              </div>\n            ) : (\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                {classes.map((cls) => (\n                  <Link key={cls.ID} to={`/class/${cls.ID}`}>\n                    <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                      <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                        <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                          {cls.ClassName}\n                        </IonCardTitle>\n                        {/* TODO: Backend should return class description */}\n                        <IonCardSubtitle className=\"text-sm text-muted-foreground\">\n                          {cls.ClassDescription}\n                        </IonCardSubtitle>\n                      </IonCardHeader>\n                      <IonCardContent>\n                        {/* <IonText className=\"text-sm text-gray-600\">\n                          {cls.sets} sets\n                        </IonText> */}\n                      </IonCardContent>\n                    </IonCard>\n                  </Link>\n                ))}\n              </div>\n            )}\n          </>\n        )}\n\n        {tab === 'flashcards' && (\n          <>\n            {setsLoading ? (\n              <div className=\"flex justify-center items-center p-8\">\n                <IonSpinner name=\"circular\" />\n                <span className=\"ml-2\">Loading sets...</span>\n              </div>\n            ) : (\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                {sets.map((set) => (\n                  <Link key={set.ID} to={`/set/${set.ID}`}>\n                    <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                      <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                        <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                          {set.SetName}\n                        </IonCardTitle>\n                        <IonCardSubtitle className=\"text-sm text-muted-foreground\">\n                          {set.SetDescription}\n                        </IonCardSubtitle>\n                      </IonCardHeader>\n                      <IonCardContent>\n                        {/* <IonText className=\"text-sm text-gray-600\">\n                          {set.cards} cards\n                        </IonText> */}\n                      </IonCardContent>\n                    </IonCard>\n                  </Link>\n                ))}\n              </div>\n            )}\n          </>\n        )}\n        <Footer />\n        {/* <div className=\"mb-8\">\n          <IonHeader className=\"p-4\">\n            <IonTitle className=\"text-2xl font-bold\">Suggested Sets</IonTitle>\n          </IonHeader>\n        </div> */}\n        {/* <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {suggestedFlashcardSets.map((set) => (\n            <Link key={set.id} to={`/class/${set.id}`}>\n              <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                  <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                    {set.name}\n                  </IonCardTitle>\n                </IonCardHeader>\n                <IonCardContent>\n                  <IonText className=\"text-sm text-gray-600\">\n                    {set.cards} cards\n                  </IonText>\n                </IonCardContent>\n              </IonCard>\n            </Link>\n          ))}\n        </div> */}\n      </div>\n    </IonContent>\n  );\n};\n\nexport default Home;\n","import { AuthForm } from '@/components/auth/AuthForm';\nimport { IonContent } from '@ionic/react';\n\n// type Class = {\n//   ID: string;\n//   ClassName: string;\n//   ClassDescription: string;\n//   CreatedAt: string;\n//   UpdatedAt: string;\n// };\n\nconst Index = () => {\n  return (\n    <IonContent>\n      <div className=\"min-h-screen flex flex-col items-center justify-center from-white to-gray-50\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-primary mb-2\">CowboyCards</h1>\n          <p>Master any subject with smart flashcards</p>\n        </div>\n        <AuthForm />\n      </div>\n    </IonContent>\n  );\n};\n\nexport default Index;\n","import { Navbar } from '@/components/navbar';\nimport { IonContent } from '@ionic/react';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    console.error(\n      '404 Error: User attempted to access non-existent route:',\n      location.pathname\n    );\n  }, [location.pathname]);\n\n  return (\n    <IonContent>\n      <Navbar />\n\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n          <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n          <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n            Return to Home\n          </a>\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default NotFound;\n","import { Navbar } from '@/components/navbar';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonSearchbar,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype FlashcardSet = {\n  ID: number;\n  SetName: string;\n  SetDescription: string;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nconst PublicFlashcards = () => {\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [flashcardSets, setFlashcardSets] = useState<FlashcardSet[]>([]);\n  const [searchText, setSearchText] = useState('');\n  const filteredFlashcardSets = flashcardSets.filter((set) =>\n    set.SetName.toLowerCase().includes(searchText.toLowerCase()) ||\n    (set.SetDescription && set.SetDescription.toLowerCase().includes(searchText.toLowerCase()))\n  );\n  useEffect(() => {\n    async function fetchSets() {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await makeHttpCall<FlashcardSet[]>(\n          `${API_BASE}/api/flashcards/sets/list`\n        );\n        setFlashcardSets(res);\n      } catch (error) {\n        console.error('Error fetching flashcard sets:', error);\n        setError(`Error fetching flashcard sets: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchSets();\n  }, []);\n\n  return (\n    <IonContent>\n      <Navbar />\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8 w-1/2\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h1 className=\"text-3xl font-bold pb-8\">Public Flashcard Sets</h1>\n          {loading && <div>Loading...</div>}\n          {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n            <IonSearchbar\n              value={searchText}\n              onIonInput={(e: any) => setSearchText(e.target.value)} // Use onIonInput for real-time updates\n              placeholder=\"Search flashcard sets\"\n              className=\"mb-4 w-1/2\"\n            />\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {filteredFlashcardSets.map((set) => (\n            <Link key={set.ID} to={`/flashcards/${set.ID}`}>\n              <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                  <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                    {set.SetName}\n                  </IonCardTitle>\n                  <IonCardSubtitle className=\"text-sm text-gray-600\">\n                    {set.SetDescription || 'No description'}\n                  </IonCardSubtitle>\n                </IonCardHeader>\n              </IonCard>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default PublicFlashcards;\n","import { Navbar } from '@/components/navbar';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonButton,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Class = {\n  ID: number;\n  ClassName: string;\n  ClassDescription: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n// const mockClasses = [\n//   {\n//     ID: 1,\n//     ClassName: 'Biology 101',\n//     ClassDescription: 'Biology',\n//     CreatedAt: '2023-01-15',\n//     UpdatedAt: '2023-05-20',\n//   },\n//   {\n//     ID: 2,\n//     ClassName: 'Chemistry 101',\n//     ClassDescription: 'Chemistry',\n//     CreatedAt: '2025-01-15',\n//     UpdatedAt: '2023-05-20',\n//   },\n//   {\n//     ID: 3,\n//     ClassName: 'physic 101',\n//     ClassDescription: 'physic',\n//     CreatedAt: '2023-01-11',\n//     UpdatedAt: '2023-05-10',\n//   },\n// ]\nconst PublicClasses = () => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchClasses = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await makeHttpCall<Class[]>(`${API_BASE}/api/classes/list`);\n        setClasses(res);\n        setLoading(false);\n      } catch (error) {\n        setError(`Error fetching classes: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClasses();\n  }, []);\n\n  return (\n    <IonContent>\n      <Navbar />\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        <h1 className=\"text-3xl font-bold pb-8\">Public Classes</h1>\n        {loading && <div>Loading...</div>}\n        {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {classes.map((classItem) => (\n            <Link key={classItem.ID} to={`/class/${classItem.ID}`}>\n              <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                  <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                    {classItem.ClassName}\n                  </IonCardTitle>\n                  <IonCardSubtitle className=\"text-sm text-gray-600\">\n                    {classItem.ClassDescription || 'No description'}\n                  </IonCardSubtitle>\n                  <IonButton\n                    expand=\"block\"\n                    color=\"primary\"\n                    className=\"mt-4\"\n                    onClick={async () => {\n                      try {\n                        const response = await makeHttpCall(\n                          `${API_BASE}/api/class_user`,\n                          {\n                            method: 'POST',\n                            headers: {\n                              class_id: classItem.ID,\n                              role: 'student',\n                            },\n                          }\n                        );\n                        console.log('Join class response:', response);\n                      } catch (error) {\n                        console.error('Error joining class:', error);\n                      }\n                    }}\n                  >\n                    Join Class\n                  </IonButton>\n                </IonCardHeader>\n              </IonCard>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default PublicClasses;\n","// SetOverview.tsx\nimport { Navbar } from '@/components/navbar';\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonSpinner,\n  IonText,\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nconst SetOverview = () => {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cards, setCards] = useState<{ front: string; back: string }[]>([]);\n  const [loadingCards, setLoadingCards] = useState(true);\n\n  useEffect(() => {\n    const fetchSetDetails = async () => {\n      try {\n        const setRes = await fetch(`${API_BASE}/api/flashcards/sets/`, {\n          method: 'GET',\n          headers: { id },\n        });\n        const setData = await setRes.json();\n        setTitle(setData.SetName);\n        setDescription(setData.SetDescription);\n      } catch (error) {\n        console.error('Failed to fetch set info', error);\n      }\n    };\n\n    const fetchCards = async () => {\n      setLoadingCards(true);\n      try {\n        const res = await fetch(`${API_BASE}/api/flashcards/list`, {\n          method: 'GET',\n          headers: { set_id: id },\n        });\n        const data = await res.json();\n        setCards(\n          Array.isArray(data)\n            ? data.map((card: any) => ({\n                front: card.Front,\n                back: card.Back,\n              }))\n            : []\n        );\n      } catch (error) {\n        console.error('Failed to fetch cards', error);\n        setCards([]);\n      } finally {\n        setLoadingCards(false);\n      }\n    };\n\n    if (id) {\n      fetchSetDetails();\n      fetchCards();\n    }\n  }, [id]);\n\n  return (\n    <IonContent className='ion-padding'>\n      <Navbar />\n      <div id='main-content' className='container max-w-4xl mx-auto px-4 py-8'>\n        <div className='flex flex-col md:flex-row justify-between items-start gap-4 mb-6'>\n          {/* Left: Back Button + Title & Description aligned */}\n          <div className='flex items-center gap-4 flex-1 pr-4'>\n            {/* Back Button */}\n            <IonButton\n              className='rounded-lg'\n              fill='outline'\n              style={{ '--border-radius': '0.5rem' }}\n              onClick={() => window.history.back()}\n            >\n              Back\n            </IonButton>\n\n            {/* Title + Description (stacked) */}\n            <div className='flex flex-col'>\n              <h1 className='text-3xl font-bold'>{title}</h1>\n              <p className='text-base mt-1 text-gray-700'>{description}</p>\n            </div>\n          </div>\n\n          {/* Right: Study Set Button */}\n          <div className='self-start md:self-center flex gap-2 md:mt-0 mt-4 w-full md:w-auto'>\n            <IonButton\n              className='rounded-lg w-1/2 md:w-auto'\n              fill='outline'\n              style={{ '--border-radius': '0.5rem' }}\n              routerLink={`/edit-set/${id}`}\n            >\n              Edit Set\n            </IonButton>\n            <IonButton\n              className='rounded-lg w-1/2 md:w-auto'\n              color={'primary'}\n              style={{ '--border-radius': '0.5rem' }}\n              routerLink={`/flashcards/${id}`}\n            >\n              Study Set\n            </IonButton>\n          </div>\n        </div>\n\n        <div className='mt-8 min-h-[200px] flex items-center justify-center'>\n          {loadingCards ? (\n            <IonSpinner name='circular' />\n          ) : cards.length === 0 ? (\n            <div className='text-center text-lg text-gray-900 dark:text-gray-400'>\n              This set has no cards yet.\n            </div>\n          ) : (\n            <div className='w-full'>\n              {cards.map((card, index) => (\n                <IonCard\n                  key={index}\n                  className='mb-4 rounded-lg border shadow-sm'\n                >\n                  <IonCardContent>\n                    {/* Card number label */}\n                    <div className='border-b border-gray-300 mb-3 pb-1 m-4'>\n                      <IonText className='text-md font-semibold text-gray-900 dark:text-gray-300'>\n                        Card {index + 1}\n                      </IonText>\n                    </div>\n\n                    {/* Front / Back layout */}\n                    <div className='flex flex-row justify-between items-start'>\n                      {/* Front (30%) */}\n                      <div className='w-3/12 pr-4 border-r border-gray-300 m-4'>\n                        <IonText className='block whitespace-pre-wrap text-lg text-gray-900 dark:text-gray-200'>\n                          {card.front}\n                        </IonText>\n                      </div>\n\n                      {/* Back (70%) */}\n                      <div className='w-9/12 pl-4 m-4'>\n                        <IonText className='block whitespace-pre-wrap text-lg text-gray-900 dark:text-gray-200'>\n                          {card.back}\n                        </IonText>\n                      </div>\n                    </div>\n                  </IonCardContent>\n                </IonCard>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default SetOverview;\n","import { Navbar } from '@/components/navbar';\nimport {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonContent,\n  IonText,\n} from '@ionic/react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TeacherDashboard = () => {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  // Mock Data for teacher classes\n  // Each class has an id, name, number of students, number of sets, and cards mastered\n  // TODO: Replace with actual data from the database\n  const teacherClasses = [\n    {\n      id: 1,\n      name: 'Biology 101',\n      students: 25,\n      sets: 5,\n      cardsMastered: 85,\n    },\n    {\n      id: 2,\n      name: 'Spanish Basics',\n      students: 18,\n      sets: 3,\n      cardsMastered: 78,\n    },\n    {\n      id: 3,\n      name: 'World History',\n      students: 30,\n      sets: 7,\n      cardsMastered: 92,\n    },\n  ];\n\n  // Calculate summary statistics from the class data\n  // These statistics provide an overview of all classes at a glance\n  const totalClasses = teacherClasses.length;\n  const totalStudents = teacherClasses.reduce(\n    (sum, cls) => sum + cls.students,\n    0\n  );\n  const totalSets = teacherClasses.reduce((sum, cls) => sum + cls.sets, 0);\n\n  // Calculate average cards mastered across all classes\n  // We sum all cards mastered values, then divide by class count\n  const averageCardsMastered =\n    teacherClasses.reduce((sum, cls) => {\n      return sum + cls.cardsMastered;\n    }, 0) / totalClasses;\n\n  return (\n    <IonContent>\n      <Navbar />\n\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        <h2 className=\"text-xl font-bold mb-4\">Overview</h2>\n        <div className=\"grid gap-4 grid-cols-1 md:grid-cols-4 mb-8\">\n          <IonCard className=\"rounded-lg border shadow-sm\">\n            <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n              <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                Total Classes\n              </IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonText className=\"text-2xl font-bold\">{totalClasses}</IonText>\n            </IonCardContent>\n          </IonCard>\n\n          <IonCard className=\"rounded-lg border shadow-sm\">\n            <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n              <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                Total Students\n              </IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonText className=\"text-2xl font-bold\">{totalStudents}</IonText>\n            </IonCardContent>\n          </IonCard>\n\n          <IonCard className=\"rounded-lg border shadow-sm\">\n            <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n              <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                Total Sets\n              </IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonText className=\"text-2xl font-bold\">{totalSets}</IonText>\n            </IonCardContent>\n          </IonCard>\n\n          <IonCard className=\"rounded-lg border shadow-sm\">\n            <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n              <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                Average Cards Mastered\n              </IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonText className=\"text-2xl font-bold\">\n                {averageCardsMastered.toFixed(1)}\n              </IonText>\n            </IonCardContent>\n          </IonCard>\n        </div>\n\n        <h2 className=\"text-xl font-bold mb-4\">Classes</h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {teacherClasses.map((cls) => (\n            <Link key={cls.id} to={`/class/${cls.id}`}>\n              <IonCard className=\"cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-transform-shadow duration-200 rounded-lg border shadow-sm\">\n                <IonCardHeader className=\"flex flex-col space-y-1.5 p-6\">\n                  <IonCardTitle className=\"text-2xl font-semibold leading-none tracking-tight\">\n                    {cls.name}\n                  </IonCardTitle>\n                  <IonText className=\"text-sm text-gray-600\">\n                    {cls.students} students enrolled\n                  </IonText>\n                </IonCardHeader>\n                <IonCardContent className=\"flex flex-col gap-0 p-6 pt-0\">\n                  <IonText className=\"text-sm text-gray-600\">\n                    {cls.sets} sets\n                  </IonText>\n                  <IonText className=\"text-sm text-gray-600\">\n                    Cards mastered: {cls.cardsMastered}\n                  </IonText>\n                </IonCardContent>\n              </IonCard>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </IonContent>\n  );\n};\n\nexport default TeacherDashboard;\n","import { IonInput, IonItem, IonLabel } from \"@ionic/react\";\n\nexport const EditableField = (props) => {\n  return (\n    <div>\n      <IonItem>\n        <IonInput\n          type=\"text\" // TODO: Make this a prop\n          label={props.label}\n          name={props.name}\n          value={props.value}\n          onIonChange={props.onChange}\n        />\n      </IonItem>\n      {props.error && <p className=\"text-red-500 text-xs mt-1\">{props.error}</p>}\n    </div>\n  );\n};\n","\n\nconst InfoRow = (props) => {\n  return (\n    <div className=\"flex justify-between items-center\">\n      <span className=\"font-medium\">{props.label}:</span>\n      <span>{props.value}</span>\n    </div>\n  );\n};\n\nexport default InfoRow;\n","import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonIcon } from \"@ionic/react\";\nimport { EditableField } from \"@/components/EditableField\";\nimport { createOutline } from \"ionicons/icons\";\nimport InfoRow from \"./InfoRow\";\n\nconst UserAccountFirstRow = (props) => {\n  return (\n    <div className=\"flex flex-col md:flex-row gap-6\">\n      {/* Account Information Card */}\n      <IonCard className=\"w-full md:w-1/2 rounded-lg border shadow-sm\">\n  <IonCardHeader className=\"p-6\">\n    <IonCardTitle className=\"text-xl font-semibold text-primary\">\n      Account Information\n    </IonCardTitle>\n  </IonCardHeader>\n  <IonCardContent className=\"p-6 pt-0\">\n    {/* TODO: Make this into an EditingField component where you can pass whatever label or field you want. */}\n\n    {props.isEditing ? (\n      <div className=\"space-y-4\">\n        <EditableField\n          label=\"First Name\"\n          name=\"first_name\"\n          value={props.updatedInfo?.first_name || ''}\n          error={props.errors.first_name}\n          onChange={props.handleChange}\n        />\n        <EditableField\n          label=\"Last Name\"\n          name=\"last_name\"\n          value={props.updatedInfo?.last_name || ''}\n          error={props.errors.last_name}\n          onChange={props.handleChange}\n        />\n        <EditableField\n          label=\"Username\"\n          name=\"username\"\n          value={props.updatedInfo?.username || ''}\n          error={props.errors.username}\n          onChange={props.handleChange}\n        />\n        <EditableField\n          label=\"Email\"\n          name=\"email\"\n          value={props.updatedInfo?.email || ''}\n          error={props.errors.email}\n          onChange={props.handleChange}\n        />\n        <div className=\"mt-4 flex justify-end\">\n          <IonButton onClick={props.handleSave}>Save Changes</IonButton>\n        </div>\n      </div>\n    ) : (\n      <div className=\"space-y-2\">\n        <InfoRow label=\"First Name\" value={props.userInfo?.first_name}  />\n        <InfoRow label=\"Last Name\" value={props.userInfo?.last_name} />\n        <InfoRow label=\"Username\" value={props.userInfo?.username} />\n        <InfoRow label=\"Email\" value={props.userInfo?.email} />\n        <IonButton\n          fill=\"outline\"\n          onClick={props.handleEdit}\n          className=\"mt-4\"\n        >\n          <IonIcon slot=\"start\" icon={createOutline} />\n          Edit Info\n        </IonButton>\n      </div>\n    )}\n  </IonCardContent>\n</IonCard>\n\n{/* Account Stats Card */}\n<IonCard className=\"w-full md:w-1/2 rounded-lg border shadow-sm\">\n  <IonCardHeader className=\"p-6\">\n    <IonCardTitle className=\"text-xl font-semibold text-primary\">\n      Account Stats\n    </IonCardTitle>\n  </IonCardHeader>\n  <IonCardContent className=\"p-6 pt-0\">\n    <div className=\"space-y-3\">\n      <InfoRow label=\"Account Created\" value={props.userInfo?.created_at} />\n      <InfoRow label=\"Classes Taken\" value={props.userInfo?.numClasses} />\n      <InfoRow label=\"Cards Shown\" value={props.userInfo?.cardsSeen} />\n      <InfoRow label=\"Cards Mastered\" value={props.userInfo?.totalCardViews} />\n      </div>\n    </IonCardContent>\n  </IonCard>\n  </div>\n  );\n};\n\nexport default UserAccountFirstRow;\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonIcon,\n  IonSelect,\n  IonSelectOption,\n  IonButton,\n  IonAlert,\n} from '@ionic/react';\nimport { chevronDownOutline, chevronUpOutline } from 'ionicons/icons';\n\nconst UserAccountSecondRow = (props) => {\n  return (\n    <>\n      {/* Second Row: Class History and Account Options */}\n      <div className=\"flex flex-col md:flex-row gap-6 py-6\">\n        {/* Class History Card */}\n        {/* TODO: Replace this what some other component. Idea: Track user streaks */}\n        {/* <IonCard className=\"w-full md:w-1/2 rounded-lg border shadow-sm\">\n          <IonCardHeader className=\"p-6\">\n            <IonCardTitle className=\"text-xl font-semibold text-primary\">\n              Class History\n            </IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent className=\"p-6 pt-0\">\n            <IonList>\n              {props.classHistory.map((cls) => (\n                <div key={cls.id}>\n                  <IonItem button onClick={() => props.toggleClassDetails(cls.id)}>\n                    <IonLabel>{cls.title}</IonLabel>\n                    <IonIcon\n                      icon={\n                        props.expandedClass === cls.id\n                          ? chevronUpOutline\n                          : chevronDownOutline\n                      }\n                      slot=\"end\"\n                    />\n                  </IonItem>\n                  {props.expandedClass === cls.id && (\n                    <IonItem lines=\"none\">\n                      <div className=\"pl-4 text-gray-700\">\n                        <p>\n                          <span className=\"font-medium\">Date Started:</span>{' '}\n                          {cls.startDate}\n                        </p>\n                        <p>\n                          <span className=\"font-medium\">Date Ended:</span>{' '}\n                          {cls.endDate}\n                        </p>\n                        <a href={cls.link} className=\"text-primary underline\">\n                          Go to Class Page\n                        </a>\n                      </div>\n                    </IonItem>\n                  )}\n                </div>\n              ))}\n            </IonList>\n          </IonCardContent>\n        </IonCard> */}\n\n        {/* Account Options Card */}\n        <IonCard className=\"w-full md:w-1/2 rounded-lg border shadow-sm\">\n          <IonCardHeader className=\"p-6\">\n            <IonCardTitle className=\"text-xl font-semibold text-primary\">\n              Account Options\n            </IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent className=\"p-6 pt-0\">\n            <div className=\"space-y-4\">\n              <IonItem>\n                {/* <IonLabel>Theme</IonLabel> */}\n                <IonSelect\n                  label=\"Theme\"\n                  value={props.theme}\n                  onIonChange={(e) =>\n                    props.setTheme(e.detail.value as 'light' | 'dark')\n                  }\n                  interface=\"popover\"\n                  placeholder=\"Select Theme\"\n                >\n                  <IonSelectOption value=\"light\">Light</IonSelectOption>\n                  <IonSelectOption value=\"dark\">Dark</IonSelectOption>\n                </IonSelect>\n              </IonItem>\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <p className=\"text-sm font-medium\">Change Your Password</p>\n                  <p className=\"text-xs text-gray-600\">\n                    Reset your account password.\n                  </p>\n                </div>\n                <IonButton onClick={() => props.setShowPasswordAlert(true)}>\n                  Change Password\n                </IonButton>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <p className=\"text-sm font-medium\">Delete Your Account</p>\n                  <p className=\"text-xs text-gray-600\">\n                    This will delete all account data and can't be undone.\n                  </p>\n                </div>\n                <IonButton\n                  color=\"danger\"\n                  onClick={() => props.setShowDeleteAlert(true)}\n                >\n                  Delete Account\n                </IonButton>\n              </div>\n            </div>\n          </IonCardContent>\n        </IonCard>\n      </div>\n\n      {/* Change Password Alert */}\n      <IonAlert\n        isOpen={props.showPasswordAlert}\n        onDidDismiss={() => props.setShowPasswordAlert(false)}\n        header=\"Change Password\"\n        inputs={[\n          {\n            name: 'oldPassword',\n            type: 'password',\n            placeholder: 'Old Password',\n          },\n          {\n            name: 'newPassword',\n            type: 'password',\n            placeholder: 'New Password',\n          },\n          {\n            name: 'confirmPassword',\n            type: 'password',\n            placeholder: 'Confirm New Password',\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n            },\n          },\n          {\n            text: 'Save',\n            handler: (data) => {\n              if (data.newPassword !== data.confirmPassword) {\n                props.presentToast({\n                  message: 'Passwords do not match',\n                  duration: 2000,\n                  color: 'danger',\n                });\n                return true; // Allow the alert to close\n              }\n              // Add your password change logic here\n              console.log('Password changed');\n              return true;\n            },\n          },\n        ]}\n      />\n\n      {/* Delete Account Alert */}\n      <IonAlert\n        isOpen={props.showDeleteAlert}\n        onDidDismiss={() => props.setShowDeleteAlert(false)}\n        header=\"Confirm Deletion\"\n        message=\"Are you sure you want to delete your account? This action cannot be undone.\"\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              console.log('Cancel clicked');\n            },\n          },\n          {\n            text: 'Delete',\n            handler: () => {\n              // Add your delete account logic here\n              console.log('Account deleted');\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default UserAccountSecondRow;\n","import { Navbar } from '@/components/navbar';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { EditableField } from '@/components/EditableField';\nimport { makeHttpCall } from '@/utils/makeHttpCall';\nimport {\n  IonAlert,\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonContent,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonSelect,\n  IonSelectOption,\n  IonSpinner,\n  useIonToast,\n} from '@ionic/react';\nimport {\n  arrowBackOutline,\n  chevronDownOutline,\n  chevronUpOutline,\n  createOutline,\n} from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport UserAccountFirstRow from '../components/UserAccountFirstRow';\nimport UserAccountSecondRow from '../components/UserAccountSecondRow';\n\ntype User = {\n  username: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  created_at: string;\n  numClasses: number;\n  cardsSeen: number;\n  totalCardViews: number;\n};\n\nconst API_BASE = import.meta.env.VITE_API_BASE_URL;\n\nconst UserAccount = () => {\n  const { theme, setTheme } = useTheme();\n  const [userInfo, setUserInfo] = useState<User>();\n  const [loading, setLoading] = useState(true); // Start loading initially\n  const [error, setError] = useState<string | null>(null);\n  \n  // const [classHistory, setClassHistory] = useState([\n  //   {\n  //     id: 1,\n  //     title: \"Introduction to Computer Science\",\n  //     startDate: \"2024-01-15\",\n  //     endDate: \"2024-05-30\",\n  //     link: \"/class/1\"\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"Data Structures and Algorithms\",\n  //     startDate: \"2023-09-01\",\n  //     endDate: \"2023-12-15\",\n  //     link: \"/class/2\"\n  //   },\n  //   {\n  //     id: 3,\n  //     title: \"Web Development Fundamentals\",\n  //     startDate: \"2023-06-01\",\n  //     endDate: \"2023-08-15\",\n  //     link: \"/class/3\"\n  //   }\n  // ]);\n\n  const [expandedClass, setExpandedClass] = useState<number | null>(null);\n  const [showPasswordAlert, setShowPasswordAlert] = useState(false);\n  const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState(userInfo);\n\n  const toggleClassDetails = (classID: number) => {\n    setExpandedClass(expandedClass === classID ? null : classID);\n  };\n\n  const handleEdit = () => {\n    setUpdatedInfo(userInfo);\n    setIsEditing(true);\n  };\n\n  const handleSave = async () => {\n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n\n    // Define the fields that can be updated\n    const fieldsToUpdate = ['first_name', 'last_name', 'username', 'email'];\n\n    try {\n      // Identify which fields have changed and create API call promises\n      const updatePromises = fieldsToUpdate\n        .filter((field) => updatedInfo[field] !== userInfo[field]) // Only include modified fields\n        .map((field) =>\n          makeHttpCall<User>(`${API_BASE}/api/users/${field}`, {\n            method: 'PUT',\n            headers: {\n              [field]: updatedInfo[field], // New value for the field\n            },\n          })\n        );\n\n      // Wait for all API calls to complete successfully\n      await Promise.all(updatePromises);\n      // If all updates succeed, update the local state and exit editing mode\n      setUserInfo(updatedInfo);\n      setIsEditing(false);\n    } catch (error) {\n      // Log the error and notify the user if any update fails\n      console.error(error);\n      alert('Failed to update some fields. Please try again.');\n    }\n  };\n\n  // Basic validation before submitting\n  const validateForm = () => {\n    const newErrors: {\n      first_name?: string;\n      last_name?: string;\n      email?: string;\n      username?: string;\n    } = {};\n    let isValid = true;\n\n    // First name validation\n    if (!updatedInfo.first_name) {\n      newErrors.first_name = 'First name is required';\n      isValid = false;\n    }\n\n    // Last name validation\n    if (!updatedInfo.last_name) {\n      newErrors.last_name = 'Last name is required';\n      isValid = false;\n    }\n\n    // Email validation\n    if (!updatedInfo.email) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(updatedInfo.email)) {\n      newErrors.email = 'Email is invalid';\n      isValid = false;\n    }\n\n    // Username validation\n    if (!updatedInfo.username) {\n      newErrors.username = 'Username is required';\n      isValid = false;\n    }\n\n    // Trim whitespace from the input values\n    updatedInfo.first_name = updatedInfo.first_name.trim();\n    updatedInfo.last_name = updatedInfo.last_name.trim();\n    updatedInfo.email = updatedInfo.email.trim();\n    updatedInfo.username = updatedInfo.username.trim();\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  // Form validation\n  const [errors, setErrors] = useState<{\n    first_name?: string;\n    last_name?: string;\n    email?: string;\n    username?: string;\n    general?: string;\n  }>({});\n\n  const handleChange = (e: CustomEvent) => {\n    const { name } = e.target as HTMLIonInputElement;\n    const value = e.detail.value;\n    setUpdatedInfo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await makeHttpCall<User>(`${API_BASE}/api/users/`, {\n          method: 'GET',\n          headers: {},\n        });\n        setUserInfo(data);\n        setUpdatedInfo(data);\n        console.log('data', data as User);\n      } catch (error) {\n        console.log(`Failed to fetch User Data: ${error.message}`);\n        setError(`Failed to fetch User Data: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n\n    // cleanup func not necessary here\n    // https://blog.logrocket.com/understanding-react-useeffect-cleanup-function/\n  }, []);\n\n  // Hook for showing toast messages, used for password change\n  const [presentToast] = useIonToast();\n\n  return (\n    <IonContent>\n      <Navbar />\n\n      <div id=\"main-content\" className=\"container mx-auto px-4 py-8\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <p className=\"text-xl font-semibold text-primary\">\n            Welcome back, {userInfo?.username || 'User'}!\n          </p>\n        </div>\n\n        {/* Back Button */}\n        <IonButton\n          onClick={() => window.history.back()}\n          fill=\"outline\"\n          className=\"mb-6\"\n        >\n          <IonIcon slot=\"start\" icon={arrowBackOutline} />\n          Back\n        </IonButton>\n\n        {/* Loading State */}\n        {loading && (\n          <div className=\"flex justify-center items-center p-8\">\n            <IonSpinner name=\"circular\" />\n            <span className=\"ml-2\">Loading account details...</span>\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && !loading && (\n          <div className=\"text-red-500 text-center p-4 border border-red-500 rounded-md\">\n            {error}\n          </div>\n        )}\n\n        {/* Content: Only show if not loading and no error */}\n        {!loading && !error && userInfo && (\n          <>\n            <UserAccountFirstRow isEditing={isEditing} errors={errors} handleChange={handleChange} handleSave={handleSave} updatedInfo={updatedInfo} userInfo={userInfo} handleEdit={handleEdit} />\n            <UserAccountSecondRow isEditing={isEditing} errors={errors} handleChange={handleChange} handleSave={handleSave} updatedInfo={updatedInfo} userInfo={userInfo} expandedClass={expandedClass} toggleClassDetails={toggleClassDetails} showPasswordAlert={showPasswordAlert} setShowPasswordAlert={setShowPasswordAlert} showDeleteAlert={showDeleteAlert} setShowDeleteAlert={setShowDeleteAlert} theme={theme} setTheme={setTheme} presentToast={presentToast} />\n          </>\n        )}\n      </div>\n    </IonContent>\n  );\n};\n\nexport default UserAccount;\n","import { AuthForm } from '@/components/auth/AuthForm';\nimport ResetPass from '@/components/auth/ResetPass';\nimport { Toaster as Sonner } from '@/components/ui/sonner';\nimport { Toaster } from '@/components/ui/toaster';\nimport { TooltipProvider } from '@/components/ui/tooltip';\nimport { IonApp, IonRouterOutlet, setupIonicReact } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport ClassDetail from './pages/ClassDetail';\nimport CreateClass from './pages/CreateClass';\nimport CreateSet from './pages/CreateSet';\nimport Flashcard from './pages/Flashcard';\nimport Home from './pages/Home';\nimport Index from './pages/Index';\nimport NotFound from './pages/NotFound';\nimport PublicCards from './pages/PublicCards';\nimport PublicClasses from './pages/PublicClasses';\nimport SetOverview from './pages/SetOverview';\nimport TeacherDashboard from './pages/TeacherDashboard';\nimport UserAccount from './pages/UserAccount';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/display.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nsetupIonicReact();\n\nconst queryClient = new QueryClient();\n\n// const Home = React.lazy(() => import('./pages/Home'));\n// const PublicCards = React.lazy(() => import('./pages/PublicCards'));\n// const PublicClasses = React.lazy(() => import('./pages/PublicClasses'));\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <TooltipProvider>\n          <IonApp>\n            <IonReactRouter>\n              <Suspense fallback={<div>Loading...</div>}>\n                <IonRouterOutlet>\n                  <Route exact path=\"/\" component={Index} />\n                  <Route exact path=\"/home\" component={Home} />\n                  <Route exact path=\"/class/:id\" component={ClassDetail} />\n                  <Route exact path=\"/teacher\" component={TeacherDashboard} />\n                  <Route exact path=\"/auth\" component={AuthForm} />\n                  <Route exact path=\"/reset-password\" component={ResetPass} />\n                  <Route exact path=\"/public-cards\" component={PublicCards} />\n                  <Route exact path=\"/user-account\" component={UserAccount} />\n                  <Route exact path=\"/flashcards/:id\" component={Flashcard} />\n                  <Route exact path=\"/create-set\" component={CreateSet} />\n                  <Route exact path=\"/edit-set/:id\" component={CreateSet} />\n                  <Route exact path=\"/class/create\" component={CreateClass} />\n                  <Route\n                    exact\n                    path=\"/public-classes\"\n                    component={PublicClasses}\n                  />\n                  <Route\n                    exact\n                    path=\"/set-overview/:id\"\n                    component={SetOverview}\n                  />\n                  <Route component={NotFound} />\n                </IonRouterOutlet>\n              </Suspense>\n            </IonReactRouter>\n          </IonApp>\n          <Toaster />\n          <Sonner />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(<App />);\n"],"names":["cn","inputs","twMerge","clsx","Card","React.forwardRef","className","props","ref","jsx","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Input","type","labelVariants","cva","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","API_BASE","AuthForm","isLogin","setIsLogin","useState","isLoading","setIsLoading","email","setEmail","password","setPassword","username","setUsername","firstName","setFirstName","lastName","setLastName","errors","setErrors","ionRouter","useIonRouter","validateForm","newErrors","isValid","handleSubmit","e","response","errorData","data","error","resetForm","jsxs","Alert","AlertCircle","AlertDescription","Fragment","Link","Button","LogIn","IonButton","IonIcon","ResetPass","Toaster","theme","useTheme","Sonner","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","toasts","title","description","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","ThemeContext","createContext","ThemeProvider","children","setTheme","savedTheme","useEffect","context","useContext","defaultOpts","makeHttpCall","url","options","finalOpts","FlashCard","front","back","onAdvance","cardId","userId","isFlipped","setIsFlipped","handleScoreUpdate","endpoint","result","handleLearningClick","handleMasteredClick","Check","FlashcardCarousel","history","useHistory","flashcards","setFlashcards","selectedSet","setSelectedSet","fetchFlashcards","cards","IonGrid","IonRow","a","b","set","IonCol","IonCard","IonCardHeader","IonCardTitle","IonCardContent","arrowBackOutline","Carousel","CarouselContent","card","CarouselItem","CarouselPrevious","CarouselNext","_","Footer","IonFooter","IonToolbar","IonButtons","home","IonText","Navbar","popoverEvent","setPopoverEvent","openPopover","event","closePopover","handleMenuItemClick","route","router","_a","toggleDarkMode","IonMenu","IonHeader","IonMenuToggle","close","IonContent","IonList","IonItem","menu","IonTitle","add","IonPopover","sunny","moon","personCircle","Leaderboard","leaderboard","classUsers","entry","StudentList","students","isTeacher","onDeleteStudent","student","trashOutline","ClassDetail","useParams","currentCardIndex","setCurrentCardIndex","carouselApi","setCarouselApi","tab","setTab","setIsTeacher","classData","setClassData","flashcardSets","setFlashcardSets","setClassUsers","setError","loading","setLoading","leaderboardData","setLeaderboardData","loadingScores","setLoadingScores","isEditing","setIsEditing","updatedInfo","setUpdatedInfo","handleEdit","handleSave","fieldsToUpdate","updatePromises","field","prev","handleChange","name","value","handleCancel","fetchClass","fetchFlashcardSets","sets","fetchClassUsers","users","calculateLeaderboardScores","userScores","user","totalUserScore","setScoresResponse","sum","score","finalLeaderboard","showDeleteAlert","setShowDeleteAlert","showDeleteStudentAlert","studentId","handleDeleteStudent","IonLabel","IonInput","createOutline","IonSegment","IonSegmentButton","bookOutline","trophyOutline","peopleOutline","IonSpinner","IonAlert","CreateClass","buttonClicked","setButtonClicked","formData","setFormData","showSuccess","setShowSuccess","submitForm","IonTextarea","CreateSet","setTitle","setDescription","setCards","res","cardsData","addCard","removeCard","i","updateCard","saveSet","hasError","cleanedCards","existingCards","setResponse","setId","deleteSet","addOutline","Flashcard","fetchSetDetails","setData","fetchCards","onSelect","handleAdvance","Home","classes","setClasses","setSets","classesLoading","setClassesLoading","setsLoading","setSetsLoading","fetchClassesOfUser","fetchSetsOfUser","listOutline","cls","IonCardSubtitle","Index","NotFound","location","useLocation","PublicFlashcards","searchText","setSearchText","filteredFlashcardSets","fetchSets","IonSearchbar","PublicClasses","classItem","SetOverview","loadingCards","setLoadingCards","TeacherDashboard","isDialogOpen","setIsDialogOpen","teacherClasses","totalClasses","totalStudents","totalSets","averageCardsMastered","EditableField","InfoRow","UserAccountFirstRow","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","UserAccountSecondRow","IonSelect","IonSelectOption","UserAccount","userInfo","setUserInfo","expandedClass","setExpandedClass","showPasswordAlert","setShowPasswordAlert","toggleClassDetails","classID","presentToast","useIonToast","setupIonicReact","queryClient","QueryClient","App","QueryClientProvider","IonApp","IonReactRouter","Suspense","IonRouterOutlet","Route","PublicCards","container","root","createRoot"],"mappings":"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"}